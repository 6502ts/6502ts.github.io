{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "node_modules/async-mutex/lib/Mutex.js",
    "node_modules/async-mutex/lib/index.js",
    "node_modules/microevent.ts/lib/Event.js",
    "node_modules/microevent.ts/lib/index.js",
    "node_modules/screenfull/dist/screenfull.js",
    "node_modules/tslib/tslib.js",
    "node_modules/worker-rpc/lib/RpcProvider.js",
    "node_modules/worker-rpc/lib/index.js",
    "src/machine/cpu/BatchedAccessCpu.ts",
    "src/machine/cpu/CpuInterface.ts",
    "src/machine/cpu/Factory.ts",
    "src/machine/cpu/Instruction.ts",
    "src/machine/cpu/StateMachineCpu.ts",
    "src/machine/cpu/ops.ts",
    "src/machine/cpu/statemachine/Compiler.ts",
    "src/machine/cpu/statemachine/ResultImpl.ts",
    "src/machine/cpu/statemachine/addressing/absolute.ts",
    "src/machine/cpu/statemachine/addressing/absoluteIndexed.ts",
    "src/machine/cpu/statemachine/addressing/dereference.ts",
    "src/machine/cpu/statemachine/addressing/immediate.ts",
    "src/machine/cpu/statemachine/addressing/index.ts",
    "src/machine/cpu/statemachine/addressing/indexedIndirectX.ts",
    "src/machine/cpu/statemachine/addressing/indirect.ts",
    "src/machine/cpu/statemachine/addressing/indirectIndexedY.ts",
    "src/machine/cpu/statemachine/addressing/zeroPage.ts",
    "src/machine/cpu/statemachine/addressing/zeroPageIndexed.ts",
    "src/machine/cpu/statemachine/instruction/branch.ts",
    "src/machine/cpu/statemachine/instruction/index.ts",
    "src/machine/cpu/statemachine/instruction/jsr.ts",
    "src/machine/cpu/statemachine/instruction/nullaryOneCycle.ts",
    "src/machine/cpu/statemachine/instruction/pull.ts",
    "src/machine/cpu/statemachine/instruction/push.ts",
    "src/machine/cpu/statemachine/instruction/readModifyWrite.ts",
    "src/machine/cpu/statemachine/instruction/rti.ts",
    "src/machine/cpu/statemachine/instruction/rts.ts",
    "src/machine/cpu/statemachine/instruction/write.ts",
    "src/machine/cpu/statemachine/ops.ts",
    "src/machine/cpu/statemachine/vector/boot.ts",
    "src/machine/cpu/statemachine/vector/index.ts",
    "src/machine/cpu/statemachine/vector/interrupt.ts",
    "src/machine/io/DigitalJoystick.ts",
    "src/machine/io/Paddle.ts",
    "src/machine/io/Switch.ts",
    "src/machine/stella/Config.ts",
    "src/machine/stella/ControlPanel.ts",
    "src/machine/stella/cartridge/CartridgeInfo.ts",
    "src/machine/stella/tia/ToneGenerator.ts",
    "src/tools/AudioOutputBuffer.ts",
    "src/tools/RingBuffer.ts",
    "src/tools/base64.ts",
    "src/tools/decorators.ts",
    "src/tools/pool/Pool.ts",
    "src/tools/pool/PoolMember.ts",
    "src/web/driver/FullscreenVideo.ts",
    "src/web/driver/Gamepad.ts",
    "src/web/driver/MouseAsPaddle.ts",
    "src/web/driver/SimpleCanvasVideo.ts",
    "src/web/driver/WebAudio.ts",
    "src/web/driver/audio/LinearResampler.ts",
    "src/web/driver/audio/PCMChannel.ts",
    "src/web/driver/audio/WaveformChannel.ts",
    "src/web/driver/webgl/WebglVideo.ts",
    "src/web/driver/webgl/shader.ts",
    "src/web/embedded/stellerator/ControlPanelProxy.ts",
    "src/web/embedded/stellerator/Stellerator.ts",
    "src/web/embedded/stellerator/SwitchProxy.ts",
    "src/web/embedded/stellerator/index.ts",
    "src/web/stella/driver/KeyboardIO.ts",
    "src/web/stella/driver/TouchIO.ts",
    "src/web/stella/driver/WebAudio.ts",
    "src/web/stella/driver/touch/DoubleTapDetector.ts",
    "src/web/stella/service/DriverManager.ts",
    "src/web/stella/service/EmulationServiceInterface.ts",
    "src/web/stella/service/worker/ControlProxy.ts",
    "src/web/stella/service/worker/EmulationContext.ts",
    "src/web/stella/service/worker/EmulationService.ts",
    "src/web/stella/service/worker/PCMAudioProxy.ts",
    "src/web/stella/service/worker/VideoProxy.ts",
    "src/web/stella/service/worker/WaveformAudioProxy.ts",
    "src/web/stella/service/worker/messages.ts"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5EA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxnvKA;AACA;AACA;AACA;;;;ACkBA,6CAAwC;AAExC,+CAA0C;AAC1C,2BAA6B;AAQ7B,SAAgB,MAAM,CAAC,KAAyB,EAAE,GAAiB;IAC/D,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACnC,CAAC;AAFD,wBAEC;AAED,SAAS,iBAAiB,CAAC,KAAyB,EAAE,GAAiB,EAAE,MAAc;IACnF,IAAM,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC;IAE3B,IAAI,KAAK,CAAC,GAAG,EAAE;QACX,MAAM,GAAG,MAAM,CAAC;KACnB;IAED,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;IAE9B,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,EAAE,CAAC,UAAU,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACvD,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAClC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,EAAE,UAAU,GAAG,IAAI,CAAC,CAAC;IAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAElC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,EAAE,KAAK,CAAC,KAAK,GAAG,GAAqB,CAAC,CAAC;IACjE,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAElC,KAAK,CAAC,KAAK,KAAwB,CAAC;IAEpC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACnC,CAAC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB;IAC9D,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;AAC1C,CAAC;AAFD,sBAEC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB;IAC9D,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;AAC1C,CAAC;AAFD,sBAEC;AAED;IACI,0BAAoB,IAAkB,EAAU,IAAmB;QAA/C,SAAI,GAAJ,IAAI,CAAc;QAAU,SAAI,GAAJ,IAAI,CAAe;QAuuBnE,mBAAc,KAAiE;QAC/E,UAAK,GAAuB,IAAI,sBAAY,CAAC,KAAK,EAAE,CAAC;QAE7C,cAAS,GAAW,CAAC,CAAC;QACtB,yBAAoB,GAAiC,IAAI,CAAC;QAC1D,gCAA2B,GAAqD,IAAI,CAAC;QAErF,sBAAiB,GAAY,KAAK,CAAC;QACnC,gBAAW,GAAY,KAAK,CAAC;QAC7B,mBAAc,KAAmC;QAEjD,YAAO,GAAY,KAAK,CAAC;QAEzB,aAAQ,GAAW,CAAC,CAAC;QACrB,4BAAuB,GAAW,CAAC,CAAC;QACpC,2BAAsB,MAAkE;QAExF,iBAAY,GAAG,KAAK,CAAC;QAvvBzB,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAED,uCAAY,GAAZ,UAAa,GAAY;QACrB,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC7B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,sCAAW,GAAX;QACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAClC,CAAC;IAED,8BAAG,GAAH;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,+BAAI,GAAJ;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,iCAAM,GAAN;QACI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,iCAAM,GAAN;QACI,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,wDAA6B,GAA7B,UAA8B,QAA0D;QACpF,IAAI,CAAC,2BAA2B,GAAG,QAAQ,CAAC;QAC5C,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,wDAA6B,GAA7B;QACI,OAAO,IAAI,CAAC,2BAA2B,CAAC;IAC5C,CAAC;IAED,oDAAyB,GAAzB;QACI,OAAO,IAAI,CAAC,uBAAuB,CAAC;IACxC,CAAC;IAED,gCAAK,GAAL;QACI,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,KAAK,CAAC,KAAK;YACZ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAuB,KAAuB,KAAuB,CAAC;QAC/G,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;QAEvB,IAAI,CAAC,cAAc,IAAmC,CAAC;QACvD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC;QAEnC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,gCAAK,GAAL;QACI,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,OAAO,IAAI,CAAC;SACf;QAED,QAAQ,IAAI,CAAC,cAAc,EAAE;YACzB,OAAsC;YACtC;gBACI,IAAI,EAAE,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;oBACxB,IAAI,IAAI,CAAC,YAAY,EAAE;wBACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBACjD;oBAED,IAAI,IAAI,CAAC,cAAc,MAA4B,EAAE;wBACjD,IAAI,CAAC,mBAAmB,EAAE,CAAC;qBAC9B;oBAED,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;oBAC7F,IAAI,CAAC,cAAc,IAAoC,CAAC;oBAExD,IAAI,IAAI,CAAC,cAAc,MAAoC,EAAE;wBACzD,IAAI,CAAC,mBAAmB,EAAE,CAAC;qBAC9B;iBACJ;gBAED,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;oBAChB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;oBACxC,IAAI,CAAC,cAAc,IAA0B,CAAC;oBAC9C,IAAI,CAAC,cAAc,IAAsC,CAAC;oBAE1D,OAAO,IAAI,CAAC;iBACf;gBAED,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;oBAChB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;oBACxC,IAAI,CAAC,cAAc,IAA0B,CAAC;oBAC9C,IAAI,CAAC,cAAc,IAAsC,CAAC;oBAE1D,OAAO,IAAI,CAAC;iBACf;gBAED,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,MAAM;SACb;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,iCAAM,GAAd;QACI,IAAM,WAAW,GAAG,qBAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAEtE,IAAI,cAAc,GAAG,WAAW,CAAC,cAAc,EAC3C,WAAW,GAAG,KAAK,EACnB,iBAAiB,GAAG,KAAK,CAAC;QAE9B,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,sBAAsB,GAAG,cAAc,CAAC;QAC7C,IAAI,CAAC,cAAc,IAAkC,CAAC;QAEtD,QAAQ,WAAW,CAAC,SAAS,EAAE;YAC3B;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,cAAc,MAAuC,EAAE;oBACvD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,QAAQ,CAAC;iBAC5C;qBAAM;oBACH,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,QAAQ,CAAC;oBACzC,iBAAiB,GAAG,IAAI,CAAC;iBAC5B;gBACD,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAuB,EAAE;oBACzC,cAAc,IAAqC,CAAC;oBACpD,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;oBACtC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;oBAC3C,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;qBAAM;oBACH,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;oBACtC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;gBACD,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAuB,EAAE;oBACzC,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;oBACtC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;qBAAM;oBACH,cAAc,IAAqC,CAAC;oBACpD,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;oBACtC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;oBAC3C,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;gBACD,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAuB,EAAE;oBACzC,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;oBACtC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;qBAAM;oBACH,cAAc,IAAqC,CAAC;oBACpD,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;oBACtC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;oBAC3C,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;gBACD,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,MAAuB,EAAE;oBACzC,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;oBACtC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;qBAAM;oBACH,cAAc,IAAqC,CAAC;oBACpD,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;oBACtC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;oBAC3C,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;gBACD,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAuB,EAAE;oBACzC,cAAc,IAAqC,CAAC;oBACpD,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;oBACtC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;oBAC3C,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;qBAAM;oBACH,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;oBACtC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;gBACD,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,MAAuB,EAAE;oBACzC,cAAc,IAAqC,CAAC;oBACpD,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;oBACtC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;oBAC3C,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;qBAAM;oBACH,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;oBACtC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;gBACD,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,KAAuB,EAAE;oBACzC,cAAc,IAAqC,CAAC;oBACpD,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;oBACtC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;oBAC3C,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;qBAAM;oBACH,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;oBACtC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;gBACD,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,KAAuB,EAAE;oBACzC,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;oBACtC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;qBAAM;oBACH,cAAc,IAAqC,CAAC;oBACpD,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;oBACtC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;oBAC3C,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;gBACD,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,IAAI,CAAC,cAAc,IAA0B,CAAC;gBAC9C,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,IAAI,CAAC,cAAc,IAA0B,CAAC;gBAC9C,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,iBAAiB,GAAG,IAAI,CAAC;gBACzB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,iBAAiB,GAAG,IAAI,CAAC;gBACzB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,cAAc,MAAyC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjF,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,cAAc,MAAyC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjF,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,cAAc,MAAyC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjF,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,cAAc,MAAuC,EAAE;oBACvD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,QAAQ,CAAC;iBAC5C;qBAAM;oBACH,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,QAAQ,CAAC;oBACzC,iBAAiB,GAAG,IAAI,CAAC;iBAC5B;gBACD,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBAEnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV,QAA+B;YAC/B;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,WAAW,GAAG,IAAI,CAAC;gBAEnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,IAAI,CAAC,cAAc,IAA0B,CAAC;gBAC9C,MAAM;YAEV;gBACI,IAAI,cAAc,MAAuC,EAAE;oBACvD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,QAAQ,CAAC;iBAC5C;qBAAM;oBACH,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,QAAQ,CAAC;oBACzC,iBAAiB,GAAG,IAAI,CAAC;iBAC5B;gBACD,MAAM;YAEV;gBACI,IAAI,cAAc,MAAuC,EAAE;oBACvD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,QAAQ,CAAC;iBAC5C;qBAAM;oBACH,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,QAAQ,CAAC;oBACzC,iBAAiB,GAAG,IAAI,CAAC;iBAC5B;gBACD,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,IAAI,CAAC,cAAc,IAA0B,CAAC;gBAC9C,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,iBAAiB,GAAG,IAAI,CAAC;gBACzB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,iBAAiB,GAAG,IAAI,CAAC;gBACzB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,iBAAiB,GAAG,IAAI,CAAC;gBACzB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,iBAAiB,GAAG,IAAI,CAAC;gBACzB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,iBAAiB,GAAG,IAAI,CAAC;gBACzB,WAAW,GAAG,KAAK,CAAC;gBACpB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,iBAAiB,GAAG,IAAI,CAAC;gBACzB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,WAAW,GAAG,KAAK,CAAC;gBACpB,iBAAiB,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,WAAW,GAAG,KAAK,CAAC;gBACpB,iBAAiB,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtC,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,2BAA2B,EAAE;oBAClC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC;iBAC1C;gBACD,OAAO;SACd;QAED,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;QAE3C,IAAI,KAAa,EAAE,IAAY,CAAC;QAEhC,QAAQ,cAAc,EAAE;YACpB;gBACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC7C,WAAW,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,MAAM;YAEV;gBACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC7C,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,MAAM;YAEV;gBACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACjD,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;gBACpB,MAAM;YAEV;gBACI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE;oBACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;iBACjF;qBAAM;oBACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;iBAC7C;gBACD,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;gBACpB,MAAM;YAEV;gBACI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACrC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBACtD,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,OAAO,CAAC,GAAG,MAAM,CAAC;gBAC1D,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/E,MAAM;YAEV;gBACI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAErB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;gBAC7C,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;gBACpB,MAAM;YAEV;gBACI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;gBAEhD,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,EAAE;oBAC/C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;iBAC7D;gBAED,IAAI,CAAC,SAAS,IAAI,iBAAiB,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7F,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,MAAM;YAEV;gBACI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAErB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;gBAC7C,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;gBACpB,MAAM;YAEV;gBACI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;gBAEhD,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,EAAE;oBAC/C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;iBAC7D;gBAED,IAAI,CAAC,SAAS,IAAI,iBAAiB,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7F,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,MAAM;YAEV;gBACI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAErB,KAAK,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;gBAErC,IAAI,KAAK,KAAK,IAAI,EAAE;oBAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;iBACtE;qBAAM;oBACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;iBAC7C;gBAED,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;gBACpB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,MAAM;YAEV;gBACI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAErC,IAAI,KAAK,KAAK,IAAI,EAAE;oBAChB,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;iBAC9D;qBAAM;oBACH,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;iBACrC;gBAED,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;gBAEhD,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,EAAE;oBAC/C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;iBAC7D;gBAED,IAAI,CAAC,SAAS,IAAI,iBAAiB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7F,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,MAAM;SACb;QAED,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,WAAW,EAAE;YACb,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;QAED,IAAI,CAAC,cAAc,IAAsC,CAAC;IAC9D,CAAC;IAEO,8CAAmB,GAA3B;QACI,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SAC5B;QAED,IAAI,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,EAAE;YACzF,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;SACzB;IACL,CAAC;IAoBL,uBAAC;AAAD,CA1vBA,AA0vBC,IAAA;AAW4B,mCAAO;;;;;ACvxBpC,IAAU,YAAY,CAiCrB;AAjCD,WAAU,YAAY;IAOlB;QAAA;YACI,MAAC,GAAW,CAAC,CAAC;YACd,MAAC,GAAW,CAAC,CAAC;YACd,MAAC,GAAW,CAAC,CAAC;YACd,MAAC,GAAW,CAAC,CAAC;YACd,MAAC,GAAW,CAAC,CAAC;YACd,UAAK,GAAW,CAAC,CAAC;YAElB,QAAG,GAAG,KAAK,CAAC;YACZ,QAAG,GAAG,KAAK,CAAC;QAChB,CAAC;QAAD,YAAC;IAAD,CAVA,AAUC,IAAA;IAVY,kBAAK,QAUjB,CAAA;AAgBL,CAAC,EAjCS,YAAY,KAAZ,YAAY,QAiCrB;AAEwB,+BAAO;;;;;AC3DhC,qDAAgD;AAChD,uDAAkD;AAElD;IACI,iBAAoB,KAAmB;QAAnB,UAAK,GAAL,KAAK,CAAc;IAAG,CAAC;IAE3C,wBAAM,GAAN,UAAO,GAAiB,EAAE,GAAkB;QACxC,QAAQ,IAAI,CAAC,KAAK,EAAE;YAChB,KAAK,OAAO,CAAC,IAAI,CAAC,YAAY;gBAC1B,OAAO,IAAI,yBAAe,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAEzC,KAAK,OAAO,CAAC,IAAI,CAAC,aAAa;gBAC3B,OAAO,IAAI,0BAAgB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAE1C;gBACI,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;SAC3C;IACL,CAAC;IACL,cAAC;AAAD,CAfA,AAeC,IAAA;AAED,WAAU,OAAO;IACb,IAAY,IAGX;IAHD,WAAY,IAAI;QACZ,+CAAY,CAAA;QACZ,iDAAa,CAAA;IACjB,CAAC,EAHW,IAAI,GAAJ,YAAI,KAAJ,YAAI,QAGf;AACL,CAAC,EALS,OAAO,KAAP,OAAO,QAKhB;AAED,kBAAe,OAAO,CAAC;;;;;AC9BvB;IACI,qBACoB,SAAgC,EAChC,cAA0C,EAC1C,uBAAwC;QAAxC,wCAAA,EAAA,wCAAwC;QAFxC,cAAS,GAAT,SAAS,CAAuB;QAChC,mBAAc,GAAd,cAAc,CAA4B;QAC1C,4BAAuB,GAAvB,uBAAuB,CAAiB;IACzD,CAAC;IAEJ,6BAAO,GAAP;QACI,QAAQ,IAAI,CAAC,uBAAuB,EAAE;YAClC,OAA0C;YAC1C,OAAyC;YACzC,OAA0C;YAC1C,OAA0C;YAC1C,OAAiD;YACjD,QAAiD;YACjD;gBACI,OAAO,CAAC,CAAC;YAEb,OAAyC;YACzC,OAA0C;YAC1C,QAA0C;YAC1C;gBACI,OAAO,CAAC,CAAC;YAEb;gBACI,OAAO,CAAC,CAAC;SAChB;IACL,CAAC;IACL,kBAAC;AAAD,CA5BA,AA4BC,IAAA;AA8KuB,8BAAO;AA5K/B,WAAU,WAAW;IA6EjB,IAAY,YA0EX;IA1ED,WAAY,YAAY;QACpB,6CAAG,CAAA;QACH,6CAAG,CAAA;QACH,6CAAG,CAAA;QACH,6CAAG,CAAA;QACH,6CAAG,CAAA;QACH,6CAAG,CAAA;QACH,6CAAG,CAAA;QACH,6CAAG,CAAA;QACH,6CAAG,CAAA;QACH,6CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QAEH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,sDAAO,CAAA;IACX,CAAC,EA1EW,YAAY,GAAZ,wBAAY,KAAZ,wBAAY,QA0EvB;IAkBY,mBAAO,GAAG,IAAI,KAAK,CAAc,GAAG,CAAC,CAAC;AACvD,CAAC,EA1KS,WAAW,KAAX,WAAW,QA0KpB;AAEuB,8BAAO;AAI/B,WAAU,WAAW;IACjB,IAAiB,MAAM,CA+RtB;IA/RD,WAAiB,MAAM;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1B,YAAA,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,WAAW,QAA2C,CAAC;SAC3E;QAED,IAAI,SAAoB,EAAE,cAA8B,EAAE,MAAc,CAAC;QAEzE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACxB,QAAQ,CAAC,EAAE;gBACP,KAAK,CAAC;oBACF,SAAS,KAAgB,CAAC;oBAC1B,MAAM;gBACV,KAAK,CAAC;oBACF,SAAS,IAAgB,CAAC;oBAC1B,MAAM;gBACV,KAAK,CAAC;oBACF,SAAS,KAAgB,CAAC;oBAC1B,MAAM;gBACV,KAAK,CAAC;oBACF,SAAS,IAAgB,CAAC;oBAC1B,MAAM;gBACV,KAAK,CAAC;oBACF,SAAS,KAAgB,CAAC;oBAC1B,MAAM;gBACV,KAAK,CAAC;oBACF,SAAS,KAAgB,CAAC;oBAC1B,MAAM;gBACV,KAAK,CAAC;oBACF,SAAS,KAAgB,CAAC;oBAC1B,MAAM;gBACV,KAAK,CAAC;oBACF,SAAS,KAAgB,CAAC;oBAC1B,MAAM;aACb;YACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACxB,QAAQ,CAAC,EAAE;oBACP,KAAK,CAAC;wBACF,cAAc,IAAkC,CAAC;wBACjD,MAAM;oBACV,KAAK,CAAC;wBACF,cAAc,IAA0B,CAAC;wBACzC,MAAM;oBACV,KAAK,CAAC;wBACF,cAAc,IAA2B,CAAC;wBAC1C,MAAM;oBACV,KAAK,CAAC;wBACF,cAAc,IAA0B,CAAC;wBACzC,MAAM;oBACV,KAAK,CAAC;wBACF,cAAc,KAAkC,CAAC;wBACjD,MAAM;oBACV,KAAK,CAAC;wBACF,cAAc,IAA2B,CAAC;wBAC1C,MAAM;oBACV,KAAK,CAAC;wBACF,cAAc,KAA2B,CAAC;wBAC1C,MAAM;oBACV,KAAK,CAAC;wBACF,cAAc,IAA2B,CAAC;wBAC1C,MAAM;iBACb;gBAED,IAAI,SAAS,OAAkB,IAAI,cAAc,MAA6B,EAAE;oBAC5E,cAAc,KAAyB,CAAC;iBAC3C;gBAED,IAAI,SAAS,OAAsB,IAAI,cAAc,OAA2B,EAAE;oBAC9E,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;oBACjC,YAAA,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;iBAChE;aACJ;SACJ;QAED,SAAS,GAAG,CACR,OAAe,EACf,UAAqB,EACrB,eAA+B,EAC/B,uBAAwC;YAExC,IAAI,YAAA,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,OAAsB,EAAE;gBAClD,MAAM,IAAI,KAAK,CAAC,mBAAmB,GAAG,OAAO,GAAG,iBAAiB,CAAC,CAAC;aACtE;YAED,YAAA,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,WAAW,CAAC,UAAU,EAAE,eAAe,EAAE,uBAAuB,CAAC,CAAC;QAC7F,CAAC;QAED,GAAG,CAAC,IAAI,OAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,OAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,OAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,OAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,OAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,SAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,OAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,OAAyC,CAAC;QAElD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAElD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAElD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAElD,GAAG,CAAC,IAAI,OAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,OAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,OAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,OAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,OAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,OAAyC,CAAC;QAElD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,WAAiE,CAAC;QAC1E,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QAGjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QAEjD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,SAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAiD,CAAC;QAC1D,GAAG,CAAC,IAAI,SAAiD,CAAC;QAE1D,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,SAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAiD,CAAC;QAC1D,GAAG,CAAC,IAAI,SAAiD,CAAC;QAE1D,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,SAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAiD,CAAC;QAC1D,GAAG,CAAC,IAAI,SAAiD,CAAC;QAE1D,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAiD,CAAC;QAC1D,GAAG,CAAC,IAAI,QAAyC,CAAC;QAElD,GAAG,CAAC,IAAI,SAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,SAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAiD,CAAC;QAC1D,GAAG,CAAC,IAAI,SAAiD,CAAC;QAE1D,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,SAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAiD,CAAC;QAC1D,GAAG,CAAC,IAAI,SAAiD,CAAC;QAE1D,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,SAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAiD,CAAC;QAC1D,GAAG,CAAC,IAAI,SAAiD,CAAC;IAC9D,CAAC,EA/RgB,MAAM,GAAN,kBAAM,KAAN,kBAAM,QA+RtB;AACL,CAAC,EAjSS,WAAW,KAAX,WAAW,QAiSpB;AArSuB,8BAAO;;;;;AC1M/B,+CAA0C;AAI1C,gDAAuD;AACvD,oDAA+C;AAE/C;IACI,yBAAoB,IAAkB,EAAU,IAAmB;QAA/C,SAAI,GAAJ,IAAI,CAAc;QAAU,SAAI,GAAJ,IAAI,CAAe;QA2KnE,mBAAc,KAAoC;QAClD,UAAK,GAAG,IAAI,sBAAY,CAAC,KAAK,EAAE,CAAC;QAEzB,gCAA2B,GAAqD,IAAI,CAAC;QAGrF,sBAAiB,GAAG,KAAK,CAAC;QAC1B,gBAAW,GAAG,KAAK,CAAC;QACpB,UAAK,GAAG,KAAK,CAAC;QACd,wCAAmC,GAAG,KAAK,CAAC;QAE5C,4BAAuB,GAAG,CAAC,CAAC;QAK5B,gBAAW,GAAG,IAAI,KAAK,CAAwB,GAAG,CAAC,CAAC;QA1LxD,IAAI,CAAC,OAAO,GAAG,aAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,YAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAG,YAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE9B,IAAM,QAAQ,GAAG,IAAI,kBAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE;YAC7B,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;SAC/C;QAED,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAED,+BAAK,GAAL;QACI,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,KAAK,CAAC,KAAK;YACZ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAuB,KAAuB,KAAuB,CAAC;QAC/G,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;QAEvB,IAAI,CAAC,cAAc,IAAmC,CAAC;QACvD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACjD,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC;QAEjC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,sCAAY,GAAZ,UAAa,CAAU;QACnB,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAE3B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,qCAAW,GAAX;QACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAClC,CAAC;IAED,6BAAG,GAAH;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,8BAAI,GAAJ;QACI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,gCAAM,GAAN;QACI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,gCAAM,GAAN;QACI,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,uDAA6B,GAA7B,UAA8B,QAA0D;QACpF,IAAI,CAAC,2BAA2B,GAAG,QAAQ,CAAC;QAE5C,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,uDAA6B,GAA7B;QACI,OAAO,IAAI,CAAC,2BAA2B,CAAC;IAC5C,CAAC;IAED,mDAAyB,GAAzB;QACI,OAAO,IAAI,CAAC,uBAAuB,CAAC;IACxC,CAAC;IAED,+BAAK,GAAL;QACI,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,MAAyC,CAAC,EAAE;YAC1G,OAAO,IAAI,CAAC;SACf;QAED,IAAI,IAAI,CAAC,cAAc,MAAsC,EAAE;YAC3D,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,OAAO,IAAI,CAAC;SACf;QAED,IAAI,KAAa,CAAC;QAElB,QAAQ,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;YAChC;gBACI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBACjD,MAAM;YAEV;gBACI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBAC/B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBACjD,MAAM;YAEV;gBACI,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;SAC7C;QAED,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE;YACjC,IAAI,CAAC,eAAe,EAAE,CAAC;YAEvB,IAAI,CAAC,WAAW,CAAC,cAAc,GAAG,KAAK,CAAC;YACxC,IAAI,CAAC,mCAAmC,GAAG,KAAK,CAAC;SACpD;QAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;YAC3B,IAAI,CAAC,cAAc,IAAoC,CAAC;SAC3D;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,gCAAM,GAAd;QACI,IAAI,IAAI,CAAC,mCAAmC,EAAE;YAC1C,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;QAED,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAE5C,IAAI,SAAgC,CAAC;QACrC,IAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAE5C,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;YAChB,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;YACxB,IAAI,CAAC,mCAAmC,GAAG,KAAK,CAAC;SACpD;aAAM,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;YACvB,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;YACxB,IAAI,CAAC,mCAAmC,GAAG,KAAK,CAAC;SACpD;aAAM;YACH,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACrC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;YAC3C,IAAI,CAAC,mCAAmC,GAAG,IAAI,CAAC;SACnD;QAED,IAAI,CAAC,SAAS,EAAE;YACZ,IAAI,IAAI,CAAC,2BAA2B,EAAE;gBAClC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC;aAC1C;YAED,OAAO;SACV;QAED,IAAI,CAAC,cAAc,IAAsC,CAAC;QAE1D,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IAClD,CAAC;IAEO,yCAAe,GAAvB;QACI,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;QAEvB,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAEzB,OAAO;SACV;QAED,IAAI,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,EAAE;YACzF,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;SACzB;IACL,CAAC;IAmBL,sBAAC;AAAD,CA7LA,AA6LC,IAAA;AAED,kBAAe,eAAe,CAAC;;;;;AClM/B,SAAS,qBAAqB,CAAC,KAAyB,EAAE,GAAiB;IACvE,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAClC,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,KAAuB,CAAC,GAAG,GAAqB,CAAC;AAC9F,CAAC;AAED,SAAS,UAAU,CAAC,KAAyB,EAAE,OAAe;IAC1D,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,CAAC,CAAC;YAC9D,CAAC,OAAO,GAAG,IAAI,CAAC;YAChB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC,CAAC;AAC7C,CAAC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,IAAI,KAAK,CAAC,KAAK,IAAuB,EAAE;QACpC,IAAM,EAAE,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,EACjF,EAAE,GAAG,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE9D,KAAK,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;QAEnC,KAAK,CAAC,KAAK;YACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;gBACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;gBAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;gBACpC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAsB,CAAC,CAAC,CAAC,CAAC,CAAC;KAC3C;SAAM;QACH,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,EAChE,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC;QAExB,KAAK,CAAC,KAAK;YACP,CAAC,KAAK,CAAC,KAAK;gBACR,CAAC,CAAC,OAA2C,IAAuB,KAAuB,CAAC,CAAC;gBACjG,CAAC,MAAM,GAAG,IAAI,CAAC;gBACf,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;gBACnC,CAAC,GAAG,KAAK,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAE/D,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;KACpB;AACL,CAAC;AA1BD,sBA0BC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC;IACnB,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAHD,sBAGC;AAED,SAAgB,QAAQ,CAAC,KAAyB;IAC9C,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;IACpB,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAEhC,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACpC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AACpB,CAAC;AATD,4BASC;AAED,SAAgB,QAAQ,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAClF,IAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EACzB,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9B,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAE1B,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,GAAG,IAAI,CAAC;YACd,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YAClC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AACpB,CAAC;AAVD,4BAUC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,QAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,OAAO,GAAG,CAAC,QAA2C,CAAC,CAAC;YACzD,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC,CAAC;AACvD,CAAC;AALD,sBAKC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB;IAC9D,IAAM,UAAU,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;IAC1C,IAAI,MAAM,GAAG,MAAM,CAAC;IAEpB,IAAI,KAAK,CAAC,GAAG,EAAE;QACX,MAAM,GAAG,MAAM,CAAC;QAChB,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;KACrB;IAED,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;IAE9B,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,EAAE,CAAC,UAAU,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACvD,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAClC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,EAAE,UAAU,GAAG,IAAI,CAAC,CAAC;IAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAElC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,EAAE,KAAK,CAAC,KAAK,KAAuB,CAAC,CAAC;IAChE,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAElC,KAAK,CAAC,KAAK,KAAwB,CAAC;IAEpC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACnC,CAAC;AAtBD,sBAsBC;AAED,SAAgB,KAAK,CAAC,KAAyB;IAC3C,KAAK,CAAC,KAAK,IAAI,EAAqB,CAAC;AACzC,CAAC;AAFD,sBAEC;AAED,SAAgB,KAAK,CAAC,KAAyB;IAC3C,KAAK,CAAC,KAAK,IAAI,EAAqB,CAAC;AACzC,CAAC;AAFD,sBAEC;AAED,SAAgB,KAAK,CAAC,KAAyB;IAC3C,KAAK,CAAC,KAAK,IAAI,EAAqB,CAAC;AACzC,CAAC;AAFD,sBAEC;AAED,SAAgB,KAAK,CAAC,KAAyB;IAC3C,KAAK,CAAC,KAAK,IAAI,GAAqB,CAAC;AACzC,CAAC;AAFD,sBAEC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAE7C,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,IAAI,GAAG,IAAI,CAAC;YACb,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACxC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;AACrB,CAAC;AARD,sBAQC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAE7C,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,IAAI,GAAG,IAAI,CAAC;YACb,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACxC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;AACrB,CAAC;AARD,sBAQC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAE7C,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,IAAI,GAAG,IAAI,CAAC;YACb,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACxC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;AACrB,CAAC;AARD,sBAQC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,IAAM,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC1B,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC7B,CAAC;AAJD,sBAIC;AAED,SAAgB,KAAK,CAAC,KAAyB;IAC3C,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAClC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAHD,sBAGC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC;IAC5B,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAHD,sBAGC;AAED,SAAgB,KAAK,CAAC,KAAyB;IAC3C,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAClC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAHD,sBAGC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,IAAM,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC1B,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC7B,CAAC;AAJD,sBAIC;AAED,SAAgB,KAAK,CAAC,KAAyB;IAC3C,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAClC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAHD,sBAGC;AAED,SAAgB,KAAK,CAAC,KAAyB;IAC3C,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAClC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAHD,sBAGC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC;AACtB,CAAC;AAFD,sBAEC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,IAAM,SAAS,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,EACpC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAE/B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3B,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,EAAE,SAAS,KAAK,CAAC,CAAC,CAAC;IAC7C,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAClC,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,EAAE,SAAS,GAAG,IAAI,CAAC,CAAC;IAC9C,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAElC,KAAK,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/D,CAAC;AAXD,sBAWC;AAED,SAAgB,KAAK,CACjB,KAAyB,EACzB,GAAiB,EACjB,OAAe,EACf,cAA0C;IAE1C,KAAK,CAAC,CAAC,GAAG,cAAc,MAAyC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChG,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AARD,sBAQC;AAED,SAAgB,KAAK,CACjB,KAAyB,EACzB,GAAiB,EACjB,OAAe,EACf,cAA0C;IAE1C,KAAK,CAAC,CAAC,GAAG,cAAc,MAAyC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChG,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AARD,sBAQC;AAED,SAAgB,KAAK,CACjB,KAAyB,EACzB,GAAiB,EACjB,OAAe,EACf,cAA0C;IAE1C,KAAK,CAAC,CAAC,GAAG,cAAc,MAAyC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChG,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AARD,sBAQC;AAED,SAAgB,QAAQ,CAAC,KAAyB;IAC9C,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;IACpB,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;IAExB,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACpC,CAAC,GAAG,IAAuB,CAAC,CAAC;AACrC,CAAC;AATD,4BASC;AAED,SAAgB,QAAQ,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAClF,IAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EACzB,KAAK,GAAG,GAAG,KAAK,CAAC,CAAC;IACtB,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAE1B,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,GAAG,IAAI,CAAC;YACd,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YAClC,CAAC,GAAG,IAAuB,CAAC,CAAC;AACrC,CAAC;AAVD,4BAUC;AAED,SAAgB,KAAK,KAAU,CAAC;AAAhC,sBAAgC;AAEhC,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC;IACnB,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAHD,sBAGC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB;IAC9D,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,KAAuB,CAAC,CAAC;IAChE,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;AACtC,CAAC;AAHD,sBAGC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB;IAC9D,qBAAqB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACtC,CAAC;AAFD,sBAEC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB;IAC9D,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IACrC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;AACtC,CAAC;AAHD,sBAGC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB;IAC9D,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAClC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACrC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAJD,sBAIC;AAED,SAAgB,QAAQ,CAAC,KAAyB;IAC9C,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;IACpB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,CAAC;IAEzE,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACpC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AACpB,CAAC;AATD,4BASC;AAED,SAAgB,QAAQ,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAClF,IAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EACzB,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,CAAC;IACvE,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAE1B,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,GAAG,IAAI,CAAC;YACd,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YAClC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AACpB,CAAC;AAVD,4BAUC;AAED,SAAgB,QAAQ,CAAC,KAAyB;IAC9C,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;IACpB,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,IAAI,CAAC,CAAC,CAAC;IAExE,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACpC,CAAC,GAAG,IAAuB,CAAC,CAAC;AACrC,CAAC;AATD,4BASC;AAED,SAAgB,QAAQ,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAClF,IAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EACzB,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,IAAI,CAAC,CAAC,CAAC;IACtE,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAE1B,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,GAAG,IAAI,CAAC;YACd,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YAClC,CAAC,GAAG,IAAuB,CAAC,CAAC;AACrC,CAAC;AAVD,4BAUC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB;IAC9D,IAAI,SAAiB,CAAC;IAEtB,qBAAqB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAElC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAC/B,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACvC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAC/B,SAAS,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAE7C,KAAK,CAAC,CAAC,GAAG,SAAS,CAAC;AACxB,CAAC;AAXD,sBAWC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB;IAC9D,IAAI,SAAiB,CAAC;IAEtB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3B,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAC/B,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACvC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAC/B,SAAS,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAE7C,KAAK,CAAC,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;AACvC,CAAC;AAVD,sBAUC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,IAAI,KAAK,CAAC,KAAK,IAAuB,EAAE;QACpC,IAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,EAClF,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE9D,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;QAEnE,KAAK,CAAC,KAAK;YACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;gBACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;gBAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;gBACpC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC,CAAC;KAC3C;SAAM;QACH,OAAO,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;QAE1B,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,EAChE,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC;QAExB,KAAK,CAAC,KAAK;YACP,CAAC,KAAK,CAAC,KAAK;gBACR,CAAC,CAAC,OAA2C,IAAuB,KAAuB,CAAC,CAAC;gBACjG,CAAC,MAAM,GAAG,IAAI,CAAC;gBACf,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;gBACnC,CAAC,GAAG,KAAK,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAE/D,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;KACpB;AACL,CAAC;AA5BD,sBA4BC;AAED,SAAgB,KAAK,CAAC,KAAyB;IAC3C,KAAK,CAAC,KAAK,KAAwB,CAAC;AACxC,CAAC;AAFD,sBAEC;AAED,SAAgB,KAAK,CAAC,KAAyB;IAC3C,KAAK,CAAC,KAAK,KAAwB,CAAC;AACxC,CAAC;AAFD,sBAEC;AAED,SAAgB,KAAK,CAAC,KAAyB;IAC3C,KAAK,CAAC,KAAK,KAAwB,CAAC;AACxC,CAAC;AAFD,sBAEC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC;AAFD,sBAEC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC;AAFD,sBAEC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC;AAFD,sBAEC;AAED,SAAgB,KAAK,CAAC,KAAyB;IAC3C,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAClB,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAHD,sBAGC;AAED,SAAgB,KAAK,CAAC,KAAyB;IAC3C,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAClB,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAHD,sBAGC;AAED,SAAgB,KAAK,CAAC,KAAyB;IAC3C,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAClB,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAHD,sBAGC;AAED,SAAgB,KAAK,CAAC,KAAyB;IAC3C,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAClB,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAHD,sBAGC;AAED,SAAgB,KAAK,CAAC,KAAyB;IAC3C,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AACtB,CAAC;AAFD,sBAEC;AAED,SAAgB,KAAK,CAAC,KAAyB;IAC3C,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAClB,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAHD,sBAGC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC;IAC5B,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAElB,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACpC,CAAC,CAAC,IAAuB,CAAC,CAAC;AACnC,CAAC;AATD,sBASC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,IAAM,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAE1D,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;IAEvB,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YAC3C,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;AACtB,CAAC;AAVD,sBAUC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,IAAM,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAE1B,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAE3C,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,IAAI,GAAG,IAAI,CAAC;YACb,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACxC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;AACrB,CAAC;AAXD,sBAWC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC;IAClB,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC;IAClB,UAAU,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AAC/B,CAAC;AAJD,sBAIC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAExF,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,KAAuB,CAAC,CAAC;YAC5G,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACpC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC;AATD,sBASC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,IAAI,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9B,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,EAAqB,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;IACpE,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAE5B,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAE1B,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;IAC1B,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AATD,sBASC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,IAAM,KAAK,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAChC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC1B,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC7B,CAAC;AAJD,sBAIC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC;IAChD,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAHD,sBAGC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,IAAM,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAE1B,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AAC7B,CAAC;AALD,sBAKC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC;IACnB,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3B,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,EAAqB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACnF,CAAC;AAJD,sBAIC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC;IACnB,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAClB,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAJD,sBAIC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,IAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EACzB,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,IAAI,CAAC,CAAC,CAAC;IACtE,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAE1B,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,EAAqB,CAAC,GAAG,CAAC,GAAG,IAAuB,CAAC,CAAC;IAEnF,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AAC7B,CAAC;AARD,sBAQC;AAED,SAAgB,KAAK,CAAC,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC/E,IAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EACzB,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,CAAC;IACvE,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAE1B,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,EAAqB,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAElE,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AAC7B,CAAC;AARD,sBAQC;;;;;ACniBD,8CAAyC;AACzC,2CAWsB;AACtB,6CAA2G;AAC3G,2BAA6B;AAC7B,kDAAiD;AAEjD,mCAA+B;AAE/B;IACI,kBAA6B,MAA0B;QAA1B,WAAM,GAAN,MAAM,CAAoB;IAAG,CAAC;IAE3D,0BAAO,GAAP,UAAQ,EAAU;QACd,IAAM,WAAW,GAAG,qBAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAE5C,QAAQ,WAAW,CAAC,SAAS,EAAE;YAC3B;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,EAAE,GAAG,CAAC,GAAG,EAAE;oBAC/D,KAAK,EAAE,IAAI;iBACd,CAAC,CAAC;YAEP;gBACI,OAAO,IAAI,CAAC,iBAAiB,CACzB,WAAW,CAAC,cAAc,EAC1B,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,UAAC,OAAO,EAAE,KAAK,IAAK,OAAA,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,EAA7B,CAA6B,CAAC,EAArE,CAAqE,EAC/E;oBACI,KAAK,EAAE,IAAI;iBACd,CACJ,CAAC;YAEN;gBACI,OAAO,WAAW,CAAC,cAAc,MAAuC;oBACpE,CAAC,CAAC,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,YAAY,CAAC;oBAChD,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAClB,WAAW,CAAC,cAAc,EAC1B,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,EAC9C,EAAE,OAAO,EAAE,IAAI,EAAE,CACpB,CAAC;YAEZ;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,EAAE,GAAG,CAAC,GAAG,EAAE;oBAC/D,KAAK,EAAE,IAAI;iBACd,CAAC,CAAC;YAEP;gBACI,OAAO,YAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAE5B;gBACI,OAAO,IAAI,CAAC,iBAAiB,CACzB,WAAW,CAAC,cAAc,EAC1B,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,CAAC,EAAP,CAAO,CAAC,EAAE,IAAI,CAAC,EAAvC,CAAuC,EACjD;oBACI,KAAK,EAAE,IAAI;iBACd,CACJ,CAAC;YAEN;gBACI,OAAO,IAAI,CAAC,iBAAiB,CACzB,WAAW,CAAC,cAAc,EAC1B,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,CAAC,EAAP,CAAO,CAAC,EAAE,IAAI,CAAC,EAAvC,CAAuC,EACjD;oBACI,KAAK,EAAE,IAAI;iBACd,CACJ,CAAC;YAEN;gBACI,OAAO,IAAI,CAAC,iBAAiB,CACzB,WAAW,CAAC,cAAc,EAC1B,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,CAAC,EAAP,CAAO,CAAC,EAAE,IAAI,CAAC,EAAvC,CAAuC,EACjD;oBACI,KAAK,EAAE,IAAI;iBACd,CACJ,CAAC;YAEN;gBACI,OAAO,IAAI,CAAC,iBAAiB,CACzB,WAAW,CAAC,cAAc,EAC1B,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,EAAd,CAAc,CAAC,EAArC,CAAqC,CAAC,CAAC,KAAK,EACnF;oBACI,OAAO,EAAE,IAAI;iBAChB,CACJ,CAAC;YAEN;gBACI,OAAO,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAhC,CAAgC,CAAC,EAA5D,CAA4D,CAAC,CAAC;YAE3G;gBACI,OAAO,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAhC,CAAgC,CAAC,EAA5D,CAA4D,CAAC,CAAC;YAE3G;gBACI,OAAO,IAAI,CAAC,iBAAiB,CACzB,WAAW,CAAC,cAAc,EAC1B,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,EAAd,CAAc,CAAC,EAArC,CAAqC,CAAC,CAAC,KAAK,EACnF;oBACI,OAAO,EAAE,IAAI;iBAChB,CACJ,CAAC;YAEN;gBACI,OAAO,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAhC,CAAgC,CAAC,EAA5D,CAA4D,CAAC,CAAC;YAE3G;gBACI,OAAO,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAhC,CAAgC,CAAC,EAA5D,CAA4D,CAAC,CAAC;YAE3G;gBACI,OAAO,IAAI,CAAC,iBAAiB,CACzB,WAAW,CAAC,cAAc,EAC1B,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,UAAC,OAAO,EAAE,KAAK,IAAK,OAAA,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,EAA7B,CAA6B,CAAC,EAArE,CAAqE,EAC/E;oBACI,KAAK,EAAE,IAAI;iBACd,CACJ,CAAC;YAEN;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,EAAE,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,EAAjB,CAAiB,CAAC,CAAC;YAE3F;gBACI,OAAO,iBAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAE5B;gBACI,OAAO,IAAI,CAAC,iBAAiB,CACzB,WAAW,CAAC,cAAc,EAC1B,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,UAAC,OAAO,EAAE,KAAK,IAAK,OAAA,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,EAAnB,CAAmB,CAAC,EAA3D,CAA2D,EACrE;oBACI,KAAK,EAAE,IAAI;iBACd,CACJ,CAAC;YAEN;gBACI,OAAO,IAAI,CAAC,iBAAiB,CACzB,WAAW,CAAC,cAAc,EAC1B,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,UAAC,OAAO,EAAE,KAAK,IAAK,OAAA,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,EAAnB,CAAmB,CAAC,EAA3D,CAA2D,EACrE;oBACI,KAAK,EAAE,IAAI;iBACd,CACJ,CAAC;YAEN;gBACI,OAAO,IAAI,CAAC,iBAAiB,CACzB,WAAW,CAAC,cAAc,EAC1B,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,UAAC,OAAO,EAAE,KAAK,IAAK,OAAA,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,EAAnB,CAAmB,CAAC,EAA3D,CAA2D,EACrE;oBACI,KAAK,EAAE,IAAI;iBACd,CACJ,CAAC;YAEN;gBACI,OAAO,WAAW,CAAC,cAAc,MAAuC;oBACpE,CAAC,CAAC,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,YAAY,CAAC;oBAChD,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAClB,WAAW,CAAC,cAAc,EAC1B,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,EAC9C,EAAE,OAAO,EAAE,IAAI,EAAE,CACpB,CAAC;YAEZ;gBACI,OAAO,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,cAAM,OAAA,SAAS,EAAT,CAAS,CAAC,CAAC;YAEzD;gBACI,OAAO,IAAI,CAAC,iBAAiB,CACzB,WAAW,CAAC,cAAc,EAC1B,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,UAAC,OAAO,EAAE,KAAK,IAAK,OAAA,CAAC,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC,EAApB,CAAoB,CAAC,EAA5D,CAA4D,EACtE,EAAE,KAAK,EAAE,IAAI,EAAE,CAClB,CAAC;YAEN;gBACI,OAAO,kBAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,EAAH,CAAG,CAAC,CAAC;YAEvC;gBACI,OAAO,kBAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,KAAuB,EAA9B,CAA8B,CAAC,CAAC;YAElE;gBACI,OAAO,kBAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAb,CAAa,CAAC,EAAzC,CAAyC,CAAC,CAAC;YAElF;gBACI,OAAO,kBAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAuB,CAAC,GAAG,GAAqB,CAAC,EAA9D,CAA8D,CAAC,CAAC;YAEvG;gBACI,OAAO,WAAW,CAAC,cAAc,MAAuC;oBACpE,CAAC,CAAC,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,YAAY,CAAC;oBAChD,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAClB,WAAW,CAAC,cAAc,EAC1B,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,EAC9C,EAAE,OAAO,EAAE,IAAI,EAAE,CACpB,CAAC;YAEZ;gBACI,OAAO,WAAW,CAAC,cAAc,MAAuC;oBACpE,CAAC,CAAC,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,YAAY,CAAC;oBAChD,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAClB,WAAW,CAAC,cAAc,EAC1B,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,EAC9C,EAAE,OAAO,EAAE,IAAI,EAAE,CACpB,CAAC;YAEZ;gBACI,OAAO,iBAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAE5B;gBACI,OAAO,iBAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAE5B;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,EAAE,GAAG,CAAC,GAAG,EAAE;oBAC/D,KAAK,EAAE,IAAI;iBACd,CAAC,CAAC;YAEP;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,EAAE,mBAAK,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,EAAH,CAAG,CAAC,CAAC,KAAK,EAAE;oBAC1F,OAAO,EAAE,IAAI;iBAChB,CAAC,CAAC;YAEP;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,EAAE,mBAAK,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,EAAH,CAAG,CAAC,CAAC,KAAK,EAAE;oBAC1F,OAAO,EAAE,IAAI;iBAChB,CAAC,CAAC;YAEP;gBACI,OAAO,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAnB,CAAmB,CAAC,EAA/C,CAA+C,CAAC,CAAC;YAE9F;gBACI,OAAO,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAnB,CAAmB,CAAC,EAA/C,CAA+C,CAAC,CAAC;YAE9F;gBACI,OAAO,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAnB,CAAmB,CAAC,EAA/C,CAA+C,CAAC,CAAC;YAE9F;gBACI,OAAO,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAnB,CAAmB,CAAC,EAA/C,CAA+C,CAAC,CAAC;YAE9F;gBACI,OAAO,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAX,CAAW,CAAC,CAAC;YAE1D;gBACI,OAAO,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAnB,CAAmB,CAAC,EAA/C,CAA+C,CAAC,CAAC;YAI9F;gBACI,OAAO,oBAAM,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,IAAuB,CAAC,KAAK,CAAC,EAApC,CAAoC,CAAC,CAAC;YAE9E;gBACI,OAAO,oBAAM,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,IAAuB,CAAC,GAAG,CAAC,EAAlC,CAAkC,CAAC,CAAC;YAE5E;gBACI,OAAO,oBAAM,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,IAAuB,CAAC,KAAK,CAAC,EAApC,CAAoC,CAAC,CAAC;YAE9E;gBACI,OAAO,oBAAM,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,IAAuB,CAAC,GAAG,CAAC,EAAlC,CAAkC,CAAC,CAAC;YAE5E;gBACI,OAAO,oBAAM,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,MAAuB,CAAC,KAAK,CAAC,EAApC,CAAoC,CAAC,CAAC;YAE9E;gBACI,OAAO,oBAAM,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,MAAuB,CAAC,GAAG,CAAC,EAAlC,CAAkC,CAAC,CAAC;YAE5E;gBACI,OAAO,oBAAM,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,KAAuB,CAAC,KAAK,CAAC,EAApC,CAAoC,CAAC,CAAC;YAE9E;gBACI,OAAO,oBAAM,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,KAAuB,CAAC,GAAG,CAAC,EAAlC,CAAkC,CAAC,CAAC;YAI5E;gBACI,OAAO,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,KAAK,KAAwB,CAAC,EAAjC,CAAiC,CAAC,CAAC;YAEhF;gBACI,OAAO,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,KAAK,KAAwB,CAAC,EAAjC,CAAiC,CAAC,CAAC;YAEhF;gBACI,OAAO,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,KAAK,KAAwB,CAAC,EAAjC,CAAiC,CAAC,CAAC;YAEhF;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,EAAE,mBAAK,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,EAAH,CAAG,CAAC,CAAC,KAAK,EAAE;oBAC1F,OAAO,EAAE,IAAI;iBAChB,CAAC,CAAC;YAEP;gBACI,OAAO,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,KAAK,IAAI,EAAqB,CAAC,EAAlC,CAAkC,CAAC,CAAC;YAEjF;gBACI,OAAO,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,KAAK,IAAI,EAAqB,CAAC,EAAlC,CAAkC,CAAC,CAAC;YAEjF;gBACI,OAAO,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,KAAK,IAAI,EAAqB,CAAC,EAAlC,CAAkC,CAAC,CAAC;YAEjF;gBACI,OAAO,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,KAAK,IAAI,GAAqB,CAAC,EAAlC,CAAkC,CAAC,CAAC;YAIjF,QAA+B;YAC/B;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,EAAE,cAAM,OAAA,IAAI,EAAJ,CAAI,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;YAE3F;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YAEvE;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,EAAE,mBAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE;oBACzF,OAAO,EAAE,IAAI;iBAChB,CAAC,CAAC;YAEP;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,EAAE,GAAG,CAAC,GAAG,EAAE;oBAC/D,KAAK,EAAE,IAAI;iBACd,CAAC,CAAC;YAEP;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,EAAE,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAArB,CAAqB,EAAE;oBACvF,KAAK,EAAE,IAAI;iBACd,CAAC,CAAC;YAEP;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,EAAE,GAAG,CAAC,GAAG,EAAE;oBAC/D,KAAK,EAAE,IAAI;iBACd,CAAC,CAAC;YAEP;gBACI,OAAO,IAAI,CAAC,iBAAiB,CACzB,WAAW,CAAC,cAAc,EAC1B,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,UAAC,OAAO,EAAE,KAAK,IAAK,OAAA,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,EAAvC,CAAuC,CAAC,EAA/E,CAA+E,EACzF;oBACI,KAAK,EAAE,IAAI;iBACd,CACJ,CAAC;YAEN;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,EAAE,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE;oBACnG,OAAO,EAAE,IAAI;iBAChB,CAAC,CAAC;YAEP;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,EAAE,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE;oBACnG,OAAO,EAAE,IAAI;iBAChB,CAAC,CAAC;YAEP;gBACI,OAAO,IAAI,CAAC,iBAAiB,CACzB,WAAW,CAAC,cAAc,EAC1B,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,UAAC,OAAO,EAAE,KAAK,IAAK,OAAA,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,EAA7B,CAA6B,CAAC,EAArE,CAAqE,EAC/E;oBACI,KAAK,EAAE,IAAI;iBACd,CACJ,CAAC;YAEN;gBACI,OAAO,IAAI,CAAC,iBAAiB,CACzB,WAAW,CAAC,cAAc,EAC1B,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,UAAC,OAAO,EAAE,KAAK,IAAK,OAAA,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,EAAjD,CAAiD,CAAC,EAAzF,CAAyF,EACnG,EAAE,KAAK,EAAE,IAAI,EAAE,CAClB,CAAC;YAEN;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,EAAE,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE;oBACnG,OAAO,EAAE,IAAI;iBAChB,CAAC,CAAC;YAEP;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,EAAE,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE;oBACnG,OAAO,EAAE,IAAI;iBAChB,CAAC,CAAC;YAEP;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,cAAc,EAAE,6BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE;oBACnG,OAAO,EAAE,IAAI;iBAChB,CAAC,CAAC;YAEP;gBACI,OAAO,IAAI,CAAC;SACnB;IACL,CAAC;IAEO,oCAAiB,GAAzB,UACI,cAA0C,EAC1C,IAAc,EACd,EAAuC;YAAvC,4BAAuC,EAArC,aAAa,EAAb,kCAAa,EAAE,eAAe,EAAf,oCAAe;QAEhC,IAAI,KAAK,IAAI,cAAc,MAAyC,EAAE;YAClE,IAAI,GAAG,wBAAW,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC;SAC/C;QAED,QAAQ,cAAc,EAAE;YACpB;gBACI,OAAO,sBAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAExC;gBACI,OAAO,qBAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAEvC;gBACI,OAAO,qBAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAEvC;gBACI,OAAO,sBAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAExC;gBACI,OAAO,sBAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAExC;gBACI,OAAO,sBAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;YAEjD;gBACI,OAAO,sBAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;YAEjD;gBACI,OAAO,6BAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAE/C;gBACI,OAAO,6BAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;YAExD;gBACI,OAAO,mBAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAEvC;gBACI,MAAM,IAAI,KAAK,CAAC,6BAA2B,cAAgB,CAAC,CAAC;SACpE;IACL,CAAC;IACL,eAAC;AAAD,CAvZA,AAuZC,IAAA;AAED,kBAAe,QAAQ,CAAC;;;;;AC5axB;IACI;QAyBA,cAAS,KAAwC;QACjD,YAAO,GAAG,CAAC,CAAC;QACZ,UAAK,GAAG,CAAC,CAAC;QACV,mBAAc,GAAG,KAAK,CAAC;QACvB,aAAQ,GAA+B,IAAI,CAAC;IA7B7B,CAAC;IAEhB,yBAAI,GAAJ,UAAK,QAAoC,EAAE,OAAe;QACtD,IAAI,CAAC,SAAS,IAAuC,CAAC;QACtD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,0BAAK,GAAL,UAAM,QAAoC,EAAE,OAAe,EAAE,KAAa;QACtE,IAAI,CAAC,SAAS,IAAwC,CAAC;QACvD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,yBAAI,GAAJ,UAAK,IAAa;QACd,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAE3B,OAAO,IAAI,CAAC;IAChB,CAAC;IAOL,iBAAC;AAAD,CA/BA,AA+BC,IAAA;AAED,kBAAe,UAAU,CAAC;;;;;;AClC1B,4CAAuC;AAEvC,2DAA2E;AAG3E;IACI,kBAAY,KAAyB,EAAE,IAA2B;QAA3B,qBAAA,EAAA,qBAAuB,OAAA,IAAI,EAAJ,CAAI;QAAlE,iBAKC;QAEU,UAAK,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAA/C,CAA+C,CAAC;QAG/F,aAAQ,GAAG,UAAC,KAAa;YAC7B,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;YAE7C,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC;QAGM,aAAQ,GAAG,UAAC,KAAa;YAC7B,KAAI,CAAC,QAAQ,IAAI,KAAK,IAAI,CAAC,CAAC;YAC5B,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;YAE7C,OAAO,KAAI,CAAC,KAAK,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC,CAAC;QAEM,aAAQ,GAAG,CAAC,CAAC;QAEO,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QA1BnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEU;QAAV,sBAAS;2CAA6F;IAGvG;QADC,sBAAS;8CAMR;IAGF;QADC,sBAAS;8CAMR;IAIS;QAAV,sBAAS;6CAA6C;IAE5C;QAAV,sBAAS;4CAA6C;IAC5C;QAAV,sBAAS;2CAAkC;IAChD,eAAC;CAhCD,AAgCC,IAAA;AAEY,QAAA,QAAQ,GAAG,UAAC,KAAyB,EAAE,IAAc,IAAK,OAAA,IAAI,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,EAAzB,CAAyB,CAAC;;;;;;ACvCjG,4CAAuC;AAGvC,2DAA2E;AAG3E;IACI,yBACI,KAAyB,EACzB,cAA8C,EAC9C,IAA2B,EAC3B,OAAe;QADf,qBAAA,EAAA,qBAAuB,OAAA,IAAI,EAAJ,CAAI;QAC3B,wBAAA,EAAA,eAAe;QAJnB,iBAYC;QAYU,UAAK,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAA/C,CAA+C,CAAC;QAG/F,aAAQ,GAAG,UAAC,KAAa;YAC7B,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;YAE7C,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC;QAGM,aAAQ,GAAG,UAAC,KAAa;YAC7B,KAAI,CAAC,QAAQ,IAAI,KAAK,IAAI,CAAC,CAAC;YAC5B,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;YAE7C,IAAM,KAAK,GAAG,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YAChD,KAAI,CAAC,MAAM,GAAG,CAAC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;YACpD,KAAI,CAAC,QAAQ,GAAG,CAAC,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;YAE5E,OAAO,KAAI,CAAC,MAAM,IAAI,KAAI,CAAC,QAAQ;gBAC/B,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,oBAAoB,EAAE,KAAI,CAAC,QAAQ,CAAC;gBAC7D,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;QACjD,CAAC,CAAC;QAGM,yBAAoB,GAAG,UAAC,KAAa;YACzC,IAAI,KAAI,CAAC,MAAM,EAAE;gBACb,KAAI,CAAC,QAAQ,GAAG,CAAC,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC;aACrD;YAED,OAAO,KAAI,CAAC,KAAK,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC,CAAC;QAEM,aAAQ,GAAG,CAAC,CAAC;QACb,WAAM,GAAG,KAAK,CAAC;QAEK,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QAtDnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QACtC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAExB,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAGM,yBAAS,GAAhB,UAAiB,KAAyB,EAAE,IAAc,EAAE,OAAgB;QACxE,OAAO,IAAI,eAAe,CAAC,KAAK,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,EAAH,CAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IAC/D,CAAC;IAGM,yBAAS,GAAhB,UAAiB,KAAyB,EAAE,IAAc,EAAE,OAAgB;QACxE,OAAO,IAAI,eAAe,CAAC,KAAK,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,EAAH,CAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IAC/D,CAAC;IAEU;QAAV,sBAAS;kDAA6F;IAGvG;QADC,sBAAS;qDAMR;IAGF;QADC,sBAAS;qDAYR;IAGF;QADC,sBAAS;iEAOR;IAKS;QAAV,sBAAS;oDAA6C;IAE5C;QAAV,sBAAS;mDAA6C;IAC5C;QAAV,sBAAS;4DAAkE;IACjE;QAAV,sBAAS;kDAAkC;IACjC;QAAV,sBAAS;qDAAoC;IAlD9C;QADC,sBAAS;0CAGT;IAGD;QADC,sBAAS;0CAGT;IA4CL,sBAAC;CAnED,AAmEC,IAAA;AAQY,QAAA,SAAS,GAAG,UAAC,KAAyB,EAAE,IAAc,EAAE,OAAgB;IACjF,OAAA,eAAe,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC;AAA/C,CAA+C,CAAC;AAEvC,QAAA,SAAS,GAAG,UAAC,KAAyB,EAAE,IAAc,EAAE,OAAgB;IACjF,OAAA,eAAe,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC;AAA/C,CAA+C,CAAC;;;;;;ACrFpD,4CAAuC;AACvC,2DAA2E;AAI3E;IACI,qBAAY,KAAyB,EAAE,IAA2B;QAA3B,qBAAA,EAAA,qBAAuB,OAAA,IAAI,EAAJ,CAAI;QAAlE,iBAKC;QAEU,UAAK,GAAG,UAAC,OAAe,IAAmC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,EAAE,OAAO,CAAC,EAA7C,CAA6C,CAAC;QAG5G,iBAAY,GAAG,UAAC,KAAa,IAA0C,OAAA,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAI,CAAC,MAAM,CAAC,EAA9B,CAA8B,CAAC;QAElF,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QAXnD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEU;QAAV,sBAAS;8CAA0G;IAGpH;QADC,sBAAS;qDACoG;IAEnG;QAAV,sBAAS;gDAA6C;IAE5C;QAAV,sBAAS;+CAA6C;IAC5C;QAAV,sBAAS;8CAAkC;IAChD,kBAAC;CAjBD,AAiBC,IAAA;AAEY,QAAA,WAAW,GAAG,UAAC,KAAyB,EAAE,IAAc,IAAK,OAAA,IAAI,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,EAA5B,CAA4B,CAAC;;;;;;ACvBvG,4CAAuC;AACvC,2DAA2E;AAG3E;IACI,mBAAY,KAAyB,EAAE,IAA2B;QAA3B,qBAAA,EAAA,qBAAuB,OAAA,IAAI,EAAJ,CAAI;QAAlE,iBAKC;QAEU,UAAK,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAApD,CAAoD,CAAC;QAGpG,kBAAa,GAAG,UAAC,KAAa;YAClC,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;YAE7C,OAAO,KAAI,CAAC,KAAK,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC,CAAC;QAEM,aAAQ,GAAG,CAAC,CAAC;QAEO,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QAlBnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEU;QAAV,sBAAS;4CAAkG;IAG5G;QADC,sBAAS;oDAMR;IAIS;QAAV,sBAAS;8CAA6C;IAE5C;QAAV,sBAAS;6CAA6C;IAC5C;QAAV,sBAAS;4CAAkC;IAChD,gBAAC;CAxBD,AAwBC,IAAA;AAEY,QAAA,SAAS,GAAG,UAAC,KAAyB,EAAE,IAAc,IAAK,OAAA,IAAI,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,EAA1B,CAA0B,CAAC;;;;;ACrDnG,uCAAsC;AAA7B,8BAAA,QAAQ,CAAA;AACjB,qDAAyD;AAAhD,sCAAA,SAAS,CAAA;AAAE,sCAAA,SAAS,CAAA;AAC7B,6CAA4C;AAAnC,oCAAA,WAAW,CAAA;AACpB,yCAAwC;AAA/B,gCAAA,SAAS,CAAA;AAClB,uDAAsD;AAA7C,8CAAA,gBAAgB,CAAA;AACzB,uDAAsD;AAA7C,8CAAA,gBAAgB,CAAA;AACzB,uCAAsC;AAA7B,8BAAA,QAAQ,CAAA;AACjB,qDAAyD;AAAhD,sCAAA,SAAS,CAAA;AAAE,sCAAA,SAAS,CAAA;;;;;;ACe7B,4CAAuC;AAEvC,2DAA2E;AAG3E;IACI,0BAAY,KAAyB,EAAE,IAA2B;QAA3B,qBAAA,EAAA,qBAAuB,OAAA,IAAI,EAAJ,CAAI;QAAlE,iBAKC;QAEU,UAAK,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAApD,CAAoD,CAAC;QAGpG,kBAAa,GAAG,UAAC,KAAa;YAClC,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;YAE7C,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;QAC5D,CAAC,CAAC;QAGM,cAAS,GAAG,UAAC,KAAa;YAC9B,KAAI,CAAC,QAAQ,GAAG,CAAC,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAEvD,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;QAC3D,CAAC,CAAC;QAGM,aAAQ,GAAG,UAAC,KAAa;YAC7B,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,KAAI,CAAC,QAAQ,GAAG,CAAC,KAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YAE3C,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;QAC3D,CAAC,CAAC;QAGM,aAAQ,GAAG,UAAC,KAAa;YAC7B,KAAI,CAAC,QAAQ,IAAI,KAAK,IAAI,CAAC,CAAC;YAE5B,OAAO,KAAI,CAAC,KAAK,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC,CAAC;QAEM,aAAQ,GAAG,CAAC,CAAC;QACb,aAAQ,GAAG,CAAC,CAAC;QAEO,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QAzCnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEU;QAAV,sBAAS;mDAAkG;IAG5G;QADC,sBAAS;2DAMR;IAGF;QADC,sBAAS;uDAKR;IAGF;QADC,sBAAS;sDAMR;IAGF;QADC,sBAAS;sDAKR;IAKS;QAAV,sBAAS;qDAA6C;IAE5C;QAAV,sBAAS;oDAA6C;IAC5C;QAAV,sBAAS;mDAAkC;IAChD,uBAAC;CA/CD,AA+CC,IAAA;AAEY,QAAA,gBAAgB,GAAG,UAAC,KAAyB,EAAE,IAAc,IAAK,OAAA,IAAI,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,EAAjC,CAAiC,CAAC;;;;;;ACtDjH,4CAAuC;AAEvC,2DAA2E;AAG3E;IACI,kBAAY,KAAyB,EAAE,IAA2B;QAA3B,qBAAA,EAAA,qBAAuB,OAAA,IAAI,EAAJ,CAAI;QAAlE,iBAKC;QAEU,UAAK,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,eAAe,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAtD,CAAsD,CAAC;QAGtG,oBAAe,GAAG,UAAC,KAAa;YACpC,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;YAE7C,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,eAAe,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAClE,CAAC,CAAC;QAGM,oBAAe,GAAG,UAAC,KAAa;YACpC,KAAI,CAAC,QAAQ,IAAI,KAAK,IAAI,CAAC,CAAC;YAC5B,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;YAE7C,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;QAC3D,CAAC,CAAC;QAGM,aAAQ,GAAG,UAAC,KAAa;YAC7B,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YAEtB,IAAI,CAAC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE;gBACjC,KAAI,CAAC,QAAQ,IAAI,MAAM,CAAC;aAC3B;iBAAM;gBACH,KAAI,CAAC,QAAQ,GAAG,CAAC,KAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;aAChD;YAED,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;QAC3D,CAAC,CAAC;QAGM,aAAQ,GAAG,UAAC,KAAa;YAC7B,KAAI,CAAC,QAAQ,IAAI,KAAK,IAAI,CAAC,CAAC;YAE5B,OAAO,KAAI,CAAC,KAAK,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC,CAAC;QAEM,aAAQ,GAAG,CAAC,CAAC;QACb,aAAQ,GAAG,CAAC,CAAC;QAEO,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QA/CnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEU;QAAV,sBAAS;2CAAoG;IAG9G;QADC,sBAAS;qDAMR;IAGF;QADC,sBAAS;qDAMR;IAGF;QADC,sBAAS;8CAWR;IAGF;QADC,sBAAS;8CAKR;IAKS;QAAV,sBAAS;6CAA6C;IAE5C;QAAV,sBAAS;4CAA6C;IAC5C;QAAV,sBAAS;2CAAkC;IAChD,eAAC;CArDD,AAqDC,IAAA;AAEY,QAAA,QAAQ,GAAG,UAAC,KAAyB,EAAE,IAAc,IAAK,OAAA,IAAI,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,EAAzB,CAAyB,CAAC;;;;;;AC5DjG,4CAAuC;AAEvC,2DAA2E;AAG3E;IACI,0BAAY,KAAyB,EAAE,IAA2B,EAAE,OAAgB;QAA7C,qBAAA,EAAA,qBAAuB,OAAA,IAAI,EAAJ,CAAI;QAAlE,iBAMC;QAEU,UAAK,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAApD,CAAoD,CAAC;QAGpG,kBAAa,GAAG,UAAC,KAAa;YAClC,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;YAE7C,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;QAC3D,CAAC,CAAC;QAGM,aAAQ,GAAG,UAAC,KAAa;YAC7B,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,KAAI,CAAC,QAAQ,GAAG,CAAC,KAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YAE3C,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;QAC3D,CAAC,CAAC;QAGM,aAAQ,GAAG,UAAC,KAAa;YAC7B,KAAI,CAAC,QAAQ,IAAI,KAAK,IAAI,CAAC,CAAC;YAE5B,KAAI,CAAC,MAAM,GAAG,CAAC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;YAC5D,KAAI,CAAC,QAAQ,GAAG,CAAC,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YAEpF,OAAO,KAAI,CAAC,MAAM,IAAI,KAAI,CAAC,QAAQ;gBAC/B,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,oBAAoB,EAAE,KAAI,CAAC,QAAQ,CAAC;gBAC7D,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;QACjD,CAAC,CAAC;QAGM,yBAAoB,GAAG,UAAC,KAAa;YACzC,IAAI,KAAI,CAAC,MAAM,EAAE;gBACb,KAAI,CAAC,QAAQ,GAAG,CAAC,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC;aACrD;YAED,OAAO,KAAI,CAAC,KAAK,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC,CAAC;QAEM,aAAQ,GAAG,CAAC,CAAC;QACb,aAAQ,GAAG,CAAC,CAAC;QACb,WAAM,GAAG,KAAK,CAAC;QAEK,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QAlDnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAExB,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEU;QAAV,sBAAS;mDAAkG;IAG5G;QADC,sBAAS;2DAMR;IAGF;QADC,sBAAS;sDAMR;IAGF;QADC,sBAAS;sDAUR;IAGF;QADC,sBAAS;kEAOR;IAMS;QAAV,sBAAS;qDAA6C;IAE5C;QAAV,sBAAS;oDAA6C;IAC5C;QAAV,sBAAS;mDAAkC;IACjC;QAAV,sBAAS;sDAAoC;IAClD,uBAAC;CAzDD,AAyDC,IAAA;AAEY,QAAA,gBAAgB,GAAG,UAAC,KAAyB,EAAE,IAAc,EAAE,OAAgB;IACxF,OAAA,IAAI,gBAAgB,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC;AAA1C,CAA0C,CAAC;;;;;;ACjE/C,4CAAuC;AAEvC,2DAA2E;AAG3E;IACI,kBAAY,KAAyB,EAAE,IAA2B;QAA3B,qBAAA,EAAA,qBAAuB,OAAA,IAAI,EAAJ,CAAI;QAAlE,iBAKC;QAEU,UAAK,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAApD,CAAoD,CAAC;QAGpG,kBAAa,GAAG,UAAC,KAAa;YAClC,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;YAE7C,OAAO,KAAI,CAAC,KAAK,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC,CAAC;QAEM,aAAQ,GAAG,CAAC,CAAC;QAEO,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QAlBnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEU;QAAV,sBAAS;2CAAkG;IAG5G;QADC,sBAAS;mDAMR;IAIS;QAAV,sBAAS;6CAA6C;IAE5C;QAAV,sBAAS;4CAA6C;IAC5C;QAAV,sBAAS;2CAAkC;IAChD,eAAC;CAxBD,AAwBC,IAAA;AAEY,QAAA,QAAQ,GAAG,UAAC,KAAyB,EAAE,IAAc,IAAK,OAAA,IAAI,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,EAAzB,CAAyB,CAAC;;;;;;AC/BjG,4CAAuC;AAEvC,2DAA2E;AAG3E;IACI,yBAAoB,KAAyB,EAAE,cAA8C,EAAE,IAAc;QAA7G,iBAMC;QAUU,UAAK,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAApD,CAAoD,CAAC;QAGpG,kBAAa,GAAG,UAAC,KAAa;YAClC,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;YAE7C,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;QAC5D,CAAC,CAAC;QAGM,cAAS,GAAG,UAAC,KAAa;YAC9B,KAAI,CAAC,QAAQ,GAAG,CAAC,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;YAE3E,OAAO,KAAI,CAAC,KAAK,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC,CAAC;QAEM,aAAQ,GAAG,CAAC,CAAC;QAEO,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QAlCnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QACtC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEM,yBAAS,GAAhB,UAAiB,KAAyB,EAAE,IAA2B;QAA3B,qBAAA,EAAA,qBAAuB,OAAA,IAAI,EAAJ,CAAI;QACnE,OAAO,IAAI,eAAe,CAAC,KAAK,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,EAAH,CAAG,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAEM,yBAAS,GAAhB,UAAiB,KAAyB,EAAE,IAA2B;QAA3B,qBAAA,EAAA,qBAAuB,OAAA,IAAI,EAAJ,CAAI;QACnE,OAAO,IAAI,eAAe,CAAC,KAAK,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,EAAH,CAAG,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAEU;QAAV,sBAAS;kDAAkG;IAG5G;QADC,sBAAS;0DAMR;IAGF;QADC,sBAAS;sDAKR;IAIS;QAAV,sBAAS;oDAA6C;IAE5C;QAAV,sBAAS;mDAA6C;IAC5C;QAAV,sBAAS;kDAAkC;IACjC;QAAV,sBAAS;4DAAkE;IAChF,sBAAC;CAzCD,AAyCC,IAAA;AAQY,QAAA,SAAS,GAAG,UAAC,KAAyB,EAAE,IAAc,IAAK,OAAA,eAAe,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,EAAtC,CAAsC,CAAC;AAElG,QAAA,SAAS,GAAG,UAAC,KAAyB,EAAE,IAAc,IAAK,OAAA,eAAe,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,EAAtC,CAAsC,CAAC;;;;;;ACvD/G,4CAAuC;AACvC,2DAA2E;AAE3E;IACI,gBAAY,KAAyB,EAAE,SAA2B;QAAlE,iBAKC;QAGD,UAAK,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAA9D,CAA8D,CAAC;QAGnG,iBAAY,GAAG,UAAC,KAAa;YACjC,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;YAE7C,OAAO,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,eAAe,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC9G,CAAC,CAAC;QAGM,oBAAe,GAAG,UAAC,KAAa;YACpC,KAAI,CAAC,OAAO,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC;YAEvG,IAAI,CAAC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,EAAE;gBACtD,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC;gBAC7B,OAAO,IAAI,CAAC;aACf;YAED,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,gBAAgB,EAAE,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnH,CAAC,CAAC;QAGM,qBAAgB,GAAG,UAAC,KAAa;YACrC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC;YAC7B,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC;QAEM,YAAO,GAAG,CAAC,CAAC;QACZ,aAAQ,GAAG,CAAC,CAAC;QAEO,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QAtCnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAE5B,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAGD;QADC,sBAAS;yCACiG;IAG3G;QADC,sBAAS;gDAMR;IAGF;QADC,sBAAS;mDAUR;IAGF;QADC,sBAAS;oDAIR;IAKS;QAAV,sBAAS;2CAA6C;IAE5C;QAAV,sBAAS;0CAA6C;IAC5C;QAAV,sBAAS;8CAA+C;IAC7D,aAAC;CA5CD,AA4CC,IAAA;AAQY,QAAA,MAAM,GAAG,UAAC,KAAyB,EAAE,SAA2B,IAAK,OAAA,IAAI,MAAM,CAAC,KAAK,EAAE,SAAS,CAAC,EAA5B,CAA4B,CAAC;;;;;AC9E/G,mCAAkC;AAAzB,0BAAA,MAAM,CAAA;AACf,6BAA4B;AAAnB,oBAAA,GAAG,CAAA;AACZ,qDAAoD;AAA3C,4CAAA,eAAe,CAAA;AACxB,6BAA4B;AAAnB,oBAAA,GAAG,CAAA;AACZ,qDAAoD;AAA3C,4CAAA,eAAe,CAAA;AACxB,+BAA8B;AAArB,sBAAA,IAAI,CAAA;AACb,+BAA8B;AAArB,sBAAA,IAAI,CAAA;AACb,6BAA4B;AAAnB,oBAAA,GAAG,CAAA;AACZ,iCAAgC;AAAvB,wBAAA,KAAK,CAAA;;;;;;ACed,4CAAuC;AACvC,2DAA2E;AAE3E;IACI,aAAY,KAAyB;QAArC,iBAIC;QAED,UAAK,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAhD,CAAgD,CAAC;QAGrF,cAAS,GAAG,UAAC,KAAa;YAC9B,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;YAE7C,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,eAAe,EAAE,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC3E,CAAC,CAAC;QAGM,oBAAe,GAAG;YACtB,OAAA,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAI,CAAC,QAAQ,EAAE,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;QAA9E,CAA8E,CAAC;QAG3E,aAAQ,GAAG;YACf,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YAE3C,OAAO,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAI,CAAC,QAAQ,EAAE,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;QAC3F,CAAC,CAAC;QAGM,aAAQ,GAAG;YACf,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YAE3C,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC5D,CAAC,CAAC;QAGM,cAAS,GAAG,UAAC,KAAa;YAC9B,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,KAAI,CAAC,UAAU,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YAE/C,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC;QAEM,eAAU,GAAG,CAAC,CAAC;QAEK,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QA1CnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAKD;QADC,sBAAS;0CAMR;IAGF;QADC,sBAAS;gDAEyE;IAGnF;QADC,sBAAS;yCAKR;IAGF;QADC,sBAAS;yCAKR;IAGF;QADC,sBAAS;0CAKR;IAIS;QAAV,sBAAS;wCAA6C;IAE5C;QAAV,sBAAS;uCAA6C;IAC3D,UAAC;CA/CD,AA+CC,IAAA;AAEY,QAAA,GAAG,GAAG,UAAC,KAAyB,IAAK,OAAA,IAAI,GAAG,CAAC,KAAK,CAAC,EAAd,CAAc,CAAC;;;;;;ACpDjE,4CAAuC;AACvC,2DAA2E;AAE3E;IACI,yBAAY,KAAyB,EAAE,SAAkC;QAAzE,iBAKC;QAEU,UAAK,GAAG,cAAM,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,iBAAiB,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAnE,CAAmE,CAAC;QAGrF,sBAAiB,GAAG;YACxB,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YAE7B,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC;QAE0B,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QAfnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAE5B,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEU;QAAV,sBAAS;kDAAmF;IAG7F;QADC,sBAAS;8DAKR;IAES;QAAV,sBAAS;oDAA6C;IAE5C;QAAV,sBAAS;mDAA6C;IAC5C;QAAV,sBAAS;uDAAsD;IACpE,sBAAC;CArBD,AAqBC,IAAA;AAQY,QAAA,eAAe,GAAG,UAAC,KAAyB,EAAE,SAAkC;IACzF,OAAA,IAAI,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC;AAArC,CAAqC,CAAC;;;;;;ACnC1C,2DAA2E;AAE3E,4CAAuC;AAGvC;IACI,cAAY,KAAyB,EAAE,SAAyB;QAAhE,iBAKC;QAEU,UAAK,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,UAAU,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAA5D,CAA4D,CAAC;QAG5G,eAAU,GAAG;YACjB,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,EAAE,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAA3D,CAA2D,CAAC;QAGxD,gBAAW,GAAG;YAClB,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YAE3C,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,EAAE,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjE,CAAC,CAAC;QAEiB,UAAK,GAAG,UAAC,KAAa,IAAW,OAAA,CAAC,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,EAA3C,CAA2C,CAAC;QAEpE,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QArBnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAE5B,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEU;QAAV,sBAAS;uCAA0G;IAGpH;QADC,sBAAS;4CAEsD;IAGhE;QADC,sBAAS;6CAKR;IAES;QAAV,sBAAS;uCAAsF;IAErF;QAAV,sBAAS;yCAA6C;IAE5C;QAAV,sBAAS;wCAA6C;IAC5C;QAAV,sBAAS;4CAA6C;IAC3D,WAAC;CA3BD,AA2BC,IAAA;AAQY,QAAA,IAAI,GAAG,UAAC,KAAyB,EAAE,SAAyB,IAAK,OAAA,IAAI,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,EAA1B,CAA0B,CAAC;;;;;;ACxCzG,2DAA2E;AAG3E,4CAAuC;AAEvC;IACI,cAAY,KAAyB,EAAE,SAAyB;QAAhE,iBAKC;QAEU,UAAK,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,UAAU,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAjD,CAAiD,CAAC;QAGjG,eAAU,GAAG;YACjB,OAAA,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAI,CAAC,KAAK,EAAE,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,EAAE,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAApF,CAAoF,CAAC;QAGjF,UAAK,GAAG;YACZ,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YAE3C,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC;QAE0B,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QAnBnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAE5B,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEU;QAAV,sBAAS;uCAA+F;IAGzG;QADC,sBAAS;4CAE+E;IAGzF;QADC,sBAAS;uCAKR;IAES;QAAV,sBAAS;yCAA6C;IAE5C;QAAV,sBAAS;wCAA6C;IAC5C;QAAV,sBAAS;4CAA6C;IAC3D,WAAC;CAzBD,AAyBC,IAAA;AAQY,QAAA,IAAI,GAAG,UAAC,KAAyB,EAAE,SAAyB,IAAK,OAAA,IAAI,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,EAA1B,CAA0B,CAAC;;;;;;ACpCzG,4CAAuC;AACvC,2DAA2E;AAE3E;IACI,yBAAY,KAAyB,EAAE,SAAoC;QAA3E,iBAKC;QAGD,UAAK,GAAG,UAAC,OAAe;YACpB,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YAExB,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QAClD,CAAC,CAAC;QAGM,UAAK,GAAG,UAAC,KAAa;YAC1B,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YAEtB,OAAO,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAI,CAAC,WAAW,EAAE,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;QAC9E,CAAC,CAAC;QAGM,gBAAW,GAAG,UAAC,KAAa;YAChC,OAAA,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;QAA3F,CAA2F,CAAC;QAE7E,WAAM,GAAG,cAAY,OAAA,IAAI,EAAJ,CAAI,CAAC;QAKjB,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QA7BnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAE5B,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAGD;QADC,sBAAS;kDAKR;IAGF;QADC,sBAAS;kDAKR;IAGF;QADC,sBAAS;wDAEsF;IAErF;QAAV,sBAAS;mDAAmC;IAKlC;QAAV,sBAAS;oDAA6C;IAE5C;QAAV,sBAAS;mDAA6C;IAC5C;QAAV,sBAAS;uDAAwD;IACtE,sBAAC;CAnCD,AAmCC,IAAA;AAQY,QAAA,eAAe,GAAG,UAAC,KAAyB,EAAE,SAAoC;IAC3F,OAAA,IAAI,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC;AAArC,CAAqC,CAAC;;;;;;AC/C1C,4CAAuC;AACvC,2DAA2E;AAE3E;IACI,aAAY,KAAyB;QAArC,iBAIC;QAEU,UAAK,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,iBAAiB,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAxD,CAAwD,CAAC;QAGxG,sBAAiB,GAAG;YACxB,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,eAAe,EAAE,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAA/D,CAA+D,CAAC;QAG5D,oBAAe,GAAG;YACtB,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YAE3C,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,EAAE,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjE,CAAC,CAAC;QAGM,UAAK,GAAG,UAAC,KAAa;YAC1B,KAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,KAAK,KAAuB,CAAC,GAAG,GAAqB,CAAC;YAC3E,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YAE3C,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,EAAE,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACnE,CAAC,CAAC;QAGM,YAAO,GAAG,UAAC,KAAa;YAC5B,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,KAAK,CAAC;YACjD,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YAE3C,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,EAAE,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACnE,CAAC,CAAC;QAGM,YAAO,GAAG,UAAC,KAAa;YAC5B,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YAEtD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC;QAE0B,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QAzCnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEU;QAAV,sBAAS;sCAAsG;IAGhH;QADC,sBAAS;kDAE0D;IAGpE;QADC,sBAAS;gDAKR;IAGF;QADC,sBAAS;sCAMR;IAGF;QADC,sBAAS;wCAMR;IAGF;QADC,sBAAS;wCAKR;IAES;QAAV,sBAAS;wCAA6C;IAE5C;QAAV,sBAAS;uCAA6C;IAC3D,UAAC;CA9CD,AA8CC,IAAA;AAEY,QAAA,GAAG,GAAG,UAAC,KAAyB,IAAK,OAAA,IAAI,GAAG,CAAC,KAAK,CAAC,EAAd,CAAc,CAAC;;;;;;ACnDjE,4CAAuC;AACvC,2DAA2E;AAE3E;IACI,aAAY,KAAyB;QAArC,iBAIC;QAEU,UAAK,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,iBAAiB,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAxD,CAAwD,CAAC;QAGxG,sBAAiB,GAAG;YACxB,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,eAAe,EAAE,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAA/D,CAA+D,CAAC;QAG5D,oBAAe,GAAG;YACtB,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YAE3C,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,EAAE,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACnE,CAAC,CAAC;QAGM,YAAO,GAAG,UAAC,KAAa;YAC5B,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,KAAK,CAAC;YACjD,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YAE3C,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,EAAE,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACnE,CAAC,CAAC;QAGM,YAAO,GAAG,UAAC,KAAa;YAC5B,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YAEtD,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9D,CAAC,CAAC;QAGM,gBAAW,GAAG;YAClB,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;YAE7C,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC;QAE0B,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QAxCnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEU;QAAV,sBAAS;sCAAsG;IAGhH;QADC,sBAAS;kDAE0D;IAGpE;QADC,sBAAS;gDAKR;IAGF;QADC,sBAAS;wCAMR;IAGF;QADC,sBAAS;wCAKR;IAGF;QADC,sBAAS;4CAKR;IAES;QAAV,sBAAS;wCAA6C;IAE5C;QAAV,sBAAS;uCAA6C;IAC3D,UAAC;CA7CD,AA6CC,IAAA;AAEY,QAAA,GAAG,GAAG,UAAC,KAAyB,IAAK,OAAA,IAAI,GAAG,CAAC,KAAK,CAAC,EAAd,CAAc,CAAC;;;;;;AClDjE,4CAAuC;AACvC,2DAA2E;AAE3E;IACI,eAAY,KAAyB,EAAE,SAA0B;QAAjE,iBAKC;QAGD,UAAK,GAAG,UAAC,OAAe;YACpB,OAAA,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,cAAM,OAAA,IAAI,EAAJ,CAAI,EAAE,OAAO,EAAE,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAArE,CAAqE,CAAC;QAE9C,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QAVnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAE5B,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAGD;QADC,sBAAS;wCAEgE;IAE/D;QAAV,sBAAS;0CAA6C;IAE5C;QAAV,sBAAS;yCAA6C;IAC5C;QAAV,sBAAS;6CAA8C;IAC5D,YAAC;CAhBD,AAgBC,IAAA;AAQY,QAAA,KAAK,GAAG,UAAC,KAAyB,EAAE,SAA0B,IAAK,OAAA,IAAI,KAAK,CAAC,KAAK,EAAE,SAAS,CAAC,EAA3B,CAA2B,CAAC;;;;;AC3B5G,SAAS,UAAU,CAAC,OAAe,EAAE,KAAyB;IAC1D,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,CAAC,CAAC;YAC9D,CAAC,OAAO,GAAG,IAAI,CAAC;YAChB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC,CAAC;AAC7C,CAAC;AAED,SAAgB,MAAM,CAAC,OAAe,EAAE,KAAyB,EAAE,SAAgC;IAC/F,IAAM,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC;IAClC,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAE1B,OAAO,MAAM,CAAC;AAClB,CAAC;AALD,wBAKC;AAED,SAAgB,UAAU,CAAC,KAAyB,EAAE,SAAgD;IAClG,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;AACxC,CAAC;AAFD,gCAEC;AAED,SAAgB,QAAQ,CACpB,OAAe,EACf,KAAyB,EACzB,SAAiE;IAEjE,UAAU,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;IAE7C,OAAO,IAAI,CAAC;AAChB,CAAC;AARD,4BAQC;AAED,SAAgB,GAAG,CAAC,OAAe,EAAE,KAAyB;IAC1D,IAAI,KAAK,CAAC,KAAK,IAAuB,EAAE;QACpC,IAAM,EAAE,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,EACjF,EAAE,GAAG,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE9D,KAAK,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;QAEnC,KAAK,CAAC,KAAK;YACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;gBACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;gBAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;gBACpC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAsB,CAAC,CAAC,CAAC,CAAC,CAAC;KAC3C;SAAM;QACH,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,EAChE,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC;QAExB,KAAK,CAAC,KAAK;YACP,CAAC,KAAK,CAAC,KAAK;gBACR,CAAC,CAAC,OAA2C,IAAuB,KAAuB,CAAC,CAAC;gBACjG,CAAC,MAAM,GAAG,IAAI,CAAC;gBACf,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;gBACnC,CAAC,GAAG,KAAK,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAE/D,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;KACpB;IAED,OAAO,IAAI,CAAC;AAChB,CAAC;AA5BD,kBA4BC;AAED,SAAgB,YAAY,CAAC,KAAyB;IAClD,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;IACpB,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAEhC,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACpC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AACpB,CAAC;AATD,oCASC;AAED,SAAgB,MAAM,CAAC,OAAe,EAAE,KAAyB;IAC7D,IAAM,MAAM,GAAG,CAAC,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAErC,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,MAAM,GAAG,IAAI,CAAC;YACf,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACnC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC;IAEpB,OAAO,MAAM,CAAC;AAClB,CAAC;AAVD,wBAUC;AAED,SAAgB,GAAG,CAAC,OAAe,EAAE,KAAyB;IAC1D,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,QAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,OAAO,GAAG,CAAC,QAA2C,CAAC,CAAC;YACzD,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC,CAAC;IAEnD,OAAO,IAAI,CAAC;AAChB,CAAC;AAPD,kBAOC;AAED,SAAgB,GAAG,CACf,OAAe,EACf,KAAyB,EACzB,WAAkD;IAElD,IAAM,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAExD,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,IAAI,GAAG,IAAI,CAAC;YACb,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACxC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;AACrB,CAAC;AAZD,kBAYC;AAED,SAAgB,GAAG,CAAC,OAAe,EAAE,KAAyB;IAC1D,IAAI,KAAK,CAAC,KAAK,IAAuB,EAAE;QACpC,IAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,EAClF,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE9D,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;QAEnE,KAAK,CAAC,KAAK;YACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;gBACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;gBAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;gBACpC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC,CAAC;KAC3C;SAAM;QACH,OAAO,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;QAE1B,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,EAChE,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC;QAExB,KAAK,CAAC,KAAK;YACP,CAAC,KAAK,CAAC,KAAK;gBACR,CAAC,CAAC,OAA2C,IAAuB,KAAuB,CAAC,CAAC;gBACjG,CAAC,MAAM,GAAG,IAAI,CAAC;gBACf,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;gBACnC,CAAC,GAAG,KAAK,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAE/D,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;KACpB;IAED,OAAO,IAAI,CAAC;AAChB,CAAC;AA9BD,kBA8BC;AAED,SAAgB,YAAY,CAAC,KAAyB;IAClD,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;IACpB,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;IAExB,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACpC,CAAC,GAAG,IAAuB,CAAC,CAAC;AACrC,CAAC;AATD,oCASC;AAED,SAAgB,MAAM,CAAC,OAAe,EAAE,KAAyB;IAC7D,IAAM,MAAM,GAAG,OAAO,KAAK,CAAC,CAAC;IAE7B,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,MAAM,GAAG,IAAI,CAAC;YACf,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACnC,CAAC,OAAO,IAAuB,CAAC,CAAC;IAErC,OAAO,MAAM,CAAC;AAClB,CAAC;AAVD,wBAUC;AAED,SAAgB,YAAY,CAAC,KAAyB;IAClD,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;IACpB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,CAAC;IAEzE,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACpC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AACpB,CAAC;AATD,oCASC;AAED,SAAgB,MAAM,CAAC,OAAe,EAAE,KAAyB;IAC7D,IAAM,MAAM,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,CAAC;IAE9E,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,MAAM,GAAG,IAAI,CAAC;YACf,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACnC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC;IAEpB,OAAO,MAAM,CAAC;AAClB,CAAC;AAVD,wBAUC;AAED,SAAgB,YAAY,CAAC,KAAyB;IAClD,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;IACpB,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,IAAI,CAAC,CAAC,CAAC;IAExE,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACpC,CAAC,GAAG,IAAuB,CAAC,CAAC;AACrC,CAAC;AATD,oCASC;AAED,SAAgB,MAAM,CAAC,OAAe,EAAE,KAAyB;IAC7D,IAAM,MAAM,GAAG,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,IAAI,CAAC,CAAC,CAAC;IAE7E,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,MAAM,GAAG,IAAI,CAAC;YACf,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACnC,CAAC,OAAO,IAAuB,CAAC,CAAC;IAErC,OAAO,MAAM,CAAC;AAClB,CAAC;AAVD,wBAUC;AAID,SAAgB,GAAG,CAAC,OAAe,EAAE,KAAyB;IAC1D,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAExF,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,KAAuB,CAAC,CAAC;YAC5G,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACpC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC;AATD,kBASC;AAED,SAAgB,GAAG,CAAC,OAAe,EAAE,KAAyB;IAC1D,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC;IAC5B,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAElB,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACpC,CAAC,CAAC,IAAuB,CAAC,CAAC;IAE/B,OAAO,IAAI,CAAC;AAChB,CAAC;AAXD,kBAWC;AAED,SAAgB,GAAG,CAAC,OAAe,EAAE,KAAyB;IAC1D,IAAM,MAAM,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IACvC,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAE5C,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,IAAI,GAAG,IAAI,CAAC;YACb,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACxC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;IAEjB,OAAO,MAAM,CAAC;AAClB,CAAC;AAXD,kBAWC;AAED,SAAgB,GAAG,CAAC,OAAe,EAAE,KAAyB;IAC1D,IAAM,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAE1D,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;IAEvB,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YAC3C,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;IAElB,OAAO,IAAI,CAAC;AAChB,CAAC;AAZD,kBAYC;AAED,SAAgB,GAAG,CAAC,OAAe,EAAE,KAAyB;IAC1D,IAAM,MAAM,GAAG,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,IAAI,CAAC,CAAC,CAAC;IAE7E,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,EAAqB,CAAC,GAAG,CAAC,OAAO,IAAuB,CAAC,CAAC;IAEvF,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAEnB,OAAO,MAAM,CAAC;AAClB,CAAC;AARD,kBAQC;AAED,SAAgB,GAAG,CAAC,OAAe,EAAE,KAAyB;IAC1D,IAAM,MAAM,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,CAAC;IAE9E,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,EAAqB,CAAC,GAAG,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC;IAEtE,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;IAEvC,OAAO,MAAM,CAAC;AAClB,CAAC;AARD,kBAQC;AAED,SAAgB,GAAG,CAAC,OAAe,EAAE,KAAyB;IAC1D,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,EAAqB,CAAC,GAAG,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC;IACtE,IAAM,MAAM,GAAG,CAAC,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAErC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;IAC3B,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAE3B,OAAO,MAAM,CAAC;AAClB,CAAC;AARD,kBAQC;AAED,SAAgB,GAAG,CAAC,KAAyB;IACzC,IAAM,MAAM,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IACjC,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAE1B,OAAO,MAAM,CAAC;AAClB,CAAC;AALD,kBAKC;AAED,SAAgB,GAAG,CAAC,OAAe,EAAE,KAAyB;IAC1D,IAAM,MAAM,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAEpC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAEnB,OAAO,MAAM,CAAC;AAClB,CAAC;AAND,kBAMC;AAED,SAAgB,GAAG,CAAC,OAAe,EAAE,KAAyB;IAC1D,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC;IACnB,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAC3B,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,EAAqB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAE/E,OAAO,IAAI,CAAC;AAChB,CAAC;AAND,kBAMC;;;;;;ACrTD,4CAAuC;AACvC,2DAA2E;AAE3E;IACI,cAAY,KAAyB;QAArC,iBAIC;QAEU,UAAK,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE,IAAI,CAAC,EAAvC,CAAuC,CAAC;QAE5E,cAAS,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE,KAAK,CAAC,EAAxC,CAAwC,CAAC;QAEzF,cAAS,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,EAAE,MAAM,CAAC,EAA3C,CAA2C,CAAC;QAE5F,gBAAW,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,EAAE,MAAM,CAAC,EAA3C,CAA2C,CAAC;QAGzG,gBAAW,GAAG;YAClB,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;YACrB,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QACvD,CAAC,CAAC;QAGM,gBAAW,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,iBAAiB,EAAE,MAAM,CAAC,EAAjD,CAAiD,CAAC;QAGpG,sBAAiB,GAAG,UAAC,OAAe;YACxC,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC;YAC9B,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;QAC7D,CAAC,CAAC;QAGM,sBAAiB,GAAG,UAAC,OAAe;YACxC,KAAI,CAAC,cAAc,IAAI,OAAO,IAAI,CAAC,CAAC;YACpC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,KAAI,CAAC,cAAc,CAAC;YAEpC,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC;QAEM,mBAAc,GAAG,CAAC,CAAC;QAEC,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QAtCnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEU;QAAV,sBAAS;uCAAqF;IAEpF;QAAV,sBAAS;2CAAkG;IAEjG;QAAV,sBAAS;2CAAqG;IAEpG;QAAV,sBAAS;6CAAuG;IAGjH;QADC,sBAAS;6CAIR;IAGF;QADC,sBAAS;6CACkG;IAG5G;QADC,sBAAS;mDAIR;IAGF;QADC,sBAAS;mDAMR;IAIS;QAAV,sBAAS;yCAA6C;IAE5C;QAAV,sBAAS;wCAA6C;IAC3D,WAAC;CA3CD,AA2CC,IAAA;AAEY,QAAA,IAAI,GAAG,UAAC,KAAyB,IAAK,OAAA,IAAI,IAAI,CAAC,KAAK,CAAC,EAAf,CAAe,CAAC;;;;;ACvEnE,+BAA8B;AAArB,sBAAA,IAAI,CAAA;AACb,yCAA4C;AAAnC,0BAAA,GAAG,CAAA;AAAE,0BAAA,GAAG,CAAA;AAAE,0BAAA,GAAG,CAAA;;;;;;ACsBtB,4CAAuC;AACvC,2DAA2E;AAE3E;IACI,mBAAY,KAAyB,EAAE,aAAqB,EAAE,KAAc;QAA5E,iBAMC;QAEU,UAAK,GAAG,cAAoC,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,UAAU,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAjD,CAAiD,CAAC;QAGjG,eAAU,GAAG;YACjB,IAAI,KAAI,CAAC,MAAM,EAAE;gBACb,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;aAChD;YAED,OAAO,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAI,CAAC,QAAQ,EAAE,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAC1F,CAAC,CAAC;QAGM,aAAQ,GAAG;YACf,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YAE3C,OAAO,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAI,CAAC,QAAQ,EAAE,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtG,CAAC,CAAC;QAGM,aAAQ,GAAG;YACf,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YAC3C,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAI,CAAC,cAAc,CAAC;YAE9D,OAAO,KAAI,CAAC,OAAO,CAAC,KAAK,CACrB,KAAI,CAAC,UAAU,EACf,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,EACtB,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,KAAuB,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,GAAG,GAAqB,CACrG,CAAC;QACN,CAAC,CAAC;QAGM,eAAU,GAAG;YACjB,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YAE3C,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;QAC3D,CAAC,CAAC;QAGM,cAAS,GAAG,UAAC,KAAa;YAC9B,KAAI,CAAC,MAAM,CAAC,KAAK,KAAwB,CAAC;YAC1C,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC;YAEtB,OAAO,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;QAC7D,CAAC,CAAC;QAGM,cAAS,GAAG,UAAC,KAAa;YAC9B,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YAC7C,KAAI,CAAC,MAAM,CAAC,GAAG,GAAG,KAAI,CAAC,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC;YAE1C,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC;QAEM,YAAO,GAAG,CAAC,CAAC;QAEQ,YAAO,GAAG,IAAI,oBAAU,EAAE,CAAC;QA9DnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACpC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,6BAAgB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEU;QAAV,sBAAS;4CAA+F;IAGzG;QADC,sBAAS;iDAOR;IAGF;QADC,sBAAS;+CAKR;IAGF;QADC,sBAAS;+CAUR;IAGF;QADC,sBAAS;iDAKR;IAGF;QADC,sBAAS;gDAMR;IAGF;QADC,sBAAS;gDAMR;IAIS;QAAV,sBAAS;8CAA6C;IAE5C;QAAV,sBAAS;6CAA6C;IAC5C;QAAV,sBAAS;qDAAyC;IACxC;QAAV,sBAAS;6CAAkC;IAChD,gBAAC;CArED,AAqEC,IAAA;AAEY,QAAA,GAAG,GAAG,UAAC,KAAyB,IAAK,OAAA,IAAI,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,EAAlC,CAAkC,CAAC;AACxE,QAAA,GAAG,GAAG,UAAC,KAAyB,IAAK,OAAA,IAAI,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,EAAnC,CAAmC,CAAC;AACzE,QAAA,GAAG,GAAG,UAAC,KAAyB,IAAK,OAAA,IAAI,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,EAAnC,CAAmC,CAAC;;;;;AC7EtF,mCAA8B;AAG9B;IAAA;QAqBY,UAAK,GAAG,IAAI,gBAAM,EAAE,CAAC;QACrB,WAAM,GAAG,IAAI,gBAAM,EAAE,CAAC;QACtB,QAAG,GAAG,IAAI,gBAAM,EAAE,CAAC;QACnB,UAAK,GAAG,IAAI,gBAAM,EAAE,CAAC;QAErB,UAAK,GAAG,IAAI,gBAAM,EAAE,CAAC;IACjC,CAAC;IA1BG,iCAAO,GAAP;QACI,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,kCAAQ,GAAR;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,+BAAK,GAAL;QACI,OAAO,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC;IAED,iCAAO,GAAP;QACI,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,iCAAO,GAAP;QACI,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAQL,sBAAC;AAAD,CA3BA,AA2BC,IAAA;;;;;;AC/BD,+CAAsC;AAEtC,mCAA8B;AAG9B;IAAA;QAcI,iBAAY,GAAG,IAAI,qBAAK,EAAU,CAAC;QAEzB,gBAAW,GAAG,IAAI,gBAAM,EAAE,CAAC;QAC3B,WAAM,GAAG,GAAG,CAAC;IAC3B,CAAC;IAjBG,yBAAQ,GAAR,UAAS,KAAa;QAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAED,yBAAQ,GAAR;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,wBAAO,GAAP;QACI,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAML,aAAC;AAAD,CAlBA,AAkBC,IAAA;;;;;;ACvBD,+CAAsC;AAItC;IACI,gBAAoB,MAAuB;QAAvB,uBAAA,EAAA,cAAuB;QAAvB,WAAM,GAAN,MAAM,CAAiB;QAoB3C,iBAAY,GAAG,IAAI,qBAAK,EAAW,CAAC;QACpC,eAAU,GAAG,IAAI,qBAAK,EAAQ,CAAC;IArBe,CAAC;IAE/C,qBAAI,GAAJ;QACI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC/B,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,qBAAI,GAAJ;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,uBAAM,GAAN,UAAO,KAAc;QACjB,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,EAAE;YACvB,OAAO;SACV;QAED,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAIL,aAAC;AAAD,CAvBA,AAuBC,IAAA;;;;;;;AChDD,0CAAwC;AAiCxC,IAAU,MAAM,CA+Bf;AA/BD,WAAU,MAAM;IAOZ,SAAgB,MAAM,CAAC,MAA4B;QAA5B,uBAAA,EAAA,WAA4B;QAC/C,0BACI,MAAM,KACN,WAAW,EAAE,IAAI,EACjB,UAAU,EAAE,CAAC,CAAC,EACd,cAAc,EAAE,IAAI,EACpB,UAAU,EAAE,CAAC,CAAC,EACd,QAAQ,EAAE,KAAK,EACf,OAAO,EAAE,iBAAU,CAAC,IAAI,CAAC,YAAY,IAElC,MAAM,EACX;IACN,CAAC;IAZe,aAAM,SAYrB,CAAA;IAED,SAAgB,UAAU,CAAC,MAAc;QACrC,QAAQ,MAAM,CAAC,MAAM,EAAE;YACnB;gBACI,OAAO,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;YAE1B,OAAuB;YACvB;gBACI,OAAO,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;SAC7B;IACL,CAAC;IATe,iBAAU,aASzB,CAAA;AACL,CAAC,EA/BS,MAAM,KAAN,MAAM,QA+Bf;AAEkB,yBAAO;;;;;AC7C1B,uCAAkC;AAIlC;IAAA;QAqBY,kBAAa,GAAG,IAAI,gBAAM,EAAE,CAAC;QAC7B,iBAAY,GAAG,IAAI,gBAAM,EAAE,CAAC;QAC5B,iBAAY,GAAG,IAAI,gBAAM,EAAE,CAAC;QAC5B,kBAAa,GAAG,IAAI,gBAAM,EAAE,CAAC;QAC7B,kBAAa,GAAG,IAAI,gBAAM,EAAE,CAAC;IACzC,CAAC;IAzBG,sCAAe,GAAf;QACI,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAED,qCAAc,GAAd;QACI,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED,qCAAc,GAAd;QACI,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED,4CAAqB,GAArB;QACI,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAED,4CAAqB,GAArB;QACI,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAOL,mBAAC;AAAD,CA1BA,AA0BC,IAAA;AAEwB,+BAAO;;;;;AChChC,IAAU,aAAa,CA6HtB;AA7HD,WAAU,aAAa;IACnB,IAAY,aA8BX;IA9BD,WAAY,aAAa;QACrB,0CAAyB,CAAA;QACzB,0CAAyB,CAAA;QAEzB,sDAAqC,CAAA;QACrC,sDAAqC,CAAA;QACrC,sDAAqC,CAAA;QACrC,sDAAqC,CAAA;QACrC,sDAAqC,CAAA;QACrC,wDAAuC,CAAA;QACvC,0EAAyD,CAAA;QAEzD,wDAAuC,CAAA;QAEvC,wDAAuC,CAAA;QACvC,wDAAuC,CAAA;QAEvC,kDAAiC,CAAA;QAEjC,wDAAuC,CAAA;QAEvC,wDAAuC,CAAA;QACvC,wDAAuC,CAAA;QAEvC,gDAA+B,CAAA;QAC/B,oEAAmD,CAAA;QACnD,4DAA2C,CAAA;QAC3C,kDAAiC,CAAA;QAEjC,oCAAmB,CAAA;IACvB,CAAC,EA9BW,aAAa,GAAb,2BAAa,KAAb,2BAAa,QA8BxB;IAED,SAAgB,WAAW;QACvB,OAAO;YACH,aAAa,CAAC,UAAU;YACxB,aAAa,CAAC,UAAU;YACxB,aAAa,CAAC,gBAAgB;YAC9B,aAAa,CAAC,gBAAgB;YAC9B,aAAa,CAAC,gBAAgB;YAC9B,aAAa,CAAC,gBAAgB;YAC9B,aAAa,CAAC,gBAAgB;YAC9B,aAAa,CAAC,0BAA0B;YACxC,aAAa,CAAC,iBAAiB;YAC/B,aAAa,CAAC,iBAAiB;YAC/B,aAAa,CAAC,iBAAiB;YAC/B,aAAa,CAAC,iBAAiB;YAC/B,aAAa,CAAC,cAAc;YAC5B,aAAa,CAAC,iBAAiB;YAC/B,aAAa,CAAC,aAAa;YAC3B,aAAa,CAAC,iBAAiB;YAC/B,aAAa,CAAC,iBAAiB;YAC/B,aAAa,CAAC,uBAAuB;YACrC,aAAa,CAAC,mBAAmB;YACjC,aAAa,CAAC,cAAc;YAC5B,aAAa,CAAC,OAAO;SACxB,CAAC;IACN,CAAC;IAxBe,yBAAW,cAwB1B,CAAA;IAED,SAAgB,qBAAqB,CAAC,aAA4B;QAC9D,QAAQ,aAAa,EAAE;YACnB,KAAK,aAAa,CAAC,UAAU;gBACzB,OAAO,UAAU,CAAC;YAEtB,KAAK,aAAa,CAAC,UAAU;gBACzB,OAAO,UAAU,CAAC;YAEtB,KAAK,aAAa,CAAC,gBAAgB;gBAC/B,OAAO,oCAAoC,CAAC;YAEhD,KAAK,aAAa,CAAC,gBAAgB;gBAC/B,OAAO,2CAA2C,CAAC;YAEvD,KAAK,aAAa,CAAC,gBAAgB;gBAC/B,OAAO,0CAA0C,CAAC;YAEtD,KAAK,aAAa,CAAC,gBAAgB;gBAC/B,OAAO,yCAAyC,CAAC;YAErD,KAAK,aAAa,CAAC,gBAAgB;gBAC/B,OAAO,uCAAuC,CAAC;YAEnD,KAAK,aAAa,CAAC,iBAAiB;gBAChC,OAAO,mCAAmC,CAAC;YAE/C,KAAK,aAAa,CAAC,iBAAiB;gBAChC,OAAO,uBAAuB,CAAC;YAEnC,KAAK,aAAa,CAAC,0BAA0B;gBACzC,OAAO,sCAAsC,CAAC;YAElD,KAAK,aAAa,CAAC,iBAAiB;gBAChC,OAAO,qCAAqC,CAAC;YAEjD,KAAK,aAAa,CAAC,iBAAiB;gBAChC,OAAO,yCAAyC,CAAC;YAErD,KAAK,aAAa,CAAC,cAAc;gBAC7B,OAAO,iDAAiD,CAAC;YAE7D,KAAK,aAAa,CAAC,iBAAiB;gBAChC,OAAO,qCAAqC,CAAC;YAEjD,KAAK,aAAa,CAAC,aAAa;gBAC5B,OAAO,4CAA4C,CAAC;YAExD,KAAK,aAAa,CAAC,iBAAiB;gBAChC,OAAO,uCAAuC,CAAC;YAEnD,KAAK,aAAa,CAAC,iBAAiB;gBAChC,OAAO,iDAAiD,CAAC;YAE7D,KAAK,aAAa,CAAC,uBAAuB;gBACtC,OAAO,2BAA2B,CAAC;YAEvC,KAAK,aAAa,CAAC,mBAAmB;gBAClC,OAAO,mBAAmB,CAAC;YAE/B,KAAK,aAAa,CAAC,cAAc;gBAC7B,OAAO,kBAAkB,CAAC;YAE9B,KAAK,aAAa,CAAC,OAAO;gBACtB,OAAO,SAAS,CAAC;SACxB;IACL,CAAC;IAjEe,mCAAqB,wBAiEpC,CAAA;AACL,CAAC,EA7HS,aAAa,KAAb,aAAa,QA6HtB;AAEyB,gCAAO;;;;;AClHjC,oCAA+B;AAC/B,sEAAiE;AACjE,gDAA+D;AAE/D,IAAM,mBAAmB,GAAG,eAAY,CAAC,0BAA0B,CAAC,CAAC;AAGrE,IAAM,KAAK,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAGjC,IAAM,KAAK,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAGpC,IAAM,KAAK,GAAG,IAAI,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AAGtC,IAAM,KAAK,GAAG,eAAY,CAAC,cAAc,CAAC,CAAC;AAG3C,IAAM,KAAK,GAAG,eAAY,CAAC,0BAA0B,CAAC,CAAC;AAGvD,IAAM,KAAK,GAAG,eAAY,CACtB,4EAA4E;IACxE,4EAA4E;IAC5E,4EAA4E;IAC5E,4EAA4E;IAC5E,kDAAkD,CACzD,CAAC;AAGF,IAAM,MAAM,GAAG,eAAY,CAAC,0BAA0B,CAAC,CAAC;AAGxD,IAAM,OAAO,GAAG,eAAY,CACxB,4EAA4E;IACxE,4EAA4E;IAC5E,0BAA0B,CACjC,CAAC;AAEF,IAAM,KAAK,GAAG;IACV,KAAK;IACL,KAAK;IACL,KAAK;IACL,OAAO;IACP,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,MAAM;CACT,CAAC;AAEF;IACI,uBAAoB,OAAgB;QAAhB,YAAO,GAAP,OAAO,CAAS;IAAG,CAAC;IAExC,iCAAS,GAAT,UAAU,MAAc;QACpB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IAC1B,CAAC;IAED,8BAAM,GAAN,UAAO,IAAY,EAAE,SAAiB;QAGlC,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;YAC5E,OAAO,CAAC,CAAC;SACZ;QAED,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC;IACnC,CAAC;IAED,iCAAS,GAAT,UAAU,GAAW;QACjB,IAAM,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,EAC3B,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC;QAE3B,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;QAEzB,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;SACrB;QAED,MAAM,GAAG,MAAM,GAAG,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QAE9D,IAAM,OAAO,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;QAEzC,IAAM,UAAU,GAAG,gBAAM,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC;QAEzD,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,KAAK,GAAG,IAAI,CAAC;QAEjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7B,CAAC,EAAE,CAAC;YAEJ,IAAI,CAAC,KAAK,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE;gBACnD,CAAC,GAAG,CAAC,CAAC;gBACN,KAAK,EAAE,CAAC;gBAER,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,CAAC,EAAE;oBACxB,MAAM,EAAE,CAAC;oBACT,KAAK,GAAG,CAAC,CAAC;oBAEV,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE;wBACxB,MAAM,GAAG,CAAC,CAAC;qBACd;iBACJ;gBAED,KAAK,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;aAC5B;YAED,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/B;QAED,OAAO,IAAI,2BAAiB,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;IACtD,CAAC;IACL,oBAAC;AAAD,CA/DA,AA+DC,IAAA;AAEyB,gCAAO;;;;;ACzIjC;IACI,2BAAoB,QAAsB,EAAU,WAAmB;QAAnD,aAAQ,GAAR,QAAQ,CAAc;QAAU,gBAAW,GAAX,WAAW,CAAQ;IAAG,CAAC;IAE3E,qCAAS,GAAT;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IAChC,CAAC;IAED,sCAAU,GAAV;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED,yCAAa,GAAb;QACI,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED,mDAAuB,GAAvB,UAAwB,MAAoB;QACxC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;IAC3B,CAAC;IACL,wBAAC;AAAD,CAlBA,AAkBC,IAAA;AAE6B,oCAAO;;;;;ACpBrC;IACI,oBAAoB,SAAiB;QAAjB,cAAS,GAAT,SAAS,CAAQ;QAuD7B,UAAK,GAAG,CAAC,CAAC;QACV,WAAM,GAAG,CAAC,CAAC;QAvDf,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,CAAI,IAAI,CAAC,SAAS,CAAC,CAAC;QAE5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;YACrC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SAC1B;IACL,CAAC;IAED,yBAAI,GAAJ;QACI,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,wBAAG,GAAH;QACI,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;YAClB,OAAO,SAAS,CAAC;SACpB;QAED,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;QAEjC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACjD,IAAI,CAAC,KAAK,EAAE,CAAC;QAEb,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,yBAAI,GAAJ,UAAK,IAAO;QACR,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,SAAS,EAAE;YAC/B,IAAI,CAAC,GAAG,EAAE,CAAC;SACd;QAED,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;QAEnE,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,4BAAO,GAAP,UAAQ,EAAqB;QACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACjC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SACxD;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,0BAAK,GAAL;QACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;YACrC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SAC1B;QAED,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAEhB,OAAO,IAAI,CAAC;IAChB,CAAC;IAKL,iBAAC;AAAD,CA3DA,AA2DC,IAAA;AAEsB,6BAAO;;;;;AC7D9B,IAAM,eAAe,GAAG,kEAAkE,EACtF,SAAS,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;AAEpC,IAAiB,MAAM,CAWtB;AAXD,WAAiB,MAAM;IACnB,IAAI,CAAS,CAAC;IAEd,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QACtB,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;KACtB;IACD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;QACrB,SAAS,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KAChD;IAED,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACrC,CAAC,EAXgB,MAAM,GAAN,cAAM,KAAN,cAAM,QAWtB;AAED,SAAS,UAAU,CAAC,IAAY,EAAE,GAAW;IACzC,IAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IAE9C,IAAI,KAAK,GAAG,EAAE,EAAE;QACZ,MAAM,IAAI,KAAK,CAAC,4BAA4B,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,aAAa,GAAG,GAAG,CAAC,CAAC;KACnF;IAED,OAAO,KAAK,CAAC;AACjB,CAAC;AAED,SAAS,YAAY,CAAC,IAAY,EAAE,GAAW;IAC3C,OAAO,CACH,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC;QAC7B,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;QACjC,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;QAChC,UAAU,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAC5B,CAAC;AACN,CAAC;AAED,SAAS,UAAU,CAAC,IAAY;IAC5B,IAAI,OAAO,GAAG,CAAC,EACX,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAE1B,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,GAAG,EAAE;QACpC,OAAO,EAAE,CAAC;KACb;IAED,OAAO,OAAO,CAAC;AACnB,CAAC;AAED,SAAgB,MAAM,CAAC,IAAY;IAC/B,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;QACvB,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;KAClE;IAED,IAAM,OAAO,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAC3B,WAAW,GAAG,OAAO,GAAG,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,EAC5C,OAAO,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC;IAE1C,IAAI,GAAG,GAAG,CAAC,CAAC;IAEZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;QAC9B,IAAM,MAAM,GAAG,YAAY,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAEzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;YAC7C,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SACtD;KACJ;IAED,OAAO,OAAO,CAAC;AACnB,CAAC;AApBD,wBAoBC;;;;;;AClED,IAAM,UAAU,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC;AAElD,SAAgB,gBAAgB,CAAC,MAAW;;IACxC,IAAM,mBAAmB,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IAC/C,IAAI,CAAC,mBAAmB,EAAE;QACtB,OAAO;KACV;;QAED,KAAmB,IAAA,wBAAA,iBAAA,mBAAmB,CAAA,wDAAA,yFAAE;YAAnC,IAAM,IAAI,gCAAA;YACX,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAAC;SACjF;;;;;;;;;AACL,CAAC;AATD,4CASC;AAED,SAAgB,SAAS,CAAC,MAAW,EAAE,IAAY;IAC/C,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;QACrB,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;KAChG;IAED,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClC,CAAC;AAND,8BAMC;;;;;ACnBD,+CAAsC;AAEtC,2CAAsC;AAGtC;IACI,cAAoB,QAAkC;QAAlC,aAAQ,GAAR,QAAQ,CAA0B;QA0DtD,UAAK,GAAG;YACJ,OAAO,EAAE,IAAI,qBAAK,EAAK;YACvB,OAAO,EAAE,IAAI,qBAAK,EAAK;SAC1B,CAAC;QAEM,UAAK,GAAyB,EAAE,CAAC;QAEjC,cAAS,GAAG,CAAC,CAAC;IAjEmC,CAAC;IAE1D,kBAAG,GAAH;QAAA,iBAiBC;QAhBG,IAAI,MAAqB,CAAC;QAE1B,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;YACtB,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEhC,MAAM,GAAG,IAAI,oBAAU,CACnB,OAAO,EACP,UAAC,MAAqB,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAA3B,CAA2B,EACtD,UAAC,MAAqB,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAA3B,CAA2B,CACzD,CAAC;SACL;aAAM;YACH,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YACtC,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC;SAC/B;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;IAEO,6BAAc,GAAtB,UAAuB,MAAqB;QACxC,IAAI,MAAM,CAAC,YAAY,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;SACxE;QAED,IAAI,MAAM,CAAC,WAAW,EAAE;YACpB,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;SACxE;QAED,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAElC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;QAE9B,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,MAAM,CAAC,aAAa,GAAG,QAAQ,CAAC;QAEhC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;IAC9C,CAAC;IAEO,6BAAc,GAAtB,UAAuB,MAAqB;QACxC,IAAI,MAAM,CAAC,WAAW,EAAE;YACpB,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;SAC3E;QAED,IAAI,MAAM,CAAC,YAAY,EAAE;YACrB,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;gBACpB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;aACrE;YAED,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;QAED,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;QAE1B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;IAC9C,CAAC;IAUL,WAAC;AAAD,CAnEA,AAmEC,IAAA;AAgBgB,uBAAO;;;;;ACtFxB;IACI,oBACY,MAAS,EACT,UAA2C,EAC3C,UAA2C;QAF3C,WAAM,GAAN,MAAM,CAAG;QACT,eAAU,GAAV,UAAU,CAAiC;QAC3C,eAAU,GAAV,UAAU,CAAiC;QAmBhD,iBAAY,GAAG,KAAK,CAAC;QACrB,gBAAW,GAAG,KAAK,CAAC;IAnBxB,CAAC;IAEJ,0BAAK,GAAL,UAAM,MAAS;QACX,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED,wBAAG,GAAH;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,4BAAO,GAAP;QACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,4BAAO,GAAP;QACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAKL,iBAAC;AAAD,CA1BA,AA0BC,IAAA;AAEsB,6BAAO;;;;;AC9B9B,uCAAyC;AAIzC,IAAM,cAAc,GAAG,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;AAEtE;IACI,+BACY,YAAyB,EACzB,OAAgB,EAChB,gBAA2C;QAD3C,wBAAA,EAAA,gBAAgB;QAChB,iCAAA,EAAA,2CAA2C;QAHvD,iBAII;QAHQ,iBAAY,GAAZ,YAAY,CAAa;QACzB,YAAO,GAAP,OAAO,CAAS;QAChB,qBAAgB,GAAhB,gBAAgB,CAA2B;QA2G/C,oBAAe,GAAG;YACtB,IAAI,KAAI,CAAC,aAAa,EAAE;gBACpB,OAAO;aACV;YAED,KAAI,CAAC,aAAa,GAAG,UAAU,CAAC;gBAC5B,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,KAAI,CAAC,wBAAwB,EAAE,CAAC;YACpC,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,CAAC,CAAC;QAEM,kBAAa,GAAQ,IAAI,CAAC;QAE1B,oBAAe,GAAe,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAExD,aAAQ,GAAG,KAAK,CAAC;IAzHtB,CAAC;IAEJ,sCAAM,GAAN;QACI,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,OAAO;SACV;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,cAAc,IAAI,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAChC,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;YACxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACxB;aAAM;YACH,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;YAC9C,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,CAAC;SACrD;IACL,CAAC;IAED,yCAAS,GAAT;QACI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,OAAO;SACV;QAED,IAAI,cAAc,IAAI,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;YAC3D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACzB;aAAM;YACH,UAAU,CAAC,IAAI,EAAE,CAAC;SACrB;IACL,CAAC;IAED,sCAAM,GAAN;QACI,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;aAAM;YACH,IAAI,CAAC,MAAM,EAAE,CAAC;SACjB;IACL,CAAC;IAED,yCAAS,GAAT;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAEO,yCAAS,GAAjB;QACI,IAAI,CAAC,UAAU,EAAE;YACb,OAAO;SACV;QAED,IAAI,UAAU,CAAC,YAAY,EAAE;YACzB,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;YACxD,IAAI,CAAC,wBAAwB,EAAE,CAAC;SACnC;aAAM;YACH,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;YAC3D,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;YAE/C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACzB;IACL,CAAC;IAEO,0CAAU,GAAlB;QAAA,iBAuBC;QAtBG,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;QAE9C,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC7B;QAED,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QACzB,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;QAC1B,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC5B,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;QAE7B,IAAI,cAAc,EAAE;YAChB,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;YAC5B,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;YACvB,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;YACxB,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;SAC7B;QAED,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAEtD,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,EAA1B,CAA0B,EAAE,CAAC,CAAC,CAAC;IACpD,CAAC;IAEO,wDAAwB,GAAhC;QACI,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;QAE9C,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;QAChE,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;QAC/C,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;QACjD,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;QAClD,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;QAEpD,IAAI,cAAc,EAAE;YAChB,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;YACjC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;YACxB,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;YACzB,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;SAC5C;QAED,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACvD,CAAC;IAkBL,4BAAC;AAAD,CA/HA,AA+HC,IAAA;;;;;;;;ACrID,+CAAsC;AAKtC,IAAM,iBAAiB,GAAG,EAAE,CAAC;AAY7B,IAAM,gBAAgB;IAClB,WAAoB,CAAC,EAAE,CAAC;IACxB,aAAsB,CAAC,EAAE,CAAC;IAC1B,aAAsB,CAAC,EAAE,CAAC;IAC1B,cAAuB,CAAC,EAAE,CAAC;IAC3B,aAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAC1C,eAAwB,CAAC,CAAC,CAAC;IAC3B,cAAuB,CAAC,CAAC,CAAC;OAC7B,CAAC;AAEF;IAAA;QAAA,iBA6PC;QAhBW,sBAAiB,GAAG,cAAM,OAAA,KAAI,CAAC,cAAc,EAAE,EAArB,CAAqB,CAAC;QAChD,yBAAoB,GAAG,cAAM,OAAA,KAAI,CAAC,cAAc,EAAE,EAArB,CAAqB,CAAC;QAE3D,wBAAmB,GAAG,IAAI,qBAAK,EAAU,CAAC;QAElC,WAAM,GAAG,KAAK,CAAC;QACf,kBAAa,GAAG,CAAC,CAAC;QAClB,cAAS,GAAG,CAAC,CAAC;QAEd,eAAU,GAAoC,IAAI,CAAC;QACnD,WAAM,GAAoB,IAAI,CAAC;QAC/B,YAAO,GAAoB,IAAI,CAAC;QAEhC,qBAAgB,GAA0B,IAAI,CAAC;QAC/C,iBAAY,GAAiB,IAAI,CAAC;QAClC,kBAAa,GAAiB,IAAI,CAAC;IAC/C,CAAC;IA5PG,4BAAI,GAAJ;QACI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAChD;QAED,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,MAAM,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACpE,MAAM,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAC9E,CAAC;IAED,8BAAM,GAAN;QACI,IAAI,CAAC,MAAM,EAAE,CAAC;QAEd,MAAM,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACvE,MAAM,CAAC,mBAAmB,CAAC,qBAAqB,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;IACjF,CAAC;IAED,4BAAI,GAAJ,UAAK,EAQJ;QARD,iBA2BC;YA1BG,iBAAgB,EAAhB,qCAAgB,EAChB,aAAY,EAAZ,iCAAY,EACZ,cAAa,EAAb,kCAAa;QAMb,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,OAAO;SACV;QAED,IAAI,CAAC,UAAU,GAAG,SAAS,IAAI,EAAE,CAAC;QAClC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,oBAAoB,EAAE,EAAtB,CAAsB,CAAC,CAAC;QACzE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,YAAY,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QAC5D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,YAAY,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QAE9D,IAAI,CAAC,mBAAmB,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK;YACpC,OAAA,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,aAAa,CAAC,mBAAmB,EAAE,KAAI,CAAC;QAApE,CAAoE,CACvE,CAAC;QAEF,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,8BAAM,GAAN;QAAA,iBAWC;QAVG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,OAAO;SACV;QAED,IAAI,CAAC,mBAAmB,EAAE,CAAC,OAAO,CAAC,UAAA,KAAK;YACpC,OAAA,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,mBAAmB,EAAE,KAAI,CAAC;QAAvE,CAAuE,CAC1E,CAAC;QAEF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,uCAAe,GAAf;QACI,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAEc,iCAAmB,GAAlC,UAAmC,KAAsB,EAAE,IAAmB;QAC1E,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAEvB,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,iBAAiB,EAAE;YACtE,OAAO;SACV;QAED,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QAErB,IAAI,YAAY,GAAG,CAAC,EAChB,aAAa,GAAG,CAAC,EACjB,KAAK,GAAG,KAAK,EACb,MAAM,GAAG,KAAK,CAAC;QAEnB,IAAM,QAAQ,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;QAEzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,IAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAE5B,IAAI,CAAC,OAAO,EAAE;gBACV,SAAS;aACZ;YAED,YAAY,EAAE,CAAC;YAEf,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,aAAa,EAAE,CAAC,CAAC;YAEpD,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,SAAqB,EAAE,OAAO,CAAC,CAAC;YACjF,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,UAAsB,EAAE,OAAO,CAAC,CAAC;SACvF;QAED,IAAI,YAAY,GAAG,CAAC,EAAE;YAClB,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aACnC;YAED,IAAI,IAAI,CAAC,OAAO,EAAE;gBACd,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;aACrC;SACJ;QAED,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEO,2CAAmB,GAA3B;;QACI,IAAM,QAAQ,GAA2B,EAAE,CAAC;;YAE5C,KAAuB,IAAA,KAAA,iBAAA,IAAI,CAAC,UAAU,CAAA,gBAAA,4BAAE;gBAAnC,IAAM,QAAQ,WAAA;gBACf,QAAQ,CAAC,IAAI,CACT,QAAQ,CAAC,OAAO,EAAE,EAClB,QAAQ,CAAC,QAAQ,EAAE,EACnB,QAAQ,CAAC,KAAK,EAAE,EAChB,QAAQ,CAAC,OAAO,EAAE,EAClB,QAAQ,CAAC,OAAO,EAAE,CACrB,CAAC;aACL;;;;;;;;;QAED,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC/B;QAED,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC9B;QAED,OAAO,QAAQ,CAAC;IACpB,CAAC;IAEO,kCAAU,GAAlB,UAAmB,OAAsB,EAAE,OAAgB;QACvD,IAAI,KAAK,GAAG,KAAK,CAAC;QAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,IAAM,MAAM,GAA2B,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YAEnE,KAAK,GAAG,KAAK,IAAI,CAAC,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC;SAClF;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAEO,4CAAoB,GAA5B,UAA6B,OAAgB,EAAE,aAAqB;QAChE,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,aAAa,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;YAC7D,OAAO;SACV;QAED,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;QAEtD,QAAQ,QAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,QAAoB,EAAE,OAAO,CAAC,CAAC,CAAC;QACpG,QAAQ,SAAqB,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,SAAqB,EAAE,OAAO,CAAC,CAAC,CAAC;QACtG,QAAQ,MAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,MAAkB,EAAE,OAAO,CAAC,CAAC,CAAC;QAChG,QAAQ,QAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,QAAoB,EAAE,OAAO,CAAC,CAAC,CAAC;QACpG,QAAQ,QAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,QAAoB,EAAE,OAAO,CAAC,CAAC,CAAC;QAEpG,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE;YAClD,QAAQ,QAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC7C;QAED,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE;YAChD,QAAQ,SAAqB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC9C;QAED,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE;YAClD,QAAQ,MAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC3C;QAED,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE;YAChD,QAAQ,QAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC7C;IACL,CAAC;IAEO,oCAAY,GAApB;QACI,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAC/B,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;gBAEtC,MAAM,QAAoB,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC/D,MAAM,SAAqB,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;gBACjE,MAAM,MAAkB,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC3D,MAAM,QAAoB,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC/D,MAAM,QAAoB,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;aAClE;SACJ;QAED,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;SAClD;QAED,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;SACpD;IACL,CAAC;IAEO,oCAAY,GAApB;QACI,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAC/B,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;gBAEtC,MAAM,QAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;gBACpD,MAAM,SAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACtD,MAAM,MAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;gBAChD,MAAM,QAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;gBACpD,MAAM,QAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;aACvD;SACJ;QAED,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACvC;QAED,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACzC;IACL,CAAC;IAEO,sCAAc,GAAtB;QACI,IAAI,GAAG,GAAG,CAAC,CAAC;QAEZ,IAAM,QAAQ,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;QAEzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;gBACb,GAAG,EAAE,CAAC;aACT;SACJ;QAED,IAAI,GAAG,KAAK,IAAI,CAAC,aAAa,EAAE;YAC5B,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACzD;IACL,CAAC;IAkBL,oBAAC;AAAD,CA7PA,AA6PC,IAAA;;AAED;IAAA;QAsBY,WAAM,GAAG,KAAK,CAAC;QACf,WAAM,GAAG,KAAK,CAAC;IAC3B,CAAC;IAvBG,6BAAM,GAAN,UAAO,KAAc;QACjB,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,EAAE;YACvB,OAAO;SACV;QAED,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,+BAAQ,GAAR,UAAS,KAAc;QACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,2BAAI,GAAJ,UAAK,KAAsB;QACvB,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACvB;IACL,CAAC;IAIL,mBAAC;AAAD,CAxBA,AAwBC,IAAA;AAMD,SAAS,oBAAoB;;IACzB;QACI,aAAsB,IAAI,YAAY,EAAE;QACxC,cAAuB,IAAI,YAAY,EAAE;QACzC,WAAoB,IAAI,YAAY,EAAE;QACtC,aAAsB,IAAI,YAAY,EAAE;QACxC,aAAsB,IAAI,YAAY,EAAE;WAC1C;AACN,CAAC;;;;;AC9TD;IAAA;QAyCY,OAAE,GAAG,CAAC,CAAC,CAAC;QACR,cAAS,GAA4B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtF,CAAC;IA1CG,kCAAI,GAAJ,UAAK,MAAuB;QACxB,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,OAAO;SACV;QAED,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QAEb,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC3D,CAAC;IAED,oCAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,OAAO;SACV;QAED,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACxB,CAAC;IAEO,kDAAoB,GAA5B,UAA6B,CAAa;QACtC,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE;YACd,IAAM,EAAE,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC;YAC/B,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YAEpC,KAAK,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,UAAU,GAAG,GAAG,CAAC;YACvC,IAAI,KAAK,GAAG,CAAC,EAAE;gBACX,KAAK,GAAG,CAAC,CAAC;aACb;YACD,IAAI,KAAK,GAAG,CAAC,EAAE;gBACX,KAAK,GAAG,CAAC,CAAC;aACb;YAED,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAChC;QAED,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC;IACxB,CAAC;IAKL,0BAAC;AAAD,CA3CA,AA2CC,IAAA;;;;;;;ACzCD,IAAM,eAAe,GAAG;IACpB,uBAAuB;IACvB,0BAA0B;IAC1B,6BAA6B;IAC7B,yBAAyB;CAC5B,CAAC;AAEF,IAAM,0BAA0B,GAAG,GAAG,CAAC;AAEvC;IACI,2BAAoB,OAA0B,EAAU,OAAe;QAAf,wBAAA,EAAA,UAAU,CAAC,GAAG,CAAC;QAAnD,YAAO,GAAP,OAAO,CAAmB;QAAU,YAAO,GAAP,OAAO,CAAQ;QA2N/D,mBAAc,GAAG,IAAI,CAAC;QACtB,0BAAqB,GAAG,CAAC,CAAC;QAC1B,kBAAa,GAAmC,IAAI,CAAC;QAGrD,WAAM,GAA2B,IAAI,CAAC;QAKtC,iBAAY,GAAG,IAAI,CAAC;QApOxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAE9C,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACtD,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,0BAA0B,CAAC;QAClF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC9D,CAAC;IAED,kCAAM,GAAN,UAAO,KAAc,EAAE,MAAe;QAClC,IAAI,OAAO,KAAK,KAAK,WAAW,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;YAC/D,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;YACjC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;SACtC;QAED,IAAI,UAAU,GAAG,MAAM,CAAC,gBAAgB,IAAI,CAAC,CAAC;QAC9C,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAC5B,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;YAEhC,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,IAAI,KAAK,EAAE;gBAChC,IAAI,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE;oBACnD,UAAU,GAAG,CAAC,CAAC;iBAClB;aACJ;iBAAM;gBACH,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE;oBACjD,UAAU,GAAG,CAAC,CAAC;iBAClB;aACJ;SACJ;QACD,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,GAAG,UAAU,CAAC;QACxC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,GAAG,UAAU,CAAC;QAE1C,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAI,CAAC,2BAA2B,EAAE,CAAC;QAEnC,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,gCAAI,GAAJ;QACI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,EAAE,CAAC;QAEd,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,iCAAK,GAAL;QACI,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,+CAAmB,GAAnB,UAAoB,aAAsB;QACtC,IAAI,aAAa,KAAK,IAAI,CAAC,cAAc,EAAE;YACvC,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QAEpC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,gDAAoB,GAApB;QACI,OAAO,IAAI,CAAC,cAAc,CAAC;IAC/B,CAAC;IAED,gCAAI,GAAJ,UAAK,KAA6B;QAC9B,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QACrE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;QAExE,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,iBAAiB,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QAEvE,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kCAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QAC1E,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,+CAAmB,GAAnB,UAAoB,MAAe;QAC/B,IAAI,IAAI,CAAC,YAAY,KAAK,MAAM,EAAE;YAC9B,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAE3B,IAAI,CAAC,2BAA2B,EAAE,CAAC;QAEnC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,gDAAoB,GAApB;QACI,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED,qCAAS,GAAT;QACI,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAEc,+BAAa,GAA5B,UAA6B,mBAAmD,EAAE,IAAuB;QACrG,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;SAChC;QAED,IAAI,CAAC,aAAa,GAAG,mBAAmB,CAAC;QAEzC,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;gBAC7B,IAAI,CAAC,aAAa,EAAE,CAAC;aACxB;SACJ;aAAM;YACH,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;IACL,CAAC;IAEO,wCAAY,GAApB;QACI,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,aAAa,CAAC;QACxC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC1E,CAAC;IAEO,8CAAkB,GAA1B;QACI,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,aAAa,CAAC;QAC9C,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAC5F,CAAC;IAEO,iCAAK,GAAb;QACI,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC9B,CAAC;IAEO,+CAAmB,GAA3B;QACI,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACrE,CAAC;IAEO,yCAAa,GAArB;QACI,IAAI,CAAC,QAAQ,CAAC,SAAS,CACnB,IAAI,CAAC,aAAa,EAClB,CAAC,EACD,CAAC,EACD,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,aAAa,CACrB,CAAC;IACN,CAAC;IAEO,yCAAa,GAArB;QAAA,iBAOC;QANG,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;YAC7B,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;gBAC/C,KAAI,CAAC,KAAK,EAAE,CAAC;gBACb,KAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAEO,+CAAmB,GAA3B;QACI,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC5B,oBAAoB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YACjD,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;SAClC;QAED,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC7B;IACL,CAAC;IAEO,uDAA2B,GAAnC;QACI,IAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAClC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAEvC,IAAI,IAAI,CAAC,OAAO,GAAG,YAAY,IAAI,WAAW,EAAE;YAC5C,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;YAClC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;YAChD,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;SACrE;aAAM;YACH,IAAI,CAAC,aAAa,GAAG,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;YAChD,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;YAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;YACpE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;SACrB;IACL,CAAC;IAEO,uDAA2B,GAAnC;;;YACI,KAAmB,IAAA,oBAAA,iBAAA,eAAe,CAAA,gDAAA,6EAAE;gBAA/B,IAAM,IAAI,4BAAA;gBACV,IAAI,CAAC,QAAgB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;aACpD;;;;;;;;;IACL,CAAC;IAqBL,wBAAC;AAAD,CA/OA,AA+OC,IAAA;;;;;;;AC5PD,2CAAoC;AAGpC,2DAAsD;AACtD,iDAA4C;AAK5C,IAAM,qBAAqB,GAAG,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAE,MAAc,CAAC,MAAM,CAAC;AACzG,IAAM,kBAAkB,GAAG,CAAC,YAAY,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;AAU9D,IAAM,gBAAgB,GAAG,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,kBAAkB,CAAC;AAE1E;IACI;QAAA,iBAcC;QAMO,yBAAoB,GAAG;YAC3B,IAAM,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC;YAE7B,KAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACjC,kBAAkB,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,mBAAmB,CAAC,KAAK,EAAE,KAAI,CAAC,oBAAoB,CAAC,EAA9D,CAA8D,CAAC,CAAC;YAEpG,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC;gBACpB,OAAO,CAAC,MAAM,EAAE,CAAC;gBAEjB,OAAO,IAAI,OAAO,CAAC,UAAA,CAAC;oBAChB,OAAA,UAAU,CAAC;wBACP,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,CAAC,EAAE,CAAC;oBACR,CAAC,EAAE,GAAG,CAAC;gBAHP,CAGO,CACV,CAAC;YACN,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;QAEc,UAAK,GAAG,IAAI,mBAAK,EAAE,CAAC;QACpB,YAAO,GAAiB,IAAI,CAAC;QACtC,wBAAmB,GAAG,IAAI,CAAC;QAvC9B,IAAI,CAAC,gBAAgB,EAAE;YACnB,OAAO;SACV;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,gBAAgB,EAAE,CAAC;QAEtC,IAAI;YACA,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,YAAY,GAAG,CAAC,CAAC;SAC7C;QAAC,OAAO,CAAC,EAAE;YACR,OAAO,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;SAC7D;QAED,kBAAkB,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAI,CAAC,oBAAoB,CAAC,EAA3D,CAA2D,CAAC,CAAC;IACrG,CAAC;IAED,2CAAa,GAAb;QAAA,iBAEC;QADG,kBAAkB,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,mBAAmB,CAAC,KAAK,EAAE,KAAI,CAAC,oBAAoB,CAAC,EAA9D,CAA8D,CAAC,CAAC;IACxG,CAAC;IAuBL,0BAAC;AAAD,CA1CA,AA0CC,IAAA;AAED,IAAI,mBAAmB,GAAG,qBAAqB,CAAC,CAAC,CAAC,IAAI,mBAAmB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;AAEnF;IACI,wBAAY,gBAAoB,EAAE,WAAe,EAAE,YAAqB;QAA5D,iCAAA,EAAA,oBAAoB;QAAE,4BAAA,EAAA,eAAe;QAAjD,iBAaC;QA2GO,mBAAc,GAAG;YACrB,kBAAkB,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,mBAAmB,CAAC,KAAK,EAAE,KAAI,CAAC,cAAc,EAAE,IAAI,CAAC,EAA9D,CAA8D,CAAC,CAAC;YAEpG,IAAI,CAAC,KAAI,CAAC,QAAQ,EAAE;gBAChB,OAAO;aACV;YAED,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YAEvB,UAAU,CAAC;gBACP,KAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAM,OAAA,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAApE,CAAoE,CAAC,CAAC;YACzG,CAAC,EAAE,EAAE,CAAC,CAAC;QACX,CAAC,CAAC;QAEM,aAAQ,GAAiB,IAAI,CAAC;QAC9B,YAAO,GAAsB,IAAI,CAAC;QAClC,sBAAiB,GAA2B,IAAI,CAAC;QACjD,iBAAY,GAAsB,IAAI,CAAC;QACvC,cAAS,GAA4B,IAAI,CAAC;QAC1C,WAAM,GAAG,IAAI,GAAG,EAAuB,CAAC;QACxC,WAAM,GAAG,IAAI,mBAAK,EAAE,CAAC;QAErB,eAAU,GAAG,IAAI,CAAC;QAElB,aAAQ,GAAG,KAAK,CAAC;QA/IrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,KAAK,CAAkB,gBAAgB,CAAC,CAAC;QACtE,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,CAAa,WAAW,CAAC,CAAC;QAEvD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAAG,IAAI,yBAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAChE;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI,oBAAU,CAAC,YAAY,CAAC,CAAC;SACvD;QAED,IAAI,CAAC,SAAS,oBAAO,IAAI,CAAC,iBAAiB,EAAK,IAAI,CAAC,YAAY,CAAC,CAAC;IACvE,CAAC;IAED,6BAAI,GAAJ;QAAA,iBA+BC;QA9BG,IAAI,mBAAmB,EAAE;YACrB,IAAM,CAAC,GAAG,mBAAmB,CAAC;YAC9B,mBAAmB,GAAG,IAAI,mBAAmB,EAAE,CAAC;YAEhD,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC;YAC1B,CAAC,CAAC,aAAa,EAAE,CAAC;YAElB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC;YAEtB,IAAI,CAAC,CAAC,mBAAmB,EAAE;gBACvB,kBAAkB,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,QAAQ,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAI,CAAC,cAAc,EAAE,IAAI,CAAC,EAA3D,CAA2D,CAAC,CAAC;aACpG;SACJ;aAAM;YACH,IAAI,CAAC,gBAAgB,EAAE;gBACnB,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;aAC5D;YAED,IAAI,CAAC,QAAQ,GAAG,IAAI,gBAAgB,EAAE,CAAC;YAEvC,IAAI;gBACA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,GAAG,CAAC,CAAC;aAC9C;YAAC,OAAO,CAAC,EAAE;gBACR,OAAO,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;aAC7D;SACJ;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACxE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAEhD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,EAAzC,CAAyC,CAAC,CAAC;IACjF,CAAC;IAED,6BAAI,GAAJ,UACI,eAAyD,EACzD,UAAiD;QADjD,gCAAA,EAAA,oBAAyD;QACzD,2BAAA,EAAA,eAAiD;QAEjD,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,OAAO;SACV;QAED,IAAI,eAAe,CAAC,MAAM,KAAK,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE;YAC1D,MAAM,IAAI,KAAK,CACX,kDAAgD,IAAI,CAAC,iBAAiB,CAAC,MAAM,cACzE,eAAe,CAAC,MAClB,CACL,CAAC;SACL;QAED,IAAI,UAAU,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;YAChD,MAAM,IAAI,KAAK,CACX,kDAAgD,IAAI,CAAC,YAAY,CAAC,MAAM,cAAS,UAAU,CAAC,MAAQ,CACvG,CAAC;SACL;QAED,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,CAAC,IAAK,OAAA,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAhC,CAAgC,CAAC,CAAC;QACjF,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,CAAC,IAAK,OAAA,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAA3B,CAA2B,CAAC,CAAC;QAEvE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,+BAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,OAAO;SACV;QAED,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,MAAM,EAAE,EAAhB,CAAgB,CAAC,CAAC;QAEpD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAED,wCAAe,GAAf,UAAgB,OAAe,EAAE,MAAc;QAC3C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;IACpD,CAAC;IAED,8BAAK,GAAL;QAAA,iBASC;QARG,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;YAC5B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,OAAO,IAAI,OAAO,CAAC,UAAA,OAAO;gBACtB,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;gBAC/C,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+BAAM,GAAN;QAAA,iBASC;QARG,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;YAC5B,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAExB,OAAO,IAAI,OAAO,CAAC,UAAA,OAAO;gBACtB,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;gBAC9C,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8BAAK,GAAL;QAAA,iBAEC;QADG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,EAArB,CAAqB,CAAC,CAAC;IAC1D,CAAC;IA2BL,qBAAC;AAAD,CAlJA,AAkJC,IAAA;AAE0B,iCAAO;;;;;ACtNlC;IACI;QAqCQ,YAAO,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;QAC9B,qBAAgB,GAAG,CAAC,CAAC;QACrB,eAAU,GAAG,KAAK,CAAC;QAEnB,WAAM,GAAG,CAAC,CAAC;QAxCf,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrB,CAAC;IAED,+BAAK,GAAL,UAAM,UAAkB,EAAE,UAAkB;QACxC,IAAI,CAAC,MAAM,GAAG,UAAU,GAAG,UAAU,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAE1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACxB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACvB;IACL,CAAC;IAED,6BAAG,GAAH;QACI,IAAM,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAElG,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,MAAM,CAAC;QACrC,IAAI,IAAI,CAAC,gBAAgB,GAAG,CAAC,EAAE;YAC3B,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SAC1B;QAED,OAAO,CAAC,CAAC;IACb,CAAC;IAED,8BAAI,GAAJ,UAAK,MAAc;QACf,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;QAEzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,mCAAS,GAAT;QACI,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAOL,sBAAC;AAAD,CA3CA,AA2CC,IAAA;AAE2B,kCAAO;;;;;AC5CnC,wDAAmD;AAEnD,qDAAgD;AAEhD;IACI,oBAAoB,iBAAwB;QAAxB,kCAAA,EAAA,wBAAwB;QAAxB,sBAAiB,GAAjB,iBAAiB,CAAO;QA0IpC,sBAAiB,GAAG,CAAC,CAAC;QACtB,gBAAW,GAAG,CAAC,CAAC;QAChB,YAAO,GAAG,CAAC,CAAC;QAEZ,UAAK,GAAa,IAAI,CAAC;QACvB,eAAU,GAAwB,IAAI,CAAC;QACvC,oBAAe,GAAG,KAAK,CAAC;QAExB,kBAAa,GAAkD,IAAI,CAAC;QAEpE,kBAAa,GAAG,CAAC,CAAC;QAClB,qBAAgB,GAAG,CAAC,CAAC;QACrB,mBAAc,GAAG,CAAC,CAAC;QACnB,qBAAgB,GAAsC,IAAI,CAAC;QAC3D,kBAAa,GAAsC,IAAI,CAAC;QAIxD,eAAU,GAAuB,IAAI,yBAAe,EAAE,CAAC;IA5JhB,CAAC;IAEhD,yBAAI,GAAJ,UAAK,OAAqB,EAAE,MAAiB;QAA7C,iBAeC;QAdG,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC,UAAU,CAAC;QAE5C,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;QACrC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAE3B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,qBAAqB,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9E,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;QAE9C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAArB,CAAqB,CAAC;QAE5D,IAAM,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;QAC9D,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,yBAAI,GAAJ,UAAK,KAAgC;QACjC,IAAI,CAAC,MAAM,EAAE,CAAC;QAEd,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;QAC1C,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,aAAa,EAAE,CAAC;QAC9C,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,oBAAU,CAC/B,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,CACxG,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QAEjE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACzE,CAAC;IAED,2BAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,OAAO;SACV;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QAEpE,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC7B;QAED,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;YAChC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAChC;QAED,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,EAAE,EAAX,CAAW,CAAC,CAAC;YAC7C,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC7B;IACL,CAAC;IAED,oCAAe,GAAf,UAAgB,MAAc;QAC1B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IAC1B,CAAC;IAEc,yBAAc,GAA7B,UAA8B,QAA2C,EAAE,IAAgB;QACvF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAElC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;YACjD,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;SAC3B;IACL,CAAC;IAEO,kCAAa,GAArB,UAAsB,CAAuB;QAA7C,iBA8DC;QA7DG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,OAAO;SACV;QAED,IAAM,YAAY,GAAG,CAAC,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,WAAW,GAAG,CAAC,CAAC;QAEpB,IAAM,UAAU,GAAG,UAAC,KAAa;YAC7B,IAAM,sBAAsB,GAAG,KAAI,CAAC,aAAa,IAAI,KAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;YAE9E,OAAO,WAAW,GAAG,KAAK,EAAE;gBACxB,IAAI,KAAI,CAAC,UAAU,CAAC,SAAS,EAAE,EAAE;oBAC7B,KAAI,CAAC,UAAU,CAAC,IAAI,CAChB,CAAC,KAAI,CAAC,MAAM,IAAI,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,sBAAsB;wBAC9D,CAAC,CAAC,CAAC;wBACH,CAAC,CAAC,sBAAsB,CAAC,KAAI,CAAC,cAAc,EAAE,CAAC,GAAG,KAAI,CAAC,OAAO,CACrE,CAAC;oBAEF,IAAI,KAAI,CAAC,cAAc,IAAI,KAAI,CAAC,aAAa,EAAE;wBAC3C,KAAI,CAAC,cAAc,GAAG,CAAC,CAAC;qBAC3B;iBACJ;gBAED,YAAY,CAAC,WAAW,EAAE,CAAC,GAAG,KAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;aACvD;QACL,CAAC,CAAC;QAGF,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,eAAe,EAAE;YAC/C,UAAU,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAChC;QAED,IAAI,cAAc,GAAG,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC;QAE1E,OAAO,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,gBAAgB,EAAE;YAC5D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,EAAE;gBAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;gBAE3E,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,aAAa,EAAE;oBAC3C,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;oBAExB,IAAI,IAAI,CAAC,aAAa,EAAE;wBACpB,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;qBAChC;oBAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC;oBAC3C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;oBAEjD,cAAc,GAAG,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC;iBACzE;aACJ;YAED,YAAY,CAAC,WAAW,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;SACvD;QAED,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE;YAChC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC/B;QAED,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAqBL,iBAAC;AAAD,CA9JA,AA8JC,IAAA;AAEsB,6BAAO;;;;;ACpK9B;IACI,yBAAoB,MAAgC;QAAhC,WAAM,GAAN,MAAM,CAA0B;QAqF5C,aAAQ,GAAiB,IAAI,CAAC;QAC9B,YAAO,GAA0B,IAAI,CAAC;QACtC,UAAK,GAAa,IAAI,CAAC;QACvB,WAAM,GAAiC,IAAI,CAAC;QAE5C,YAAO,GAAG,CAAC,CAAC;QACZ,kBAAa,GAAG,CAAC,CAAC;IA3F6B,CAAC;IAExD,8BAAI,GAAJ,UAAK,OAAqB,EAAE,MAAiB;QACzC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAExB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;QACxC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAED,8BAAI,GAAJ,UAAK,MAAoC;QACrC,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,OAAO;SACV;QAED,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;QACvC,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,eAAe,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QAC7E,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,eAAe,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QAC7E,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC;IAED,gCAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,OAAO;SACV;QAED,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,eAAe,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QAChF,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,eAAe,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QAChF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAE9D,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACvB;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,yCAAe,GAAf,UAAgB,MAAc;QAC1B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;QAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEc,gCAAgB,GAA/B,UAAgC,MAAc,EAAE,IAAqB;QACjE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEc,gCAAgB,GAA/B,UAAgC,GAAW,EAAE,IAAqB;QAC9D,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACvB,IAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,EAC3C,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,SAAS,EAAE,EAAE,YAAY,CAAC,aAAa,EAAE,CAAC,CAAC;YAExG,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,CAAC;YAC7D,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;SACrC;QAED,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAC/B,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC;QAEhD,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;SACvB;QAED,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3B,MAAM,CAAC,KAAK,EAAE,CAAC;QAEf,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IAC1B,CAAC;IAEc,uBAAO,GAAtB,UAAuB,OAAa,EAAE,IAAqB;QACvD,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACvB;IACL,CAAC;IAEO,qCAAW,GAAnB;QACI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;IAC9D,CAAC;IASL,sBAAC;AAAD,CA7FA,AA6FC,IAAA;AAE2B,kCAAO;;;;;;AC9FnC,mCAIkB;AAElB,IAAM,WAAW,GAAG,CAAC,OAAO,EAAE,oBAAoB,CAAC,CAAC;AAEpD;IACI,0BAAoB,OAA0B,EAAE,MAAoC;;QAApC,uBAAA,EAAA,WAAoC;QAAhE,YAAO,GAAP,OAAO,CAAmB;QAyctC,QAAG,GAA0B,IAAI,CAAC;QAIlC,aAAQ,GAAiB,IAAI,CAAC;QAC9B,kBAAa,GAAgB,IAAI,CAAC;QAClC,6BAAwB,GAAgB,IAAI,CAAC;QAO7C,uBAAkB,GAAG,CAAC,CAAC;QACvB,gBAAW,GAAG,CAAC,CAAC;QAEhB,WAAM,GAAG,CAAC,CAAC;QACX,YAAO,GAAG,CAAC,GAAG,CAAC,CAAC;QAChB,kBAAa,GAAG,IAAI,CAAC;QAErB,0BAAqB,GAAG,CAAC,CAAC;QAC1B,mBAAc,GAAG,IAAI,CAAC;QAEtB,WAAM,GAA2B,IAAI,CAAC;QAEtC,mBAAc,GAAG,IAAI,CAAC;QAje1B,IAAI,OAAO,MAAM,CAAC,MAAM,KAAK,WAAW,EAAE;YACtC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;SAChC;QAED,IAAI,OAAO,MAAM,CAAC,KAAK,KAAK,WAAW,EAAE;YACrC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC;SAC9B;QAED,IAAI,OAAO,MAAM,CAAC,YAAY,KAAK,WAAW,EAAE;YAC5C,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,YAAY,CAAC;SAC5C;;YAED,KAAwB,IAAA,gBAAA,iBAAA,WAAW,CAAA,wCAAA,iEAAE;gBAAhC,IAAM,SAAS,wBAAA;gBAChB,IAAI,IAAI,CAAC,GAAG,EAAE;oBACV,MAAM;iBACT;gBAED,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,EAAE;oBAC1C,KAAK,EAAE,KAAK;iBACf,CAA0B,CAAC;aAC/B;;;;;;;;;QAED,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACX,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;SACtD;QAED,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAChC,CAAC;IAED,+BAAI,GAAJ;QACI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEhC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAE/B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,gCAAK,GAAL;QAAA,iBA8BC;QA7BG,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACzC;QAED,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC7C;QAED,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAC/C;QAED,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,IAAI,KAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,EAA9B,CAA8B,CAAC,CAAC;SAC/D;QAED,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAhB,CAAgB,CAAC,CAAC;SAClD;QAED,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC7C;QAED,IAAI,IAAI,CAAC,wBAAwB,EAAE;YAC/B,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;SACxD;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,iCAAM,GAAN,UAAO,KAAc,EAAE,MAAe;QAClC,IAAI,OAAO,KAAK,KAAK,WAAW,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;YAC/D,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;YACjC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;SACtC;QAED,IAAI,UAAU,GAAG,MAAM,CAAC,gBAAgB,IAAI,CAAC,CAAC;QAC9C,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAC5B,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;YAEhC,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,IAAI,KAAK,EAAE;gBAChC,IAAI,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE;oBACnD,UAAU,GAAG,CAAC,CAAC;iBAClB;aACJ;iBAAM;gBACH,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE;oBACjD,UAAU,GAAG,CAAC,CAAC;iBAClB;aACJ;SACJ;QAED,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,GAAG,UAAU,CAAC;QACxC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,GAAG,UAAU,CAAC;QAC1C,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG,UAAU,EAAE,MAAM,GAAG,UAAU,CAAC,CAAC;QACjE,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAEhC,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,oCAAS,GAAT;QACI,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,+BAAI,GAAJ,UAAK,KAA6B;QAC9B,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,MAAM,EAAE,CAAC;QAEd,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QAEtE,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,iCAAM,GAAN;QACI,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QACzE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,8CAAmB,GAAnB,UAAoB,OAAgB;QAChC,IAAI,OAAO,KAAK,IAAI,CAAC,cAAc,EAAE;YACjC,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAC9B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,+CAAoB,GAApB;QACI,OAAO,IAAI,CAAC,cAAc,CAAC;IAC/B,CAAC;IAED,8CAAmB,GAAnB,UAAoB,aAAsB;QACtC,IAAI,aAAa,KAAK,IAAI,CAAC,cAAc,EAAE;YACvC,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,aAAa,EAAE;YAChB,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;QAED,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QAEpC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,+CAAoB,GAApB;QACI,OAAO,IAAI,CAAC,cAAc,CAAC;IAC/B,CAAC;IAED,mCAAQ,GAAR,UAAS,KAAa;QAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,mCAAQ,GAAR;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,6CAAkB,GAAlB,UAAmB,UAAmB;QAClC,IAAI,UAAU,KAAK,IAAI,CAAC,aAAa,EAAE;YACnC,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;QAChC,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,8CAAmB,GAAnB;QACI,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAEc,8BAAa,GAA5B,UAA6B,mBAAmD,EAAE,IAAsB;QACpG,IAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAE9D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,mBAAmB,CAAC;QAC/D,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC;QACrD,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,wBAAwB,CAAC;QAExF,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,wBAAwB,EAAE;YAClD,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;aAAM;YACH,IAAI,IAAI,CAAC,cAAc,EAAE;gBACrB,IAAI,CAAC,aAAa,EAAE,CAAC;aACxB;iBAAM;gBACH,IAAI,CAAC,KAAK,EAAE,CAAC;aAChB;YACD,YAAY,CAAC,OAAO,EAAE,CAAC;SAC1B;IACL,CAAC;IAEO,+CAAoB,GAA5B;QAAA,iBAoBC;QAnBG,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE3D,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,IAAI,KAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,EAA9B,CAA8B,CAAC,CAAC;SAC/D;QAED,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAhB,CAAgB,CAAC,CAAC;SAClD;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,CAAe,IAAI,CAAC,wBAAwB,CAAC,CAAC;QACxE,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,CAAiC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAC3F,IAAI,CAAC,oBAAoB,GAAG,IAAI,KAAK,CAAS,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAC7E,IAAI,CAAC,kBAAkB,GAAG,IAAI,KAAK,CAAS,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAE3E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC,EAAE,EAAE;YACpD,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACjC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SACnC;IACL,CAAC;IAEO,kCAAO,GAAf;QACI,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;IAChC,CAAC;IAEO,wCAAa,GAArB;QAAA,iBAMC;QALG,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC5B,OAAO;SACV;QAED,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC,cAAM,OAAA,CAAC,KAAI,CAAC,KAAK,EAAE,EAAE,CAAC,KAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC,CAAC,EAAhD,CAAgD,CAAC,CAAC;IAC/G,CAAC;IAEO,sCAAW,GAAnB;QACI,IAAI,IAAI,CAAC,qBAAqB,KAAK,CAAC,EAAE;YAClC,OAAO;SACV;QAED,oBAAoB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACjD,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;IACnC,CAAC;IAEO,gCAAK,GAAb;QACI,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,wBAAwB,EAAE;YAClD,OAAO;SACV;QAED,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;QAEpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC,EAAE,EAAE;YACpD,IAAM,UAAU,GACZ,CAAC,IAAI,CAAC,kBAAkB,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,wBAAwB,CAAC,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAEtG,IAAI,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,EAAE;gBAC/E,EAAE,CAAC,aAAa,CAAE,EAAU,CAAC,YAAU,UAAY,CAAC,CAAC,CAAC;gBACtD,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC1D,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;gBAEvG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;aAC/E;SACJ;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC,EAAE,EAAE;YACpD,EAAE,CAAC,SAAS,CACR,IAAI,CAAC,mBAAmB,CAAC,cAAY,CAAG,CAAC,EACzC,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,wBAAwB,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,wBAAwB,CACpG,CAAC;SACL;QAED,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAE/D,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC;QAC9B,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC;IAEO,yCAAc,GAAtB;QACI,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,EACf,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC,EAChD,cAAc,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,eAAe,CAAC,EACpD,OAAO,GAAG,EAAE,CAAC,aAAa,EAAE,CAAC;QAEjC,EAAE,CAAC,YAAY,CAAC,YAAY,EAAE,qBAAkB,CAAC,CAAC;QAClD,EAAE,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QAE/B,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,YAAY,EAAE,EAAE,CAAC,cAAc,CAAC,EAAE;YACzD,MAAM,IAAI,KAAK,CAAC,sCAAoC,EAAE,CAAC,gBAAgB,CAAC,YAAY,CAAG,CAAC,CAAC;SAC5F;QAED,EAAE,CAAC,YAAY,CAAC,cAAc,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,0BAAuB,CAAC,CAAC,CAAC,4BAAyB,CAAC,CAAC;QAC1G,EAAE,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAEjC,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,YAAY,EAAE,EAAE,CAAC,cAAc,CAAC,EAAE;YACzD,MAAM,IAAI,KAAK,CAAC,wCAAsC,EAAE,CAAC,gBAAgB,CAAC,cAAc,CAAG,CAAC,CAAC;SAChG;QAED,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;QACvC,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;QACzC,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAExB,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,OAAO,EAAE,EAAE,CAAC,WAAW,CAAC,EAAE;YAClD,MAAM,IAAI,KAAK,CAAC,6BAA2B,EAAE,CAAC,iBAAiB,CAAC,OAAO,CAAG,CAAC,CAAC;SAC/E;QAED,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAEvB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACnC;QAED,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACvC;QAED,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACzC;QAED,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;IAC1C,CAAC;IAEO,4CAAiB,GAAzB;QACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC,EAAE,EAAE;YACpD,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;SAC5B;IACL,CAAC;IAEO,6CAAkB,GAA1B;QACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC,EAAE,EAAE;YACpD,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;SAC7B;IACL,CAAC;IAEO,2CAAgB,GAAxB,UAAyB,KAAa;QAClC,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,EACf,OAAO,GAAG,EAAE,CAAC,aAAa,EAAE,CAAC;QAEjC,EAAE,CAAC,aAAa,CAAE,EAAU,CAAC,YAAU,KAAO,CAAC,CAAC,CAAC;QACjD,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAEvC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;IACpC,CAAC;IAEO,4CAAiB,GAAzB,UAA0B,KAAa;QACnC,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;QAEpB,EAAE,CAAC,aAAa,CAAE,EAAU,CAAC,YAAU,KAAO,CAAC,CAAC,CAAC;QACjD,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QAErD,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,cAAc,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;QACrE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,cAAc,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;QACrE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;QACrG,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;QAErG,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;IAC9C,CAAC;IAEO,yCAAc,GAAtB;QACI,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,EACf,YAAY,GAAG,EAAE,CAAC,YAAY,EAAE,EAChC,uBAAuB,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;QAEhD,IAAM,qBAAqB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,uBAAuB,CAAC,CAAC;QACxD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,YAAY,CAAC,qBAAqB,CAAC,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;QAExF,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,wBAAwB,GAAG,uBAAuB,CAAC;IAC5D,CAAC;IAEO,mDAAwB,GAAhC;QACI,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,EACf,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAChC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAClC,MAAM,GAAG,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,EAC9C,MAAM,GAAG,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAErD,IAAI,KAAa,EAAE,MAAc,EAAE,IAAY,EAAE,KAAa,CAAC;QAE/D,IAAI,IAAI,CAAC,OAAO,GAAG,YAAY,IAAI,WAAW,EAAE;YAC5C,MAAM,GAAG,CAAC,CAAC;YACX,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,YAAY,GAAG,MAAM,CAAC;YAC7C,KAAK,GAAG,CAAC,CAAC;YACV,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;SAChE;aAAM;YACH,MAAM,GAAG,WAAW,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YAC7C,KAAK,GAAG,CAAC,CAAC;YACV,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;YAC5D,IAAI,GAAG,CAAC,CAAC,CAAC;SACb;QAED,IAAM,UAAU,GAAG,CAAC,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,GAAG,MAAM,EAAE,IAAI,EAAE,KAAK,GAAG,MAAM,CAAC,CAAC;QAE1G,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACnD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,YAAY,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;IACjF,CAAC;IAEO,6CAAkB,GAA1B,UAA2B,IAAY;QACnC,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,EACf,QAAQ,GAAG,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAEzD,IAAI,QAAQ,GAAG,CAAC,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,gCAA8B,IAAM,CAAC,CAAC;SACzD;QAED,OAAO,QAAQ,CAAC;IACpB,CAAC;IAEO,8CAAmB,GAA3B,UAA4B,IAAY;QACpC,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,EACf,QAAQ,GAAG,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAE1D,IAAI,QAAQ,GAAG,CAAC,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,8BAA4B,IAAM,CAAC,CAAC;SACvD;QAED,OAAO,QAAQ,CAAC;IACpB,CAAC;IAEO,wCAAa,GAArB;QACI,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;QAEpB,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACnD,EAAE,CAAC,uBAAuB,CAAC,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,CAAC,CAAC;QACxE,EAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE9F,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAC9D,EAAE,CAAC,uBAAuB,CAAC,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,CAAC,CAAC;QAC3E,EAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACrG,CAAC;IA4BL,uBAAC;AAAD,CApeA,AAoeC,IAAA;AAU4B,mCAAO;;;;;AC/gBvB,QAAA,YAAY,GAAG,iQAU3B,CAAC;AAEW,QAAA,mBAAmB,GAAG,6SAalC,CAAC;AAEW,QAAA,iBAAiB,GAAG,4eAgBhC,CAAC;;;;;ACrBF,6CAAwC;AAIxC;IAAA;QAkDY,WAAM,GAAG,IAAI,qBAAW,EAAE,CAAC;QAC3B,YAAO,GAAG,IAAI,qBAAW,EAAE,CAAC;QAC5B,uBAAkB,GAAG,IAAI,qBAAW,EAAE,CAAC;QACvC,uBAAkB,GAAG,IAAI,qBAAW,EAAE,CAAC;QACvC,WAAM,GAAG,IAAI,qBAAW,EAAE,CAAC;QAE3B,uBAAkB,GAAuB,IAAI,CAAC;IAC1D,CAAC;IAxDG,gCAAI,GAAJ,UAAK,YAAgC;QACjC,IAAI,CAAC,MAAM,EAAE,CAAC;QAEd,IAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC;QAEvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC,CAAC;QAC3D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,EAAE,CAAC,CAAC;QAC9E,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,EAAE,CAAC,CAAC;QAC9E,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC,CAAC;QAE3D,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IAED,kCAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC1B,OAAO;SACV;QAED,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QACtB,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC;QACjC,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QAErB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACnC,CAAC;IAED,iCAAK,GAAL;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,kCAAM,GAAN;QACI,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,6CAAiB,GAAjB;QACI,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACnC,CAAC;IAED,6CAAiB,GAAjB;QACI,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACnC,CAAC;IAED,iCAAK,GAAL;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IASL,wBAAC;AAAD,CAzDA,AAyDC,IAAA;AAE6B,oCAAO;;;;;;AChErC,2CAAoC;AACpC,+CAAsF;AAEtF,4FAAuF;AACvF,iFAA4E;AAC5E,oEAA+D;AAG/D,oEAAyD;AACzD,4DAAuD;AAEvD,yDAAuD;AACvD,6DAAwD;AACxD,uDAAkD;AAClD,4DAAgD;AAChD,gDAA2C;AAC3C,gEAA4D;AAE5D,iFAA4E;AAC5E,yDAA0D;AAE1D,gDAA+D;AAG/D,yDAAoD;AAwBpD;IAiBI,qBAAY,SAA4B,EAAE,SAAiB,EAAE,MAAwC;QAAxC,uBAAA,EAAA,WAAwC;QAArG,iBA4CC;QA0dO,YAAO,GAAuB,IAAI,CAAC;QACnC,sBAAiB,GAA8B,IAAI,CAAC;QACpD,wBAAmB,GAAkB,IAAI,CAAC;QAE1C,iBAAY,GAAyB,IAAI,CAAC;QAC1C,gBAAW,GAAe,IAAI,CAAC;QAC/B,qBAAgB,GAAqB,IAAI,CAAC;QAC1C,iBAAY,GAAgB,IAAI,CAAC;QACjC,gBAAW,GAAe,IAAI,CAAC;QAC/B,aAAQ,GAAY,IAAI,CAAC;QACzB,YAAO,GAAW,IAAI,CAAC;QACvB,aAAQ,GAAY,IAAI,CAAC;QAEzB,kBAAa,GAAG,IAAI,2BAAiB,EAAE,CAAC;QAExC,WAAM,GAAG,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC;QAEnC,mBAAc,GAAG,IAAI,uBAAa,EAAE,CAAC;QAErC,WAAM,GAAG,IAAI,mBAAK,EAAE,CAAC;QAxhBzB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAE5B,IAAI,CAAC,OAAO,sBACR,aAAa,EAAE,IAAI,EACnB,WAAW,EAAE,IAAI,EACjB,KAAK,EAAE,CAAC,EACR,KAAK,EAAE,IAAI,EACX,MAAM,EAAE,GAAG,EACX,cAAc,EAAE,IAAI,EACpB,WAAW,EAAE,IAAI,EACjB,eAAe,EAAE,KAAK,EACtB,wBAAwB,EAAE,EAAE,EAC5B,cAAc,EAAE,QAAQ,EACxB,qBAAqB,EAAE,IAAI,EAC3B,cAAc,EAAE,IAAI,EACpB,gBAAgB,EAAE,IAAI,EACtB,aAAa,EAAE,IAAI,EACnB,kBAAkB,EAAE,IAAI,EACxB,aAAa,EAAE,IAAI,EACnB,gBAAgB,EAAE,IAAI,IAEnB,MAAM,CACZ,CAAC;QAEF,IAAI,CAAC,iBAAiB,GAAG,IAAI,0BAAgB,CAAC,SAAS,CAAC,CAAC;QAEzD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC;QAE9D,IAAM,WAAW,GAAG,IAAI,qBAAmB,EAAqB,CAAC;QACjE,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,UAAU,CAAC,UAAA,QAAQ,IAAI,OAAA,WAAW,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,EAA9C,CAA8C,CAAC,CAAC;QAC3G,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAE/B,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,UAAA,OAAO;YACrD,OAAA,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;QAAlD,CAAkD,CACrD,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAEjD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,UAAA,CAAC;YACtE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC;IACP,CAAC;IAOD,8BAAQ,GAAR,UAAS,KAAa;QAClB,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACpC;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAOD,8BAAQ,GAAR;QACI,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC;IASD,yCAAmB,GAAnB,UAAoB,UAAmB;QACnC,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;SACnD;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAOD,4CAAsB,GAAtB;QACI,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;IAC7E,CAAC;IAQD,yCAAmB,GAAnB,UAAoB,oBAA6B;QAC7C,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,CAAC;QAE5D,OAAO,IAAI,CAAC;IAChB,CAAC;IAOD,0CAAoB,GAApB;QACI,OAAO,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC;IACpD,CAAC;IAQD,sCAAgB,GAAhB,UAAiB,UAAoB;QACjC,IAAI,OAAO,UAAU,KAAK,WAAW,EAAE;YACnC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC;SAClC;aAAM;YACH,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC;SACnF;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAOD,kCAAY,GAAZ;QACI,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC;IAC7C,CAAC;IAQD,+BAAS,GAAT,UAAU,MAAc;QACpB,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACvE;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAOD,kCAAY,GAAZ;QACI,OAAO,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;IAC/B,CAAC;IAOD,+BAAS,GAAT;QACI,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE,CAAC;IAMD,4BAAM,GAAN;QACI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;QAE3B,OAAO,IAAI,CAAC;IAChB,CAAC;IAOD,8BAAQ,GAAR;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAMD,qCAAe,GAAf;QACI,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAoBD,2BAAK,GAAL,UACI,SAAqC,EACrC,MAA0B,EAC1B,MAAiD;QAHrD,iBAiCC;QA9BG,uBAAA,EAAA,WAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;;;;;wBAC5B,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;4BAC/B,SAAS,GAAG,eAAY,CAAC,SAAS,CAAC,CAAC;yBACvC;wBAEK,YAAY,GAAG,gBAAY,CAAC,MAAM,CAAC;4BACrC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;4BACnC,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;wBAEH,IAAI,OAAO,MAAM,CAAC,UAAU,KAAK,WAAW,IAAI,MAAM,CAAC,UAAU,GAAG,CAAC,EAAE;4BACnE,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;yBAC/C;wBAED,IAAI,OAAO,MAAM,CAAC,cAAc,KAAK,WAAW,EAAE;4BAC9C,YAAY,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;yBACvD;wBAED,IAAI,OAAO,MAAM,CAAC,UAAU,KAAK,WAAW,EAAE;4BAC1C,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;yBAC/C;wBAED,WAAM,IAAI,CAAC,mBAAmB,EAAA;;wBAA9B,SAA8B,CAAC;wBAEvB,KAAA,IAAI,CAAA;wBAAU,KAAA,IAAI,CAAC,SAAS,CAAA;wBAChC,WAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,SAAS,EAAE,YAAY,EAAE,MAAM,CAAC,aAAa,CAAC,EAAA;4BADrF,WAAO,CAAC,GAAK,MAAM,GAAG,SAAA,IAAI,GACtB,SAAiF,EACpF,CAAC,EAAC;;;aACN,CAAC,CAAC;IACP,CAAC;IAoBK,yBAAG,GAAT,UACI,SAAqC,EACrC,MAA0B,EAC1B,MAAiD;QAAjD,uBAAA,EAAA,WAAiD;;;;4BAE5C,WAAM,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,EAAA;;wBAAhD,IAAI,CAAC,SAA2C,CAAC,KAAK,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE;4BAC5E,WAAO,IAAI,CAAC,MAAM,EAAE,EAAC;yBACxB;;;;;KACJ;IAQK,2BAAK,GAAX;;;;;4BACI,WAAM,IAAI,CAAC,mBAAmB,EAAA;;wBAA9B,SAA8B,CAAC;wBAE/B,WAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAC3B;;;wCAAa,KAAA,IAAI,CAAA;wCAAU,KAAA,IAAI,CAAC,SAAS,CAAA;wCAAC,WAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,EAAA;4CAAlE,WAAA,CAAC,GAAK,MAAM,GAAG,SAAA,IAAI,GAAW,SAAoC,EAAC,CAAC,EAAA;;qCAAA,CACnF,EAAC;;;;KACL;IAQK,4BAAM,GAAZ;;;;;4BACI,WAAM,IAAI,CAAC,mBAAmB,EAAA;;wBAA9B,SAA8B,CAAC;wBAE/B,WAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAC3B;;;wCAAa,KAAA,IAAI,CAAA;wCAAU,KAAA,IAAI,CAAC,SAAS,CAAA;wCAAC,WAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,EAAA;4CAAnE,WAAA,CAAC,GAAK,MAAM,GAAG,SAAA,IAAI,GAAW,SAAqC,EAAC,CAAC,EAAA;;qCAAA,CACpF,EAAC;;;;KACL;IAQK,0BAAI,GAAV;;;;;4BACI,WAAM,IAAI,CAAC,mBAAmB,EAAA;;wBAA9B,SAA8B,CAAC;wBAE/B,WAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAC3B;;;wCAAa,KAAA,IAAI,CAAA;wCAAU,KAAA,IAAI,CAAC,SAAS,CAAA;wCAAC,WAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,EAAA;4CAAjE,WAAA,CAAC,GAAK,MAAM,GAAG,SAAA,IAAI,GAAW,SAAmC,EAAC,CAAC,EAAA;;qCAAA,CAClF,EAAC;;;;KACL;IAQK,2BAAK,GAAX;;;;;4BACI,WAAM,IAAI,CAAC,mBAAmB,EAAA;;wBAA9B,SAA8B,CAAC;wBAE/B,WAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAC3B;;;wCAAa,KAAA,IAAI,CAAA;wCAAU,KAAA,IAAI,CAAC,SAAS,CAAA;wCAAC,WAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,EAAA;4CAAlE,WAAA,CAAC,GAAK,MAAM,GAAG,SAAA,IAAI,GAAW,SAAoC,EAAC,CAAC,EAAA;;qCAAA,CACnF,EAAC;;;;KACL;IAUD,+BAAS,GAAT;QACI,OAAO,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;IACjD,CAAC;IAEO,oCAAc,GAAtB,UAAuB,MAA0B;QAC7C,QAAQ,MAAM,EAAE;YACZ,KAAK,WAAW,CAAC,MAAM,CAAC,IAAI;gBACxB,SAAgC;YAEpC,KAAK,WAAW,CAAC,MAAM,CAAC,GAAG;gBACvB,SAA+B;YAEnC,KAAK,WAAW,CAAC,MAAM,CAAC,KAAK;gBACzB,SAAiC;YAErC;gBACI,MAAM,IAAI,KAAK,CAAC,sBAAoB,MAAM,MAAG,CAAC,CAAC;SACtD;IACL,CAAC;IAEO,oCAAc,GAAtB;QAAA,iBAqGC;QApGG,IAAI;YACA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,oBAAU,CAAC,IAAI,CAAC,UAAU,EAAE;gBACnE,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW;gBACtC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;aAC5B,CAAC,CAAC,IAAI,EAAE,CAAC;SACb;QAAC,OAAO,CAAC,EAAE;YACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,YAAY,GAAG,IAAI,2BAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC;SAC/D;QAED,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAElE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,EAA1C,CAA0C,CAAC,CAAC;QAExG,IAAI,CAAC,gBAAgB,GAAG,IAAI,yBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAEhE,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACpB,IAAI;gBACA,IAAI,CAAC,YAAY,GAAG,IAAI,kBAAW,EAAE,CAAC;gBACtC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;gBACzB,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBAEvD,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,UAAA,OAAO;oBACpD,OAAA,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;gBAAvD,CAAuD,CAC1D,CAAC;aACL;YAAC,OAAO,CAAC,EAAE;gBACR,OAAO,CAAC,KAAK,CAAC,kCAA+B,CAAC,IAAI,CAAC,CAAC,OAAO,CAAE,CAAC,CAAC;aAClE;SACJ;QAED,IAAM,YAAY,GAAG;YACjB,QAAQ,KAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,EAAE;gBACvC,KAAK,mCAAyB,CAAC,KAAK,CAAC,MAAM;oBACvC,KAAI,CAAC,MAAM,EAAE,CAAC;oBACd,MAAM;gBAEV,KAAK,mCAAyB,CAAC,KAAK,CAAC,OAAO;oBACxC,KAAI,CAAC,KAAK,EAAE,CAAC;oBACb,MAAM;aACb;QACL,CAAC,CAAC;QAEF,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,oBAAU,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YAE/D,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,UAAA,OAAO;gBACnD,OAAA,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,eAAe,EAAE,CAAC;YAAhG,CAAgG,CACnG,CAAC;YAEF,IAAI,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;gBACpC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,EAA9B,CAA8B,CAAC,CAAC;aACtF;YAED,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;gBAC/B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;aACzD;SACJ;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;YAC/B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAE,EAAZ,CAAY,CAAC,CAAC;SAC7D;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;YAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,iBAAO,CACvB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,OAAO,CAAC,wBAAwB,EACrC,IAAI,CAAC,OAAO,CAAC,eAAe,CAC/B,CAAC;YAEF,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAA,OAAO;gBAChD,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,eAAe,EAAE,CAAC;YAArE,CAAqE,CACxE,CAAC;YAEF,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;gBAC5B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;aACtD;YAED,IAAI,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE;gBACjC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,EAA9B,CAA8B,CAAC,CAAC;aACnF;SACJ;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;YAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,iBAAO,EAAE,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAErB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAA,OAAO;gBAChD,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;oBACf,SAAS,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC3D,KAAK,EAAE,OAAO,CAAC,eAAe,EAAE,CAAC,cAAc,EAAE;oBACjD,MAAM,EAAE,OAAO,CAAC,eAAe,EAAE,CAAC,eAAe,EAAE;iBACtD,CAAC;YAJF,CAIE,CACL,CAAC;SACL;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,uBAAM,EAAE,CAAC;YAE5B,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAvC,CAAuC,CAAC,CAAC;SACnG;IACL,CAAC;IAEO,+BAAS,GAAjB,UAAkB,KAAsC;QACpD,QAAQ,KAAK,EAAE;YACX,KAAK,mCAAyB,CAAC,KAAK,CAAC,OAAO;gBACxC,OAAO,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC;YAErC,KAAK,mCAAyB,CAAC,KAAK,CAAC,OAAO;gBACxC,OAAO,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC;YAErC,KAAK,mCAAyB,CAAC,KAAK,CAAC,MAAM;gBACvC,OAAO,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC;YAEpC,KAAK,mCAAyB,CAAC,KAAK,CAAC,KAAK;gBACtC,OAAO,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC;YAEnC;gBACI,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;SACxC;IACL,CAAC;IAwDL,kBAAC;AAAD,CA3iBA,AA2iBC,IAAA;AAkPuB,8BAAO;AAhP/B,WAAU,WAAW;IAqIjB,IAAY,MAaX;IAbD,WAAY,MAAM;QAId,uBAAa,CAAA;QAIb,qBAAW,CAAA;QAIX,yBAAe,CAAA;IACnB,CAAC,EAbW,MAAM,GAAN,kBAAM,KAAN,kBAAM,QAajB;IAoDY,yBAAa,GAAG,uBAAa,CAAC,aAAa,CAAC;IAa5C,iCAAqB,GAC9B,uBAAa,CAAC,qBAAqB,CAAC;IAM3B,6BAAiB,GAA6C,uBAAa,CAAC,WAAW,CAAC;IAKrG,IAAY,KAcX;IAdD,WAAY,KAAK;QACb,4BAAmB,CAAA;QAInB,0BAAiB,CAAA;QAIjB,4BAAmB,CAAA;QAInB,wBAAe,CAAA;IACnB,CAAC,EAdW,KAAK,GAAL,iBAAK,KAAL,iBAAK,QAchB;AACL,CAAC,EA9OS,WAAW,KAAX,WAAW,QA8OpB;AAEuB,8BAAO;;;;;AC70B/B,+CAAsC;AAKtC;IAAA;QA6CI,gBAAW,GAAG,IAAI,qBAAK,EAAW,CAAC;QAE3B,WAAM,GAAG,KAAK,CAAC;QACf,iBAAY,GAAa,IAAI,CAAC;IAC1C,CAAC;IAhDG,0BAAI,GAAJ,UAAK,KAAe;QAChB,IAAI,CAAC,MAAM,EAAE,CAAC;QAEd,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEtC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;QACjF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC;IAC7C,CAAC;IAED,4BAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACpB,OAAO;SACV;QAED,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,aAAa,CAAC,WAAW,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;QACpF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,4BAAM,GAAN,UAAO,KAAc;QACjB,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACnC;aAAM;YACH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACzB;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,0BAAI,GAAJ;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAEc,+BAAmB,GAAlC,UAAmC,QAAiB,EAAE,IAAiB;QACnE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;IAEO,+BAAS,GAAjB,UAAkB,QAAiB;QAC/B,IAAI,QAAQ,KAAK,IAAI,CAAC,MAAM,EAAE;YAC1B,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;YACvB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC1C;IACL,CAAC;IAML,kBAAC;AAAD,CAjDA,AAiDC,IAAA;AAEuB,8BAAO;;;;ACxD/B,6CAAwC;AAExC,iBAAS;IACL,WAAW,uBAAA;CACd,CAAC;;;;;;ACJF,+CAAsC;AAuBtC,SAAS,QAAQ,CAAC,KAAsB;IACpC,OAAO;QACH,IAAI,GAAoB;QACxB,KAAK,OAAA;KACR,CAAC;AACN,CAAC;AAED,SAAS,SAAS,CAAC,KAAkB;IACjC,OAAO;QACH,IAAI,GAA0B;QAC9B,OAAO,EAAE,KAAK;KACjB,CAAC;AACN,CAAC;AAED;IACI,oBACY,OAAmC,EAE3C,QAAgE;QAAhE,yBAAA,EAAA,WAAsC,UAAU,CAAC,eAAe;QAFxD,YAAO,GAAP,OAAO,CAA4B;QAqI/C,qBAAgB,GAAG,IAAI,qBAAK,EAAQ,CAAC;QACrC,cAAS,GAAG,IAAI,qBAAK,EAAQ,CAAC;QAC9B,gBAAW,GAAG,IAAI,qBAAK,EAAQ,CAAC;QAExB,qBAAgB,GAA+B,IAAI,CAAC;QACpD,mBAAc,GAA+B,IAAI,CAAC;QAElD,eAAU,GAAsB,IAAI,CAAC;QACrC,eAAU,GAAsB,IAAI,CAAC;QACrC,kBAAa,GAA0B,IAAI,CAAC;QAE5C,mBAAc,GAAmC,EAAE,CAAC;QACpD,sBAAiB,GAAG,IAAI,GAAG,EAA0C,CAAC;QA7I1E,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IAED,yBAAI,GAAJ,UAAK,SAA4B,EAAE,SAA4B,EAAE,YAAmC;QAApG,iBAmEC;QAlEG,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,OAAO;SACV;QAED,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAElC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,IAAI,CAAC,gBAAgB,GAAG,UAAA,CAAC;YACrB,IAAI,CAAC,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE;gBACxC,OAAO;aACV;YAED,IAAM,SAAS,GACX,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAA2B,CAAC,CAAC,CAAC,CAAC;gBAC5C,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAA0B,CAAC,CAAC,CAAC,CAAC;gBAC1C,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAyB,CAAC,CAAC,CAAC,CAAC,CAAC;YAE7C,IAAI,CAAC,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACvD,OAAO;aACV;YAED,IAAM,MAAM,GAAG,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YAEpE,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;gBAC/B,CAAC,CAAC,cAAc,EAAE,CAAC;gBAEnB,IAAM,QAAQ,GAAG,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;gBAC7C,QAAQ,QAAQ,CAAC,IAAI,EAAE;oBACnB;wBACI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;wBAC5B,MAAM;oBAEV;wBACI,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;wBACrC,MAAM;oBAEV,QAAQ;iBACX;aACJ;QACL,CAAC,CAAC;QAEF,IAAI,CAAC,cAAc,GAAG,UAAA,CAAC;;YACnB,IAAI,CAAC,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE;gBACxC,OAAO;aACV;;gBAED,KAAqB,IAAA,KAAA,iBAAA,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAA,gBAAA,4BAAE;oBAAhE,IAAM,MAAM,WAAA;oBACb,CAAC,CAAC,cAAc,EAAE,CAAC;oBAEnB,IAAM,QAAQ,GAAG,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;oBAE7C,QAAQ,QAAQ,CAAC,IAAI,EAAE;wBACnB;4BACI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;4BAC7B,MAAM;wBAEV,QAAQ;qBACX;iBACJ;;;;;;;;;QACL,CAAC,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAChE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAChE,CAAC;IAED,2BAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,OAAO;SACV;QAED,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACnE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAE/D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC9D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IACvD,CAAC;IAEO,uCAAkB,GAA1B;QACI,IAAI,CAAC,cAAc,IAA8B,GAAG,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACrF,IAAI,CAAC,cAAc,IAA6B,GAAG,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7E,IAAI,CAAC,cAAc,IAA+B,GAAG,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACjF,IAAI,CAAC,cAAc,GAA0B,GAAG,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC,CAAC;QAC/F,IAAI,CAAC,cAAc,GAAyB,GAAG,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,CAAC;QAC7F,IAAI,CAAC,cAAc,GAAyB,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;QACnF,IAAI,CAAC,cAAc,GAA0B,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;QACrF,IAAI,CAAC,cAAc,GAAuB,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;QAC/E,IAAI,CAAC,cAAc,GAAyB,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;QACnF,IAAI,CAAC,cAAc,IAAyB,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;QACnF,IAAI,CAAC,cAAc,GAAyB,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;QACnF,IAAI,CAAC,cAAc,GAA0B,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;QACrF,IAAI,CAAC,cAAc,GAAuB,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;QAC/E,IAAI,CAAC,cAAc,GAAyB,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;QACnF,IAAI,CAAC,cAAc,IAAyB,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;IACvF,CAAC;IAEO,qCAAgB,GAAxB,UAAyB,QAAmC;QAA5D,iBAyBC;QAxBG,IAAM,cAAc,GAAG,UAAC,MAAyB,EAAE,OAAe,EAAE,SAAiB;YACjF,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,KAAoD,IAA0B,CAAC,CAAC,KAAK,CAAC,EAAE;gBACvG,MAAM,IAAI,KAAK,CAAC,0BAAwB,SAAW,CAAC,CAAC;aACxD;YAED,IAAI,CAAC,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;gBACtC,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,GAAG,EAA6B,CAAC,CAAC;aAC7E;YAED,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAC/D,CAAC,CAAC;QAEF,QAAQ,CAAC,OAAO,CAAC,UAAA,OAAO;YACpB,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EACzB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAExE,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI;gBACd,OAAA,cAAc,CACV,MAAM,EACN,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAC9C,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAChD;YAJD,CAIC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAeL,iBAAC;AAAD,CApJA,AAoJC,IAAA;AAgIsB,6BAAO;AA9H9B,WAAU,UAAU;IAsCH,0BAAe,GAAmB;QAC3C;YACI,MAAM,GAAe;YACrB,IAAI,EAAE;gBACF,OAAO,EAAE,EAAE;gBACX,SAAS,GAAgB;aAC5B;SACJ;QACD;YACI,MAAM,GAAc;YACpB,IAAI,EAAE;gBACF,OAAO,EAAE,EAAE;gBACX,SAAS,GAAgB;aAC5B;SACJ;QACD;YACI,MAAM,GAAc;YACpB,IAAI,EAAE;gBACF,EAAE;gBACF,EAAE;aACL;SACJ;QACD;YACI,MAAM,GAAe;YACrB,IAAI,EAAE;gBACF,EAAE;gBACF,EAAE;aACL;SACJ;QACD;YACI,MAAM,GAAY;YAClB,IAAI,EAAE;gBACF,EAAE;gBACF,EAAE;aACL;SACJ;QACD;YACI,MAAM,GAAc;YACpB,IAAI,EAAE;gBACF,EAAE;gBACF,EAAE;aACL;SACJ;QACD;YACI,MAAM,IAAc;YACpB,IAAI,EAAE;gBACF,EAAE;gBACF,EAAE;aACL;SACJ;QACD;YACI,MAAM,GAAc;YACpB,IAAI,EAAE,EAAE;SACX;QACD;YACI,MAAM,GAAe;YACrB,IAAI,EAAE,EAAE;SACX;QACD;YACI,MAAM,GAAY;YAClB,IAAI,EAAE,EAAE;SACX;QACD;YACI,MAAM,GAAc;YACpB,IAAI,EAAE,EAAE;SACX;QACD;YACI,MAAM,IAAc;YACpB,IAAI,EAAE,EAAE;SACX;QACD;YACI,MAAM,IAAmB;YACzB,IAAI,EAAE,EAAE;SACX;QACD;YACI,MAAM,IAAkB;YACxB,IAAI,EAAE;gBACF,OAAO,EAAE,EAAE;gBACX,SAAS,GAAgB;aAC5B;SACJ;QACD;YACI,MAAM,IAAoB;YAC1B,IAAI,EAAE,EAAE;SACX;KACJ,CAAC;AACN,CAAC,EA5HS,UAAU,KAAV,UAAU,QA4HnB;AAEsB,6BAAO;;;;;ACzT9B,+CAAsC;AAEtC,+DAA0D;AAe1D;IACI,iBAAoB,OAA0B,EAAU,oBAAyB,EAAU,WAAmB;QAAtD,qCAAA,EAAA,yBAAyB;QAAU,4BAAA,EAAA,mBAAmB;QAA9G,iBAEC;QAFmB,YAAO,GAAP,OAAO,CAAmB;QAAU,yBAAoB,GAApB,oBAAoB,CAAK;QAAU,gBAAW,GAAX,WAAW,CAAQ;QA4CtG,kBAAa,GAAG,UAAC,CAAa;YAClC,IAAI,MAAM,GAAG,KAAK,CAAC;YAEnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9C,IAAM,eAAe,GAAG,IAAI,eAAe,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAI,CAAC,OAAO,CAAC,EAC/E,EAAE,GAAG,eAAe,CAAC,KAAK,CAAC,UAAU,CAAC;gBAE1C,IAAI,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,IAAI,GAAG,EAAE;oBACvE,IAAI,eAAe,CAAC,CAAC,IAAI,GAAG,EAAE;wBAE1B,eAAe,CAAC,IAAI,QAAgB,CAAC;qBACxC;yBAAM;wBAEH,eAAe,CAAC,IAAI,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,SAAiB,CAAC,OAAe,CAAC;qBACzE;iBACJ;qBAAM;oBACH,IAAI,eAAe,CAAC,CAAC,IAAI,GAAG,EAAE;wBAE1B,eAAe,CAAC,IAAI,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,UAAkB,CAAC,WAAmB,CAAC;qBAC9E;yBAAM;wBAEH,eAAe,CAAC,IAAI,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,SAAiB,CAAC,WAAmB,CAAC;qBAC7E;iBACJ;gBAED,IAAI,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE;oBAChF,SAAS;iBACZ;gBAED,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE,EAAE,eAAe,CAAC,CAAC;gBAC9C,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;gBAEhE,QAAQ,eAAe,CAAC,IAAI,EAAE;oBAC1B;wBACI,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;wBACnB,KAAI,CAAC,4BAA4B,CAAC,UAAU,EAAE,CAAC;wBAC/C,MAAM;oBAEV;wBACI,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;wBACtC,MAAM;oBAEV;wBACI,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;wBACrC,KAAI,CAAC,4BAA4B,CAAC,WAAW,EAAE,CAAC;wBAChD,MAAM;oBAEV;wBACI,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;wBAC1B,KAAI,CAAC,4BAA4B,CAAC,WAAW,EAAE,CAAC;wBAChD,MAAM;oBAEV;wBACI,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;wBACzB,KAAI,CAAC,4BAA4B,CAAC,WAAW,EAAE,CAAC;wBAChD,MAAM;oBAEV;wBACI,MAAM;oBAEV;wBACI,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;iBAC7C;gBAED,IAAI,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,KAAI,CAAC,4BAA4B,CAAC,aAAa,EAAE,EAAE;oBACzF,MAAM,GAAG,IAAI,CAAC;iBACjB;aACJ;YAED,IAAI,MAAM,EAAE;gBACR,CAAC,CAAC,cAAc,EAAE,CAAC;aACtB;QACL,CAAC,CAAC;QAEM,gBAAW,GAAG,UAAC,CAAa;YAChC,IAAI,MAAM,GAAG,KAAK,CAAC;YAEnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9C,IAAM,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;gBAEtF,IAAI,CAAC,eAAe,EAAE;oBAClB,SAAS;iBACZ;gBAED,IAAI,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,KAAI,CAAC,4BAA4B,CAAC,aAAa,EAAE,EAAE;oBACzF,MAAM,GAAG,IAAI,CAAC;iBACjB;gBAED,QAAQ,eAAe,CAAC,IAAI,EAAE;oBAC1B;wBACI,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;wBACpB,KAAI,CAAC,4BAA4B,CAAC,QAAQ,EAAE,CAAC;wBAC7C,MAAM;oBAEV;wBACI,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBACvC,MAAM;oBAEV;wBACI,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBAC3B,MAAM;oBAEV;wBACI,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBAC1B,MAAM;oBAEV;wBACI,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBACvC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBACrC,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBACvC,KAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBACxC,MAAM;oBAEV;wBACI,MAAM;oBAEV;wBACI,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;iBAC7C;gBAED,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAClD,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;aACjE;YAED,IAAI,MAAM,EAAE;gBACR,CAAC,CAAC,cAAc,EAAE,CAAC;aACtB;QACL,CAAC,CAAC;QAEM,iBAAY,GAAG,UAAC,CAAa;YACjC,IAAI,MAAM,GAAG,KAAK,CAAC;YAEnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9C,IAAM,KAAK,GAAG,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAClC,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBAEjE,IAAI,CAAC,eAAe,EAAE;oBAClB,SAAS;iBACZ;gBAED,IAAI,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,EAAE;oBACpC,MAAM,GAAG,IAAI,CAAC;iBACjB;gBAED,IAAI,eAAe,CAAC,IAAI,eAAuB,EAAE;oBAC7C,SAAS;iBACZ;gBAED,IAAM,MAAM,GAAG,KAAK,CAAC,OAAO,GAAG,eAAe,CAAC,KAAK,CAAC,OAAO,EACxD,MAAM,GAAG,KAAK,CAAC,OAAO,GAAG,eAAe,CAAC,KAAK,CAAC,OAAO,EACtD,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC,EAClD,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,EAC5B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,EAC5B,OAAO,GAAG,GAAG,GAAG,KAAI,CAAC,oBAAoB,CAAC;gBAE9C,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;gBACpE,KAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;gBACrE,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;gBAClE,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;aACvE;YAED,IAAI,MAAM,EAAE;gBACR,CAAC,CAAC,cAAc,EAAE,CAAC;aACtB;QACL,CAAC,CAAC;QAGF,gBAAW,GAAG,IAAI,qBAAK,EAAQ,CAAC;QAExB,iCAA4B,GAAG,IAAI,2BAAiB,EAAE,CAAC;QAEvD,WAAM,GAAG,KAAK,CAAC;QAEf,cAAS,GAA6B,IAAI,CAAC;QAC3C,YAAO,GAAoB,IAAI,CAAC;QAChC,WAAM,GAAoB,IAAI,CAAC;QAE/B,WAAM,GAAG,KAAK,CAAC;QAEf,oBAAe,GAAG,IAAI,GAAG,EAAuC,CAAC;QA9NrE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC;IACtE,CAAC;IAED,sBAAI,GAAJ,UAAK,QAAkC,EAAE,YAAmC;QACxE,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,OAAO;SACV;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,eAAe,EAAE,CAAC;QAC9C,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,cAAc,EAAE,CAAC;QAE5C,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,wBAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,OAAO;SACV;QAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;IAChF,CAAC;IAEO,gCAAc,GAAtB;QACI,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAChE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC5D,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IAClE,CAAC;IAEO,kCAAgB,GAAxB;QACI,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACnE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACrE,CAAC;IAEO,8BAAY,GAApB,UAAqB,KAAsB;QACvC,OAAO,KAAK,CAAC,IAAI,UAAkB,CAAC;IACxC,CAAC;IAsLL,cAAC;AAAD,CAjOA,AAiOC,IAAA;AAED;IACI,yBAAmB,KAAY,EAAE,MAAyB;QAAvC,UAAK,GAAL,KAAK,CAAO;QAS/B,SAAI,aAAqB;QARrB,IAAM,YAAY,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC;QAEpD,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC;QAClE,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC;IACtE,CAAC;IAKL,sBAAC;AAAD,CAXA,AAWC,IAAA;AAED,kBAAe,OAAO,CAAC;;;;;;ACjQvB,kDAAkD;AAIlD;IACI,wBAAoB,aAAsB;QAAtB,kBAAa,GAAb,aAAa,CAAS;QAuElC,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,CAAC,CAAC;IAxEyB,CAAC;IAE9C,6BAAI,GAAJ,cAAc,CAAC;IAEf,6BAAI,GAAJ,UAAK,QAAiB,EAAE,QAAiC;QACrD,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,OAAO;SACV;QACD,IAAI,CAAC,SAAS,GAAG,iBAAI,QAAQ,CAAQ,CAAC;QAEtC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,KAAK,QAAQ,EAAE;YAC9C,IAAI,IAAI,CAAC,OAAO,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;aACxB;YAED,IAAI,CAAC,OAAO,GAAG,QAAQ;gBACnB,CAAC,CAAC,IAAI,kBAAa,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC;gBACjE,CAAC,CAAC,IAAI,kBAAa,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YACtE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;SACvB;QAED,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAA6C,CAAC,CAAC;SAC7E;aAAM;YACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAgD,EAAE,EAAE,CAAC,CAAC;SAChF;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SACjD;QAED,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC9B,CAAC;IAED,+BAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,OAAO;SACV;QAED,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QAEtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,wCAAe,GAAf,UAAgB,MAAc;QAC1B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAEtB,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5C,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aACjD;SACJ;IACL,CAAC;IAED,wCAAe,GAAf;QACI,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAEK,8BAAK,GAAX;;;;;6BACQ,IAAI,CAAC,OAAO,EAAZ,cAAY;wBACZ,WAAM,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAA;;wBAA1B,SAA0B,CAAC;;;;;;KAElC;IAEK,+BAAM,GAAZ;;;;;6BACQ,IAAI,CAAC,OAAO,EAAZ,cAAY;wBACZ,WAAM,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAA;;wBAA3B,SAA2B,CAAC;;;;;;KAEnC;IAML,qBAAC;AAAD,CA3EA,AA2EC,IAAA;AAM0B,iCAAO;;;;;ACrFlC,+CAAsC;AAEtC;IACI,2BAAoB,aAAmB,EAAU,QAAc;QAA3C,8BAAA,EAAA,mBAAmB;QAAU,yBAAA,EAAA,cAAc;QAA3C,kBAAa,GAAb,aAAa,CAAM;QAAU,aAAQ,GAAR,QAAQ,CAAM;QAyC/D,YAAO,GAAG,IAAI,qBAAK,EAAQ,CAAC;QAEpB,cAAS,GAAG,KAAK,CAAC;QAClB,cAAS,GAAG,KAAK,CAAC;QAClB,uBAAkB,GAAG,KAAK,CAAC;QAC3B,oBAAe,GAAG,CAAC,CAAC;QACpB,kBAAa,GAAG,CAAC,CAAC;IA/CwC,CAAC;IAEnE,sCAAU,GAAV;QACI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAElC,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,OAAO;SACV;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC1G,CAAC;IAED,oCAAQ,GAAR;QACI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAGhC,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;SACpC;QAED,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,OAAO;SACV;QAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;IAC7F,CAAC;IAED,uCAAW,GAAX;QACI,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;IACpC,CAAC;IAED,yCAAa,GAAb;QACI,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IASL,wBAAC;AAAD,CAjDA,AAiDC,IAAA;AAED,kBAAe,iBAAiB,CAAC;;;;;ACrDjC,yEAAoE;AAGpE;IAAA;QA6FY,aAAQ,GAAG,IAAI,GAAG,EAAqD,CAAC;QACxE,kBAAa,GAAG,KAAK,CAAC;IAClC,CAAC;IA9FG,4BAAI,GAAJ,UAAK,gBAA2C;QAC5C,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QAE1C,IAAI,IAAI,CAAC,kBAAkB,EAAE,EAAE;YAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;QAED,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QAEtF,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,8BAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YACzB,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,aAAa,CAAC,aAAa,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QAEzF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAE9B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,iCAAS,GAAT,UAAU,MAA4B,EAAE,MAA4B;QAChE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,aAAa,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;QAE3E,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,EAAE,MAAM,CAAC,CAAC;SAChE;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,oCAAY,GAAZ,UAAa,MAA4B;QACrC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YAC5B,OAAO,IAAI,CAAC;SACf;QAED,MAAM,CAAC,MAAM,EAAE,CAAC;QAEhB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAE7B,OAAO,IAAI,CAAC;IAChB,CAAC;IAEc,+BAAiB,GAAhC,UAAiC,QAAyC,EAAE,IAAmB;QAC3F,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAE;YACnC,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;aAAM;YACH,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;IACL,CAAC;IAEO,0CAAkB,GAA1B,UACI,KAA8E;QAA9E,sBAAA,EAAA,QAAQ,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,SAAS;QAE9E,OAAO,CACH,IAAI,CAAC,iBAAiB;YACtB,CAAC,KAAK,KAAK,mCAAyB,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,KAAK,mCAAyB,CAAC,KAAK,CAAC,MAAM,CAAC,CAC1G,CAAC;IACN,CAAC;IAEO,oCAAY,GAApB;QAAA,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,OAAO;SACV;QAED,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,aAAa;YAC/B,OAAA,aAAa,CAAC,MAAM,CAAC,KAAI,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,EAAE,aAAa,CAAC,MAAM,CAAC;QAAxF,CAAwF,CAC3F,CAAC;QAEF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC9B,CAAC;IAEO,sCAAc,GAAtB;QACI,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACrB,OAAO;SACV;QAED,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,aAAa,IAAI,OAAA,aAAa,CAAC,MAAM,CAAC,MAAM,EAAE,EAA7B,CAA6B,CAAC,CAAC;QAEtE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC/B,CAAC;IAKL,oBAAC;AAAD,CA/FA,AA+FC,IAAA;AAgByB,gCAAO;AAdjC,WAAU,aAAa;IASnB;QACI,uBAAmB,MAAc,EAAS,MAAc;YAArC,WAAM,GAAN,MAAM,CAAQ;YAAS,WAAM,GAAN,MAAM,CAAQ;QAAG,CAAC;QAChE,oBAAC;IAAD,CAFA,AAEC,IAAA;IAFY,2BAAa,gBAEzB,CAAA;AACL,CAAC,EAZS,aAAa,KAAb,aAAa,QAYtB;AAEyB,gCAAO;;;;;ACxEjC,IAAU,yBAAyB,CAOlC;AAPD,WAAU,yBAAyB;IAC/B,IAAY,KAKX;IALD,WAAY,KAAK;QACb,uCAAO,CAAA;QACP,uCAAO,CAAA;QACP,qCAAM,CAAA;QACN,mCAAK,CAAA;IACT,CAAC,EALW,KAAK,GAAL,+BAAK,KAAL,+BAAK,QAKhB;AACL,CAAC,EAPS,yBAAyB,KAAzB,yBAAyB,QAOlC;AAEqC,4CAAO;;;;;ACnD7C,0EAA8D;AAC9D,wEAAmE;AACnE,wDAAmD;AAInD,uCAAyC;AAEzC;IACI,sBAAoB,IAA0B;QAA1B,SAAI,GAAJ,IAAI,CAAsB;QAiEtC,eAAU,GAAG,IAAI,KAAK,CAAW,CAAC,CAAC,CAAC;QACpC,aAAQ,GAAG,IAAI,KAAK,CAAS,CAAC,CAAC,CAAC;QAChC,kBAAa,GAAG,IAAI,sBAAY,EAAE,CAAC;QAlEvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACxB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,yBAAQ,EAAE,CAAC;SACvC;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACxB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,gBAAM,EAAE,CAAC;SACnC;IACL,CAAC;IAED,iCAAU,GAAV;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAe,sBAAW,CAAC,kBAAkB,EAAE;YAC3D,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,cAAc,CAAC;YAC/D,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,YAAY,CAAC;YACzD,iBAAiB,EAAE,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC;SACzE,CAAC,CAAC;IACP,CAAC;IAED,kCAAW,GAAX,UAAY,CAAS;QACjB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,4BAA0B,CAAG,CAAC,CAAC;SAClD;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC;IAED,sCAAe,GAAf;QACI,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAED,gCAAS,GAAT,UAAU,CAAS;QACf,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,0BAAwB,CAAG,CAAC,CAAC;SAChD;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IAEc,2BAAc,GAA7B,UAA8B,QAAkB;QAC5C,OAAO;YACH,EAAE,EAAE,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE;YAC3B,IAAI,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE;YAC/B,IAAI,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE;YAC/B,KAAK,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE;YACjC,IAAI,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE;SAClC,CAAC;IACN,CAAC;IAEc,yBAAY,GAA3B,UAA4B,MAAc;QACtC,OAAO;YACH,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE;YACxB,IAAI,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE;SAChC,CAAC;IACN,CAAC;IAEc,+BAAkB,GAAjC,UAAkC,YAA0B;QACxD,OAAO;YACH,WAAW,EAAE,YAAY,CAAC,qBAAqB,EAAE,CAAC,IAAI,EAAE;YACxD,WAAW,EAAE,YAAY,CAAC,qBAAqB,EAAE,CAAC,IAAI,EAAE;YACxD,MAAM,EAAE,YAAY,CAAC,eAAe,EAAE,CAAC,IAAI,EAAE;YAC7C,KAAK,EAAE,YAAY,CAAC,cAAc,EAAE,CAAC,IAAI,EAAE;YAC3C,KAAK,EAAE,YAAY,CAAC,cAAc,EAAE,CAAC,IAAI,EAAE;SAC9C,CAAC;IACN,CAAC;IAKL,mBAAC;AAAD,CArEA,AAqEC,IAAA;AAEwB,+BAAO;;;;;ACjEhC;IACI,0BACY,WAAuB,EACvB,aAA2B,EAC3B,iBAA4C,EAC5C,WAA0B;QAH1B,gBAAW,GAAX,WAAW,CAAY;QACvB,kBAAa,GAAb,aAAa,CAAc;QAC3B,sBAAiB,GAAjB,iBAAiB,CAA2B;QAC5C,gBAAW,GAAX,WAAW,CAAe;QA2C9B,YAAO,GAAW,IAAI,CAAC;QAzC3B,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE;YACrC,MAAM,IAAI,KAAK,CAAC,2BAAyB,IAAI,CAAC,iBAAiB,CAAC,MAAQ,CAAC,CAAC;SAC7E;IACL,CAAC;IAED,oCAAS,GAAT,UAAU,MAAc;QACpB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IAC1B,CAAC;IAED,oCAAS,GAAT;QACI,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,mCAAQ,GAAR;QACI,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED,sCAAW,GAAX,UAAY,CAAS;QACjB,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,0CAAe,GAAf;QACI,OAAO,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;IAChD,CAAC;IAED,oCAAS,GAAT,UAAU,CAAS;QACf,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,8CAAmB,GAAnB;QACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAClC,CAAC;IAED,wCAAa,GAAb;QACI,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED,wCAAa,GAAb;QACI,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAGL,uBAAC;AAAD,CAjDA,AAiDC,IAAA;AAE4B,mCAAO;;;;;;ACjEpC,+CAAsC;AACtC,yCAAyC;AAEzC,0EAAqE;AACrE,uDAAkD;AAGlD,2CAAsC;AACtC,+CAA0C;AAC1C,2DAAsD;AACtD,iDAA4C;AAK5C,2CAAoC;AAEpC,uCAAwF;AAExF,IAAM,6BAA6B,GAAG,EAAE,CAAC;AAQzC;IACI,0BAAoB,gBAAwB,EAAU,eAAwB;QAA1D,qBAAgB,GAAhB,gBAAgB,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAS;QA8Q9E,iBAAY,GAAG,IAAI,qBAAK,EAAmC,CAAC;QAC5D,oBAAe,GAAG,IAAI,qBAAK,EAAU,CAAC;QAE9B,uBAAkB,GAAG,IAAI,CAAC;QAE1B,WAAM,GAAG,IAAI,mBAAK,EAAE,CAAC;QACrB,YAAO,GAAW,IAAI,CAAC;QACvB,SAAI,GAAgB,IAAI,CAAC;QAEzB,WAAM,GAAG,mCAAyB,CAAC,KAAK,CAAC,OAAO,CAAC;QACjD,eAAU,GAAU,IAAI,CAAC;QAEzB,sBAAiB,GAAqB,IAAI,CAAC;QAC3C,eAAU,GAAG,CAAC,CAAC;QAEf,sBAAiB,GAAG,IAAI,KAAK,CAAqB,CAAC,CAAC,CAAC;QACrD,gBAAW,GAAkB,IAAI,CAAC;QAElC,kBAAa,GAAiB,IAAI,CAAC;QACnC,8BAAyB,GAAQ,IAAI,CAAC;QACtC,gBAAW,KAAsB;QAEjC,gBAAW,GAAiB,IAAI,CAAC;IApSwC,CAAC;IAElF,+BAAI,GAAJ;QAAA,iBA+BC;QA9BG,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,GAAG,IAAI,wBAAW,CAAC,UAAC,OAAO,EAAE,QAAS,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,EAA3C,CAA2C,CAAC,CAAC;QAEjG,IAAI,CAAC,WAAW,GAAG,IAAI,uBAAa,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;QAE1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAAG,IAAI,4BAAkB,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;SAC3E;QAED,IAAM,UAAU,GAAG,IAAI,oBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EACxC,YAAY,GAAG,IAAI,sBAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE/C,UAAU,CAAC,IAAI,EAAE,CAAC;QAElB,IAAI,CAAC,iBAAiB,GAAG,IAAI,0BAAgB,CACzC,UAAU,EACV,YAAY,EACZ,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,WAAW,CACnB,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,UAAA,YAAY,IAAI,OAAA,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,EAArC,CAAqC,CAAC;QAE/E,IAAI,CAAC,IAAI;aACJ,qBAAqB,CAAS,sBAAW,CAAC,wBAAwB,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACvG,qBAAqB,CAAS,sBAAW,CAAC,cAAc,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAElG,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAElC,OAAO,IAAI,CAAC,6BAA6B,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,kBAAkB,CAAC,EAA1C,CAA0C,CAAC,CAAC;IACvG,CAAC;IAEK,gCAAK,GAAX,UACI,MAA+C,EAC/C,MAAoB,EACpB,aAA2C,EAC3C,eAA6C;;;;;4BAE7C,WAAM,IAAI,CAAC,IAAI,EAAE,EAAA;;wBAAjB,SAAiB,CAAC;wBAElB,WAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;;;;gDACd,WAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAC7B,mBAAQ,CAAC,cAAc,EACvB;gDACI,MAAM,QAAA;gDACN,MAAM,QAAA;gDACN,aAAa,eAAA;gDACb,eAAe,iBAAA;6CAClB,CACJ,EAAA;;4CARK,KAAK,GAAG,SAQb;iDAEG,CAAA,KAAK,KAAK,mCAAyB,CAAC,KAAK,CAAC,MAAM,CAAA,EAAhD,cAAgD;4CAChD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;4CAC1B,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;4CAEzC,WAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAA;;4CAAhC,SAAgC,CAAC;;;4CAEjC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;;gDAG5B,WAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAC;;;iCAClC,CAAC,EAAC;;;;KACN;IAED,gCAAK,GAAL;QAAA,iBAOC;QANG,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;YAC5B,OAAA,KAAI,CAAC,IAAI,CAAC,GAAG,CAAwC,mBAAQ,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,UAAA,KAAK;gBACpF,KAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,OAAO,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACnC,CAAC,CAAC;QAHF,CAGE,CACL,CAAC;IACN,CAAC;IAED,+BAAI,GAAJ;QAAA,iBAOC;QANG,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;YAC5B,OAAA,KAAI,CAAC,IAAI,CAAC,GAAG,CAAwC,mBAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,UAAA,KAAK;gBACnF,KAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,OAAO,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACnC,CAAC,CAAC;QAHF,CAGE,CACL,CAAC;IACN,CAAC;IAED,gCAAK,GAAL;QAAA,iBAgBC;QAfG,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;;;;4BACd,WAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAwC,mBAAQ,CAAC,cAAc,CAAC,EAAA;;wBAA3F,KAAK,GAAG,SAAmF;6BAI7F,CAAA,IAAI,CAAC,MAAM,KAAK,mCAAyB,CAAC,KAAK,CAAC,KAAK;4BACrD,CAAC,KAAK,KAAK,mCAAyB,CAAC,KAAK,CAAC,OAAO;gCAC9C,KAAK,KAAK,mCAAyB,CAAC,KAAK,CAAC,MAAM,CAAC;4BACrD,IAAI,CAAC,WAAW,CAAA,EAHhB,cAGgB;wBAEhB,WAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,EAAA;;wBAA1C,SAA0C,CAAC;;4BAG/C,WAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAC;;;aAClC,CAAC,CAAC;IACP,CAAC;IAED,iCAAM,GAAN;QAAA,iBAOC;QANG,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;YAC5B,OAAA,KAAI,CAAC,IAAI,CAAC,GAAG,CAAwC,mBAAQ,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,UAAA,KAAK;gBACrF,KAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,OAAO,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACnC,CAAC,CAAC;QAHF,CAGE,CACL,CAAC;IACN,CAAC;IAED,uCAAY,GAAZ,UAAa,OAAgB;QACzB,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC;QAElC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,mBAAQ,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC;IACjF,CAAC;IAED,uCAAY,GAAZ;QACI,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,uCAAY,GAAZ;QACI,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACnC,CAAC;IAED,mCAAQ,GAAR;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,uCAAY,GAAZ;QACI,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,8CAAmB,GAAnB;QACI,QAAQ,IAAI,CAAC,MAAM,EAAE;YACjB,KAAK,mCAAyB,CAAC,KAAK,CAAC,OAAO,CAAC;YAC7C,KAAK,mCAAyB,CAAC,KAAK,CAAC,MAAM;gBACvC,OAAO,IAAI,CAAC,iBAAiB,CAAC;YAElC;gBACI,OAAO,IAAI,CAAC;SACnB;IACL,CAAC;IAEO,0CAAe,GAAvB;QACI,OAAO,IAAI,CAAC,IAAI;aACX,GAAG,CAAe,mBAAQ,CAAC,uBAAuB,CAAC;aACnD,IAAI,CAAC,UAAA,OAAO,IAAI,OAAA,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAArC,CAAqC,CAAC,CAAC;IAChE,CAAC;IAEO,sCAAW,GAAnB,UACI,KAAsC;QAD1C,iBAoBC;QAjBG,IAAI,KAAK,KAAK,mCAAyB,CAAC,KAAK,CAAC,KAAK,EAAE;YACjD,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,UAAA,KAAK;gBACpC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBAExB,KAAI,CAAC,YAAY,EAAE,CAAC;gBAEpB,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAElC,OAAO,KAAK,CAAC;YACjB,CAAC,CAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAElC,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;IAEO,6CAAkB,GAA1B,UAA2B,OAAe;QACtC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QAC1B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnD,CAAC;IAEO,4CAAiB,GAAzB,UAA0B,OAAe;QACrC,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;QAE3C,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,mCAAyB,CAAC,KAAK,CAAC,KAAK,CAAC;QACpD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAEa,wCAAa,GAA3B,UAA4B,MAAoB;;;;;4BAC5C,WAAM,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC,KAAK,EAAE,EAAA;;wBAApD,SAAoD,CAAC;wBAE5C,CAAC,GAAG,CAAC;;;6BAAE,CAAA,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAA;wBAC7C,WAAM,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,EAAA;;wBAA7C,SAA6C,CAAC;;;wBADC,CAAC,EAAE,CAAA;;4BAGtD,WAAM,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAAA;;wBAA9B,SAA8B,CAAC;wBAE/B,IAAI,CAAC,oBAAoB,EAAE,CAAC;wBAE5B,IAAI,CAAC,WAAW,IAAqB,CAAC;;;;;KACzC;IAEO,uCAAY,GAApB;QACI,IAAI,IAAI,CAAC,WAAW,MAAuB,EAAE;YACzC,OAAO;SACV;QAED,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC,IAAI,EAAE,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAI,CAAC,WAAW,IAAqB,CAAC;IAC1C,CAAC;IAEO,wCAAa,GAArB;QACI,IAAI,IAAI,CAAC,WAAW,MAAuB,EAAE;YACzC,OAAO;SACV;QAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAI,CAAC,WAAW,IAAoB,CAAC;IACzC,CAAC;IAEO,yCAAc,GAAtB;QACI,IAAI,IAAI,CAAC,WAAW,MAAsB,EAAE;YACxC,OAAO;SACV;QAED,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,IAAI,CAAC,WAAW,IAAqB,CAAC;IAC1C,CAAC;IAEO,+CAAoB,GAA5B;QAAA,iBAOC;QANG,IAAI,IAAI,CAAC,yBAAyB,KAAK,IAAI,EAAE;YACzC,IAAI,CAAC,yBAAyB,GAAG,WAAW,CACxC,cAAM,OAAA,KAAI,CAAC,aAAa,CAAC,UAAU,EAAE,EAA/B,CAA+B,EACrC,6BAA6B,CAChC,CAAC;SACL;IACL,CAAC;IAEO,8CAAmB,GAA3B;QACI,IAAI,IAAI,CAAC,yBAAyB,KAAK,IAAI,EAAE;YACzC,aAAa,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;YAC9C,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;SACzC;IACL,CAAC;IAEa,wDAA6B,GAA3C;;;;;;wBACQ,OAAO,GAAmB,IAAI,CAAC;6BAE/B,IAAI,CAAC,eAAe,EAApB,cAAoB;wBACpB,OAAO,GAAG,IAAI,cAAc,EAAE,CAAC;wBAEzB,WAAS,IAAI,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,EAC3C,QAAM,IAAI,wBAAW,CAAC,UAAC,OAAY,EAAE,QAAc,IAAK,OAAA,QAAM,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,EAArC,CAAqC,CAAC,CAAC;wBAEnG,QAAM,CAAC,SAAS,GAAG,UAAC,CAAe,IAAK,OAAA,KAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,EAApB,CAAoB,CAAC;wBAE7D,WAAM,KAAG,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAA;;wBAA1D,SAA0D,CAAC;;4BAG/D,WAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CACf,mBAAQ,CAAC,KAAK,EACd;4BACI,kBAAkB,EAAE,OAAO,IAAI,OAAO,CAAC,KAAK;yBAC/C,EACD,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CACjC,EAAA;;wBAND,SAMC,CAAC;;;;;KACL;IAyBL,uBAAC;AAAD,CAtSA,AAsSC,IAAA;AAE4B,mCAAO;;;;;;AClUpC,+CAAsC;AAEtC,oDAA+C;AAG/C,uCAOoB;AAEpB;IACI,uBAAoB,MAAc,EAAU,IAA0B;QAAlD,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAsB;QAoFtE,aAAQ,GAAG,IAAI,qBAAK,EAAqC,CAAC;QAE1D,gBAAW,GAAG,IAAI,qBAAK,EAAW,CAAC;QAE3B,gBAAW,GAAG,CAAC,CAAC;QAChB,eAAU,GAAG,CAAC,CAAC;QACf,YAAO,GAAG,KAAK,CAAC;QAEhB,eAAU,GAAG,IAAI,cAAI,CAAe,cAAM,OAAA,IAAI,EAAJ,CAAI,CAAC,CAAC;QAChD,cAAS,GAAG,IAAI,OAAO,EAAwB,CAAC;QAEhD,aAAQ,GAAG,KAAK,CAAC;QAEjB,uBAAkB,GAAG,EAAE,CAAC;QAhG5B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;QAEjF,IAAI,CAAC,kBAAkB,GAAG,sBAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3E,CAAC;IAED,4BAAI,GAAJ;QACI,IAAI,CAAC,IAAI;aACJ,qBAAqB,CAAC,sBAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC7F,qBAAqB,CAAC,sBAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAEzG,OAAO,IAAI,CAAC;IAChB,CAAC;IAEK,6BAAK,GAAX;;;;;;wBACI,IAAI,IAAI,CAAC,QAAQ,EAAE;4BACf,WAAO;yBACV;wBAEc,WAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAC9B,mBAAQ,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,CAC9C,EAAA;;wBAFK,MAAM,GAAG,SAEd;wBAED,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;wBACrC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC;wBACnC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;wBAE7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;;;;;KACxB;IAED,4BAAI,GAAJ;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,gCAAQ,GAAR;QACI,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,qCAAa,GAAb;QACI,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED,oCAAY,GAAZ;QACI,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAEc,gCAAkB,GAAjC,UAAkC,KAAmB,EAAE,IAAmB;QACtE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YAC5B,OAAO;SACV;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,CACZ,IAAI,CAAC,kBAAkB,EACvB;YACI,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC;YAC7B,MAAM,EAAE,KAAK,CAAC,MAAM;SACvB,EACD,CAAC,KAAK,CAAC,MAAM,CAAC,CACjB,CAAC;IACN,CAAC;IAEO,mCAAW,GAAnB,UAAoB,GAA4B;QAC5C,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,OAAO;SACV;QAED,IAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,EAC/B,IAAI,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAExC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;QAEjC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAEO,sCAAc,GAAtB,UAAuB,GAA+B;QAClD,IAAI,GAAG,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,EAAE;YAC7B,OAAO;SACV;QAED,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;IAgBL,oBAAC;AAAD,CAnGA,AAmGC,IAAA;AAEyB,gCAAO;;;;;;ACpHjC,+CAAsC;AAMtC,uCAMoB;AAEpB;IACI,oBAAoB,IAA0B;QAA1B,SAAI,GAAJ,IAAI,CAAsB;QAuE9C,aAAQ,GAAG,IAAI,qBAAK,EAAkC,CAAC;QAE/C,YAAO,GAAG,KAAK,CAAC;QAChB,WAAM,GAAG,CAAC,CAAC;QACX,YAAO,GAAG,CAAC,CAAC;QACZ,SAAI,GAAgB,IAAI,CAAC;IA5EgB,CAAC;IAElD,yBAAI,GAAJ;QACI,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,sBAAW,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5F,CAAC;IAEK,0BAAK,GAAX;;;;;;wBACI,IAAI,IAAI,CAAC,OAAO,EAAE;4BACd,IAAI,CAAC,IAAI,EAAE,CAAC;yBACf;wBAEuB,WAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgC,mBAAQ,CAAC,kBAAkB,CAAC,EAAA;;wBAAjG,eAAe,GAAG,SAA+E;wBAEvG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;wBACpB,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC,KAAK,CAAC;wBACpC,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC,MAAM,CAAC;wBACtC,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,EAAU,CAAC;;;;;KACjC;IAED,yBAAI,GAAJ;QACI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAED,6BAAQ,GAAR;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,8BAAS,GAAT;QACI,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAEO,gCAAW,GAAnB,UAAoB,OAA6B;QAAjD,iBAqCC;QApCG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,OAAO,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAC;YACxD,OAAO;SACV;QAED,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC,MAAM,EAAE;YAClE,OAAO,CAAC,IAAI,CAAC,iDAAiD,CAAC,CAAC;YAChE,OAAO;SACV;QAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAE1B,IAAM,SAAS,GAAG,IAAI,SAAS,CAAC,IAAI,iBAAiB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAEtG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACnB,GAAG,EAAE,cAAM,OAAA,SAAS,EAAT,CAAS;YAEpB,OAAO,EAAE;gBACL,IAAI,KAAI,CAAC,OAAO,IAAI,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;oBAC3C,KAAI,CAAC,IAAI,CAAC,MAAM,CACZ,sBAAW,CAAC,kBAAkB,EAC9B;wBACI,EAAE,EAAE,OAAO,CAAC,EAAE;wBACd,MAAM,EAAE,OAAO,CAAC,MAAM;qBACzB,EACD,CAAC,OAAO,CAAC,MAAM,CAAC,CACnB,CAAC;iBACL;YACL,CAAC;YAED,OAAO,EAAE,cAAM,OAAA,SAAS,EAAT,CAAS;YAExB,KAAK,EAAE;gBACH,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;YAChD,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;IAQL,iBAAC;AAAD,CA9EA,AA8EC,IAAA;AAEsB,6BAAO;;;;;;AC9F9B,+CAAsC;AAItC,8EAAyE;AAIzE,uCAMoB;AAEpB;IACI,4BAAoB,MAAc,EAAU,IAA0B;QAAlD,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAsB;QAqDtE,kBAAa,GAAG,IAAI,qBAAK,EAAU,CAAC;QACpC,kBAAa,GAAG,IAAI,qBAAK,EAAU,CAAC;QACpC,SAAI,GAAG,IAAI,qBAAK,EAAQ,CAAC;QAEjB,mBAAc,GAAG,IAAI,uBAAa,EAAE,CAAC;QACrC,YAAO,GAAG,CAAC,CAAC;IA1DqD,CAAC;IAE1E,iCAAI,GAAJ;QACI,IAAI,CAAC,IAAI;aACJ,qBAAqB,CAAC,sBAAW,CAAC,yBAAyB,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACnG,qBAAqB,CAAC,sBAAW,CAAC,yBAAyB,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACnG,qBAAqB,CAAC,sBAAW,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAEjF,OAAO,IAAI,CAAC;IAChB,CAAC;IAEK,kCAAK,GAAX,UAAY,MAAoB;;;;;4BACT,WAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAClC,mBAAQ,CAAC,0BAA0B,CAAC,IAAI,CAAC,MAAM,CAAC,CACnD,EAAA;;wBAFK,UAAU,GAAG,SAElB;wBAED,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;wBACtC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;;;;;KACrC;IAED,sCAAS,GAAT,UAAU,KAAa;QACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAErB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,sCAAS,GAAT;QACI,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,sCAAS,GAAT,UAAU,GAAW;QACjB,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAC9C,CAAC;IAEO,kDAAqB,GAA7B,UAA8B,OAAyC;QACnE,IAAI,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,MAAM,EAAE;YAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;YAC7B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC7C;IACL,CAAC;IAEO,kDAAqB,GAA7B,UAA8B,OAAyC;QACnE,IAAI,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,MAAM,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SAC5C;IACL,CAAC;IAEO,0CAAa,GAArB,UAAsB,KAAa;QAC/B,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,EAAE;YACvB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;SACjC;IACL,CAAC;IAQL,yBAAC;AAAD,CA5DA,AA4DC,IAAA;AAE8B,qCAAO;;;;;AC1EzB,QAAA,QAAQ,GAAG;IACpB,cAAc,EAAE,iBAAiB;IACjC,cAAc,EAAE,iBAAiB;IACjC,eAAe,EAAE,kBAAkB;IACnC,qBAAqB,EAAE,wBAAwB;IAC/C,cAAc,EAAE,iBAAiB;IACjC,aAAa,EAAE,gBAAgB;IAC/B,uBAAuB,EAAE,0BAA0B;IACnD,kBAAkB,EAAE,qBAAqB;IACzC,0BAA0B,EAAE,UAAC,KAAa,IAAK,OAAA,kCAAgC,KAAO,EAAvC,CAAuC;IACtF,qBAAqB,EAAE,UAAC,KAAa,IAAK,OAAA,6BAA2B,KAAO,EAAlC,CAAkC;IAC5E,KAAK,EAAE,QAAQ;CAClB,CAAC;AACF,MAAM,CAAC,MAAM,CAAC,gBAAQ,CAAC,CAAC;AAEX,QAAA,WAAW,GAAG;IACvB,cAAc,EAAE,iBAAiB;IACjC,wBAAwB,EAAE,2BAA2B;IACrD,aAAa,EAAE,gBAAgB;IAC/B,kBAAkB,EAAE,qBAAqB;IACzC,kBAAkB,EAAE,qBAAqB;IACzC,yBAAyB,EAAE,6BAA6B;IACxD,yBAAyB,EAAE,6BAA6B;IACxD,gBAAgB,EAAE,UAAC,KAAa,IAAK,OAAA,wBAAsB,KAAO,EAA7B,CAA6B;IAClE,mBAAmB,EAAE,UAAC,KAAa,IAAK,OAAA,2BAAyB,KAAO,EAAhC,CAAgC;IACxE,mBAAmB,EAAE,UAAC,KAAa,IAAK,OAAA,2BAAyB,KAAO,EAAhC,CAAgC;IACxE,SAAS,EAAE,YAAY;CAC1B,CAAC;AACF,MAAM,CAAC,MAAM,CAAC,mBAAW,CAAC,CAAC",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Mutex = /** @class */ (function () {\n    function Mutex() {\n        this._queue = [];\n        this._pending = false;\n    }\n    Mutex.prototype.isLocked = function () {\n        return this._pending;\n    };\n    Mutex.prototype.acquire = function () {\n        var _this = this;\n        var ticket = new Promise(function (resolve) { return _this._queue.push(resolve); });\n        if (!this._pending) {\n            this._dispatchNext();\n        }\n        return ticket;\n    };\n    Mutex.prototype.runExclusive = function (callback) {\n        return this\n            .acquire()\n            .then(function (release) {\n            var result;\n            try {\n                result = callback();\n            }\n            catch (e) {\n                release();\n                throw (e);\n            }\n            return Promise\n                .resolve(result)\n                .then(function (x) { return (release(), x); }, function (e) {\n                release();\n                throw e;\n            });\n        });\n    };\n    Mutex.prototype._dispatchNext = function () {\n        if (this._queue.length > 0) {\n            this._pending = true;\n            this._queue.shift()(this._dispatchNext.bind(this));\n        }\n        else {\n            this._pending = false;\n        }\n    };\n    return Mutex;\n}());\nexports.default = Mutex;\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Mutex_1 = require(\"./Mutex\");\nexports.Mutex = Mutex_1.default;\n",
    "\"use strict\";\nvar factories = [];\nfactories[0] = function () {\n    return function dispatcher0() { };\n};\nfactories[1] = function (callback, context) {\n    if (typeof (context) === 'undefined')\n        return callback;\n    return function dispatcher1(payload) {\n        callback(payload, context);\n    };\n};\nfunction getFactory(handlerCount) {\n    if (!factories[handlerCount])\n        factories[handlerCount] = compileFactory(handlerCount);\n    return factories[handlerCount];\n}\nfunction compileFactory(handlerCount) {\n    var src = 'return function dispatcher' + handlerCount + '(payload) {\\n';\n    var argsHandlers = [], argsContexts = [];\n    for (var i = 0; i < handlerCount; i++) {\n        argsHandlers.push('cb' + i);\n        argsContexts.push('ctx' + i);\n        src += '    cb' + i + '(payload, ctx' + i + ');\\n';\n    }\n    src += '};';\n    return new (Function.bind.apply(Function, [void 0].concat(argsHandlers.concat(argsContexts), [src])))();\n}\nvar Event = (function () {\n    function Event() {\n        this.hasHandlers = false;\n        this._handlers = [];\n        this._contexts = [];\n        this._createDispatcher();\n    }\n    Event.prototype.addHandler = function (handler, context) {\n        if (!this.isHandlerAttached(handler, context)) {\n            this._handlers.push(handler);\n            this._contexts.push(context);\n            this._createDispatcher();\n            this._updateHasHandlers();\n        }\n        return this;\n    };\n    Event.prototype.removeHandler = function (handler, context) {\n        var idx = this._getHandlerIndex(handler, context);\n        if (typeof (idx) !== 'undefined') {\n            this._handlers.splice(idx, 1);\n            this._contexts.splice(idx, 1);\n            this._createDispatcher();\n            this._updateHasHandlers();\n        }\n        return this;\n    };\n    Event.prototype.isHandlerAttached = function (handler, context) {\n        return typeof (this._getHandlerIndex(handler, context)) !== 'undefined';\n    };\n    Event.prototype._updateHasHandlers = function () {\n        this.hasHandlers = !!this._handlers.length;\n    };\n    Event.prototype._getHandlerIndex = function (handler, context) {\n        var handlerCount = this._handlers.length;\n        var idx;\n        for (idx = 0; idx < handlerCount; idx++) {\n            if (this._handlers[idx] === handler && this._contexts[idx] === context)\n                break;\n        }\n        return idx < handlerCount ? idx : undefined;\n    };\n    Event.prototype._createDispatcher = function () {\n        this.dispatch = getFactory(this._handlers.length).apply(this, this._handlers.concat(this._contexts));\n    };\n    return Event;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Event;\n",
    "\"use strict\";\nvar Event_1 = require('./Event');\nexports.Event = Event_1.default;\n",
    "/*!\n* screenfull\n* v3.3.3 - 2018-09-04\n* (c) Sindre Sorhus; MIT License\n*/\n(function () {\n\t'use strict';\n\n\tvar document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\tvar isCommonjs = typeof module !== 'undefined' && module.exports;\n\tvar keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\n\n\tvar fn = (function () {\n\t\tvar val;\n\n\t\tvar fnMap = [\n\t\t\t[\n\t\t\t\t'requestFullscreen',\n\t\t\t\t'exitFullscreen',\n\t\t\t\t'fullscreenElement',\n\t\t\t\t'fullscreenEnabled',\n\t\t\t\t'fullscreenchange',\n\t\t\t\t'fullscreenerror'\n\t\t\t],\n\t\t\t// New WebKit\n\t\t\t[\n\t\t\t\t'webkitRequestFullscreen',\n\t\t\t\t'webkitExitFullscreen',\n\t\t\t\t'webkitFullscreenElement',\n\t\t\t\t'webkitFullscreenEnabled',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t// Old WebKit (Safari 5.1)\n\t\t\t[\n\t\t\t\t'webkitRequestFullScreen',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitCurrentFullScreenElement',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t[\n\t\t\t\t'mozRequestFullScreen',\n\t\t\t\t'mozCancelFullScreen',\n\t\t\t\t'mozFullScreenElement',\n\t\t\t\t'mozFullScreenEnabled',\n\t\t\t\t'mozfullscreenchange',\n\t\t\t\t'mozfullscreenerror'\n\t\t\t],\n\t\t\t[\n\t\t\t\t'msRequestFullscreen',\n\t\t\t\t'msExitFullscreen',\n\t\t\t\t'msFullscreenElement',\n\t\t\t\t'msFullscreenEnabled',\n\t\t\t\t'MSFullscreenChange',\n\t\t\t\t'MSFullscreenError'\n\t\t\t]\n\t\t];\n\n\t\tvar i = 0;\n\t\tvar l = fnMap.length;\n\t\tvar ret = {};\n\n\t\tfor (; i < l; i++) {\n\t\t\tval = fnMap[i];\n\t\t\tif (val && val[1] in document) {\n\t\t\t\tfor (i = 0; i < val.length; i++) {\n\t\t\t\t\tret[fnMap[0][i]] = val[i];\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t})();\n\n\tvar eventNameMap = {\n\t\tchange: fn.fullscreenchange,\n\t\terror: fn.fullscreenerror\n\t};\n\n\tvar screenfull = {\n\t\trequest: function (elem) {\n\t\t\tvar request = fn.requestFullscreen;\n\n\t\t\telem = elem || document.documentElement;\n\n\t\t\t// Work around Safari 5.1 bug: reports support for\n\t\t\t// keyboard in fullscreen even though it doesn't.\n\t\t\t// Browser sniffing, since the alternative with\n\t\t\t// setTimeout is even worse.\n\t\t\tif (/ Version\\/5\\.1(?:\\.\\d+)? Safari\\//.test(navigator.userAgent)) {\n\t\t\t\telem[request]();\n\t\t\t} else {\n\t\t\t\telem[request](keyboardAllowed ? Element.ALLOW_KEYBOARD_INPUT : {});\n\t\t\t}\n\t\t},\n\t\texit: function () {\n\t\t\tdocument[fn.exitFullscreen]();\n\t\t},\n\t\ttoggle: function (elem) {\n\t\t\tif (this.isFullscreen) {\n\t\t\t\tthis.exit();\n\t\t\t} else {\n\t\t\t\tthis.request(elem);\n\t\t\t}\n\t\t},\n\t\tonchange: function (callback) {\n\t\t\tthis.on('change', callback);\n\t\t},\n\t\tonerror: function (callback) {\n\t\t\tthis.on('error', callback);\n\t\t},\n\t\ton: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.addEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\toff: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.removeEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\traw: fn\n\t};\n\n\tif (!fn) {\n\t\tif (isCommonjs) {\n\t\t\tmodule.exports = false;\n\t\t} else {\n\t\t\twindow.screenfull = false;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tObject.defineProperties(screenfull, {\n\t\tisFullscreen: {\n\t\t\tget: function () {\n\t\t\t\treturn Boolean(document[fn.fullscreenElement]);\n\t\t\t}\n\t\t},\n\t\telement: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn document[fn.fullscreenElement];\n\t\t\t}\n\t\t},\n\t\tenabled: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\t// Coerce to boolean in case of old WebKit\n\t\t\t\treturn Boolean(document[fn.fullscreenEnabled]);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (isCommonjs) {\n\t\tmodule.exports = screenfull;\n\t} else {\n\t\twindow.screenfull = screenfull;\n\t}\n})();\n",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result[\"default\"] = mod;\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n});\r\n",
    "\"use strict\";\nvar microevent_ts_1 = require('microevent.ts');\nvar MSG_RESOLVE_TRANSACTION = \"resolve_transaction\", MSG_REJECT_TRANSACTION = \"reject_transaction\", MSG_ERROR = \"error\";\nvar RpcProvider = (function () {\n    function RpcProvider(_dispatch, _rpcTimeout) {\n        if (_rpcTimeout === void 0) { _rpcTimeout = 0; }\n        this._dispatch = _dispatch;\n        this._rpcTimeout = _rpcTimeout;\n        this.error = new microevent_ts_1.Event();\n        this._rpcHandlers = {};\n        this._signalHandlers = {};\n        this._pendingTransactions = {};\n        this._nextTransactionId = 0;\n    }\n    RpcProvider.prototype.dispatch = function (payload) {\n        var message = payload;\n        switch (message.type) {\n            case RpcProvider.MessageType.signal:\n                return this._handleSignal(message);\n            case RpcProvider.MessageType.rpc:\n                return this._handeRpc(message);\n            case RpcProvider.MessageType.internal:\n                return this._handleInternal(message);\n            default:\n                this._raiseError(\"invalid message type \" + message.type);\n        }\n    };\n    RpcProvider.prototype.rpc = function (id, payload, transfer) {\n        var _this = this;\n        var transactionId = this._nextTransactionId++;\n        this._dispatch({\n            type: RpcProvider.MessageType.rpc,\n            transactionId: transactionId,\n            id: id,\n            payload: payload\n        }, transfer ? transfer : undefined);\n        return new Promise(function (resolve, reject) {\n            var transaction = _this._pendingTransactions[transactionId] = {\n                id: transactionId,\n                resolve: resolve,\n                reject: reject\n            };\n            if (_this._rpcTimeout > 0) {\n                _this._pendingTransactions[transactionId].timeoutHandle =\n                    setTimeout(function () { return _this._transactionTimeout(transaction); }, _this._rpcTimeout);\n            }\n        });\n    };\n    ;\n    RpcProvider.prototype.signal = function (id, payload, transfer) {\n        this._dispatch({\n            type: RpcProvider.MessageType.signal,\n            id: id,\n            payload: payload,\n        }, transfer ? transfer : undefined);\n        return this;\n    };\n    RpcProvider.prototype.registerRpcHandler = function (id, handler) {\n        if (this._rpcHandlers[id]) {\n            throw new Error(\"rpc handler for \" + id + \" already registered\");\n        }\n        this._rpcHandlers[id] = handler;\n        return this;\n    };\n    ;\n    RpcProvider.prototype.registerSignalHandler = function (id, handler) {\n        if (!this._signalHandlers[id]) {\n            this._signalHandlers[id] = [];\n        }\n        this._signalHandlers[id].push(handler);\n        return this;\n    };\n    RpcProvider.prototype.deregisterRpcHandler = function (id, handler) {\n        if (this._rpcHandlers[id]) {\n            delete this._rpcHandlers[id];\n        }\n        return this;\n    };\n    ;\n    RpcProvider.prototype.deregisterSignalHandler = function (id, handler) {\n        if (this._signalHandlers[id]) {\n            this._signalHandlers[id] = this._signalHandlers[id].filter(function (h) { return handler !== h; });\n        }\n        return this;\n    };\n    RpcProvider.prototype._raiseError = function (error) {\n        this.error.dispatch(new Error(error));\n        this._dispatch({\n            type: RpcProvider.MessageType.internal,\n            id: MSG_ERROR,\n            payload: error\n        });\n    };\n    RpcProvider.prototype._handleSignal = function (message) {\n        if (!this._signalHandlers[message.id]) {\n            return this._raiseError(\"invalid signal \" + message.id);\n        }\n        this._signalHandlers[message.id].forEach(function (handler) { return handler(message.payload); });\n    };\n    RpcProvider.prototype._handeRpc = function (message) {\n        var _this = this;\n        if (!this._rpcHandlers[message.id]) {\n            return this._raiseError(\"invalid rpc \" + message.id);\n        }\n        Promise.resolve(this._rpcHandlers[message.id](message.payload))\n            .then(function (result) { return _this._dispatch({\n            type: RpcProvider.MessageType.internal,\n            id: MSG_RESOLVE_TRANSACTION,\n            transactionId: message.transactionId,\n            payload: result\n        }); }, function (reason) { return _this._dispatch({\n            type: RpcProvider.MessageType.internal,\n            id: MSG_REJECT_TRANSACTION,\n            transactionId: message.transactionId,\n            payload: reason\n        }); });\n    };\n    RpcProvider.prototype._handleInternal = function (message) {\n        switch (message.id) {\n            case MSG_RESOLVE_TRANSACTION:\n                if (!this._pendingTransactions[message.transactionId]) {\n                    return this._raiseError(\"no pending transaction with id \" + message.transactionId);\n                }\n                this._pendingTransactions[message.transactionId].resolve(message.payload);\n                this._clearTransaction(this._pendingTransactions[message.transactionId]);\n                break;\n            case MSG_REJECT_TRANSACTION:\n                if (!this._pendingTransactions[message.transactionId]) {\n                    return this._raiseError(\"no pending transaction with id \" + message.transactionId);\n                }\n                this._pendingTransactions[message.transactionId].reject(message.payload);\n                this._clearTransaction(this._pendingTransactions[message.transactionId]);\n                break;\n            case MSG_ERROR:\n                this.error.dispatch(new Error(\"remote error: \" + message.payload));\n                break;\n            default:\n                this._raiseError(\"unhandled internal message \" + message.id);\n                break;\n        }\n    };\n    RpcProvider.prototype._transactionTimeout = function (transaction) {\n        transaction.reject('transaction timed out');\n        this._raiseError(\"transaction \" + transaction.id + \" timed out\");\n        delete this._pendingTransactions[transaction.id];\n        return;\n    };\n    RpcProvider.prototype._clearTransaction = function (transaction) {\n        if (typeof (transaction.timeoutHandle) !== 'undefined') {\n            clearTimeout(transaction.timeoutHandle);\n        }\n        delete this._pendingTransactions[transaction.id];\n    };\n    return RpcProvider;\n}());\nvar RpcProvider;\n(function (RpcProvider) {\n    (function (MessageType) {\n        MessageType[MessageType[\"signal\"] = 0] = \"signal\";\n        MessageType[MessageType[\"rpc\"] = 1] = \"rpc\";\n        MessageType[MessageType[\"internal\"] = 2] = \"internal\";\n    })(RpcProvider.MessageType || (RpcProvider.MessageType = {}));\n    var MessageType = RpcProvider.MessageType;\n    ;\n})(RpcProvider || (RpcProvider = {}));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RpcProvider;\n",
    "\"use strict\";\nvar RpcProvider_1 = require('./RpcProvider');\nexports.RpcProvider = RpcProvider_1.default;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Instruction from './Instruction';\nimport BusInterface from '../bus/BusInterface';\nimport CpuInterface from './CpuInterface';\nimport * as ops from './ops';\n\nimport RngInterface from '../../tools/rng/GeneratorInterface';\n\nconst enum InterruptCheck {\n    endOfInstruction,\n    beforeOp\n}\nexport function opBoot(state: CpuInterface.State, bus: BusInterface): void {\n    state.p = bus.readWord(0xfffc);\n}\n\nfunction dispatchInterrupt(state: CpuInterface.State, bus: BusInterface, vector: number): void {\n    const nextOpAddr = state.p;\n\n    if (state.nmi) {\n        vector = 0xfffa;\n    }\n\n    state.nmi = state.irq = false;\n\n    bus.write(state.s + 0x0100, (nextOpAddr >>> 8) & 0xff);\n    state.s = (state.s + 0xff) & 0xff;\n    bus.write(state.s + 0x0100, nextOpAddr & 0xff);\n    state.s = (state.s + 0xff) & 0xff;\n\n    bus.write(state.s + 0x0100, state.flags & ~CpuInterface.Flags.b);\n    state.s = (state.s + 0xff) & 0xff;\n\n    state.flags |= CpuInterface.Flags.i;\n\n    state.p = bus.readWord(vector);\n}\n\nexport function opIrq(state: CpuInterface.State, bus: BusInterface) {\n    dispatchInterrupt(state, bus, 0xfffe);\n}\n\nexport function opNmi(state: CpuInterface.State, bus: BusInterface) {\n    dispatchInterrupt(state, bus, 0xfffa);\n}\n\nclass BatchedAccessCpu {\n    constructor(private _bus: BusInterface, private _rng?: RngInterface) {\n        this.reset();\n    }\n\n    setInterrupt(irq: boolean): BatchedAccessCpu {\n        this._interruptPending = irq;\n        return this;\n    }\n\n    isInterrupt(): boolean {\n        return this._interruptPending;\n    }\n\n    nmi(): BatchedAccessCpu {\n        this._nmiPending = true;\n        return this;\n    }\n\n    halt(): BatchedAccessCpu {\n        this._halted = true;\n        return this;\n    }\n\n    resume(): BatchedAccessCpu {\n        this._halted = false;\n        return this;\n    }\n\n    isHalt(): boolean {\n        return this._halted;\n    }\n\n    setInvalidInstructionCallback(callback: CpuInterface.InvalidInstructionCallbackInterface): BatchedAccessCpu {\n        this._invalidInstructionCallback = callback;\n        return this;\n    }\n\n    getInvalidInstructionCallback(): CpuInterface.InvalidInstructionCallbackInterface {\n        return this._invalidInstructionCallback;\n    }\n\n    getLastInstructionPointer(): number {\n        return this._lastInstructionPointer;\n    }\n\n    reset(): BatchedAccessCpu {\n        this.state.a = this._rng ? this._rng.int(0xff) : 0;\n        this.state.x = this._rng ? this._rng.int(0xff) : 0;\n        this.state.y = this._rng ? this._rng.int(0xff) : 0;\n        this.state.s = 0xfd;\n        this.state.p = this._rng ? this._rng.int(0xffff) : 0;\n        this.state.flags =\n            (this._rng ? this._rng.int(0xff) : 0) | CpuInterface.Flags.i | CpuInterface.Flags.e | CpuInterface.Flags.b;\n        this.state.irq = false;\n        this.state.nmi = false;\n\n        this.executionState = CpuInterface.ExecutionState.boot;\n        this._opCycles = 7;\n        this._interruptPending = false;\n        this._nmiPending = false;\n\n        this._instructionCallback = opBoot;\n\n        return this;\n    }\n\n    cycle(): BatchedAccessCpu {\n        if (this._halted) {\n            return this;\n        }\n\n        switch (this.executionState) {\n            case CpuInterface.ExecutionState.boot:\n            case CpuInterface.ExecutionState.execute:\n                if (--this._opCycles === 0) {\n                    if (this._dereference) {\n                        this._operand = this._bus.read(this._operand);\n                    }\n\n                    if (this._interuptCheck === InterruptCheck.beforeOp) {\n                        this._checkForInterrupts();\n                    }\n\n                    this._instructionCallback(this.state, this._bus, this._operand, this._currentAddressingMode);\n                    this.executionState = CpuInterface.ExecutionState.fetch;\n\n                    if (this._interuptCheck === InterruptCheck.endOfInstruction) {\n                        this._checkForInterrupts();\n                    }\n                }\n\n                break;\n\n            case CpuInterface.ExecutionState.fetch:\n                if (this.state.nmi) {\n                    this._instructionCallback = opNmi;\n                    this._opCycles = 6;\n                    this.state.nmi = this.state.irq = false;\n                    this._interuptCheck = InterruptCheck.beforeOp;\n                    this.executionState = CpuInterface.ExecutionState.execute;\n\n                    return this;\n                }\n\n                if (this.state.irq) {\n                    this._instructionCallback = opIrq;\n                    this._opCycles = 6;\n                    this.state.nmi = this.state.irq = false;\n                    this._interuptCheck = InterruptCheck.beforeOp;\n                    this.executionState = CpuInterface.ExecutionState.execute;\n\n                    return this;\n                }\n\n                this._fetch();\n                break;\n        }\n\n        return this;\n    }\n\n    private _fetch() {\n        const instruction = Instruction.opcodes[this._bus.read(this.state.p)];\n\n        let addressingMode = instruction.addressingMode,\n            dereference = false,\n            slowIndexedAccess = false;\n\n        this._lastInstructionPointer = this.state.p;\n        this._currentAddressingMode = addressingMode;\n        this._interuptCheck = InterruptCheck.endOfInstruction;\n\n        switch (instruction.operation) {\n            case Instruction.Operation.adc:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opAdc;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.and:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opAnd;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.asl:\n                if (addressingMode === Instruction.AddressingMode.implied) {\n                    this._opCycles = 1;\n                    this._instructionCallback = ops.opAslAcc;\n                } else {\n                    this._opCycles = 3;\n                    this._instructionCallback = ops.opAslMem;\n                    slowIndexedAccess = true;\n                }\n                break;\n\n            case Instruction.Operation.bcc:\n                if (this.state.flags & CpuInterface.Flags.c) {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = ops.opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                } else {\n                    this._instructionCallback = ops.opJmp;\n                    this._opCycles = 0;\n                }\n                break;\n\n            case Instruction.Operation.bcs:\n                if (this.state.flags & CpuInterface.Flags.c) {\n                    this._instructionCallback = ops.opJmp;\n                    this._opCycles = 0;\n                } else {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = ops.opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                }\n                break;\n\n            case Instruction.Operation.beq:\n                if (this.state.flags & CpuInterface.Flags.z) {\n                    this._instructionCallback = ops.opJmp;\n                    this._opCycles = 0;\n                } else {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = ops.opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                }\n                break;\n\n            case Instruction.Operation.bit:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opBit;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.bmi:\n                if (this.state.flags & CpuInterface.Flags.n) {\n                    this._instructionCallback = ops.opJmp;\n                    this._opCycles = 0;\n                } else {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = ops.opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                }\n                break;\n\n            case Instruction.Operation.bne:\n                if (this.state.flags & CpuInterface.Flags.z) {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = ops.opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                } else {\n                    this._instructionCallback = ops.opJmp;\n                    this._opCycles = 0;\n                }\n                break;\n\n            case Instruction.Operation.bpl:\n                if (this.state.flags & CpuInterface.Flags.n) {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = ops.opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                } else {\n                    this._instructionCallback = ops.opJmp;\n                    this._opCycles = 0;\n                }\n                break;\n\n            case Instruction.Operation.bvc:\n                if (this.state.flags & CpuInterface.Flags.v) {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = ops.opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                } else {\n                    this._instructionCallback = ops.opJmp;\n                    this._opCycles = 0;\n                }\n                break;\n\n            case Instruction.Operation.bvs:\n                if (this.state.flags & CpuInterface.Flags.v) {\n                    this._instructionCallback = ops.opJmp;\n                    this._opCycles = 0;\n                } else {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = ops.opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                }\n                break;\n\n            case Instruction.Operation.brk:\n                this._opCycles = 6;\n                this._instructionCallback = ops.opBrk;\n                this._interuptCheck = InterruptCheck.beforeOp;\n                break;\n\n            case Instruction.Operation.clc:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opClc;\n                break;\n\n            case Instruction.Operation.cld:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opCld;\n                break;\n\n            case Instruction.Operation.cli:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opCli;\n                this._interuptCheck = InterruptCheck.beforeOp;\n                break;\n\n            case Instruction.Operation.clv:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opClv;\n                break;\n\n            case Instruction.Operation.cmp:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opCmp;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.cpx:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opCpx;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.cpy:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opCpy;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.dec:\n                this._opCycles = 3;\n                this._instructionCallback = ops.opDec;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.dex:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opDex;\n                break;\n\n            case Instruction.Operation.dey:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opDey;\n                break;\n\n            case Instruction.Operation.eor:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opEor;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.inc:\n                this._opCycles = 3;\n                this._instructionCallback = ops.opInc;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.inx:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opInx;\n                break;\n\n            case Instruction.Operation.iny:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opIny;\n                break;\n\n            case Instruction.Operation.jmp:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opJmp;\n                break;\n\n            case Instruction.Operation.jsr:\n                this._opCycles = 5;\n                this._instructionCallback = ops.opJsr;\n                break;\n\n            case Instruction.Operation.lda:\n                this._opCycles = addressingMode === Instruction.AddressingMode.immediate ? 0 : 1;\n                this._instructionCallback = ops.opLda;\n                break;\n\n            case Instruction.Operation.ldx:\n                this._opCycles = addressingMode === Instruction.AddressingMode.immediate ? 0 : 1;\n                this._instructionCallback = ops.opLdx;\n                break;\n\n            case Instruction.Operation.ldy:\n                this._opCycles = addressingMode === Instruction.AddressingMode.immediate ? 0 : 1;\n                this._instructionCallback = ops.opLdy;\n                break;\n\n            case Instruction.Operation.lsr:\n                if (addressingMode === Instruction.AddressingMode.implied) {\n                    this._opCycles = 1;\n                    this._instructionCallback = ops.opLsrAcc;\n                } else {\n                    this._opCycles = 3;\n                    this._instructionCallback = ops.opLsrMem;\n                    slowIndexedAccess = true;\n                }\n                break;\n\n            case Instruction.Operation.nop:\n                this._opCycles = 1;\n\n                this._instructionCallback = ops.opNop;\n                break;\n\n            case Instruction.Operation.dop:\n            case Instruction.Operation.top:\n                this._opCycles = 0;\n                dereference = true;\n\n                this._instructionCallback = ops.opNop;\n                break;\n\n            case Instruction.Operation.ora:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opOra;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.php:\n                this._opCycles = 2;\n                this._instructionCallback = ops.opPhp;\n                break;\n\n            case Instruction.Operation.pha:\n                this._opCycles = 2;\n                this._instructionCallback = ops.opPha;\n                break;\n\n            case Instruction.Operation.pla:\n                this._opCycles = 3;\n                this._instructionCallback = ops.opPla;\n                break;\n\n            case Instruction.Operation.plp:\n                this._opCycles = 3;\n                this._instructionCallback = ops.opPlp;\n                this._interuptCheck = InterruptCheck.beforeOp;\n                break;\n\n            case Instruction.Operation.rol:\n                if (addressingMode === Instruction.AddressingMode.implied) {\n                    this._opCycles = 1;\n                    this._instructionCallback = ops.opRolAcc;\n                } else {\n                    this._opCycles = 3;\n                    this._instructionCallback = ops.opRolMem;\n                    slowIndexedAccess = true;\n                }\n                break;\n\n            case Instruction.Operation.ror:\n                if (addressingMode === Instruction.AddressingMode.implied) {\n                    this._opCycles = 1;\n                    this._instructionCallback = ops.opRorAcc;\n                } else {\n                    this._opCycles = 3;\n                    this._instructionCallback = ops.opRorMem;\n                    slowIndexedAccess = true;\n                }\n                break;\n\n            case Instruction.Operation.rti:\n                this._opCycles = 5;\n                this._instructionCallback = ops.opRti;\n                break;\n\n            case Instruction.Operation.rts:\n                this._opCycles = 5;\n                this._instructionCallback = ops.opRts;\n                break;\n\n            case Instruction.Operation.sbc:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opSbc;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.sec:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opSec;\n                break;\n\n            case Instruction.Operation.sed:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opSed;\n                break;\n\n            case Instruction.Operation.sei:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opSei;\n                this._interuptCheck = InterruptCheck.beforeOp;\n                break;\n\n            case Instruction.Operation.sta:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opSta;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.stx:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opStx;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.sty:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opSty;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.tax:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opTax;\n                break;\n\n            case Instruction.Operation.tay:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opTay;\n                break;\n\n            case Instruction.Operation.tsx:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opTsx;\n                break;\n\n            case Instruction.Operation.txa:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opTxa;\n                break;\n\n            case Instruction.Operation.txs:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opTxs;\n                break;\n\n            case Instruction.Operation.tya:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opTya;\n                break;\n\n            case Instruction.Operation.arr:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opArr;\n                break;\n\n            case Instruction.Operation.alr:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opAlr;\n                break;\n\n            case Instruction.Operation.axs:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opAxs;\n                break;\n\n            case Instruction.Operation.dcp:\n                this._opCycles = 3;\n                this._instructionCallback = ops.opDcp;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.lax:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opLax;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.slo:\n                this._opCycles = 3;\n                this._instructionCallback = ops.opSlo;\n                slowIndexedAccess = true;\n                dereference = false;\n                break;\n\n            case Instruction.Operation.aax:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opAax;\n                break;\n\n            case Instruction.Operation.lar:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opLar;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.isc:\n                this._opCycles = 3;\n                this._instructionCallback = ops.opIsc;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.aac:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opAac;\n                break;\n\n            case Instruction.Operation.atx:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opAtx;\n                break;\n\n            case Instruction.Operation.rra:\n                this._opCycles = 3;\n                dereference = false;\n                slowIndexedAccess = true;\n                this._instructionCallback = ops.opRra;\n                break;\n\n            case Instruction.Operation.rla:\n                this._opCycles = 3;\n                dereference = false;\n                slowIndexedAccess = true;\n                this._instructionCallback = ops.opRla;\n                break;\n\n            default:\n                if (this._invalidInstructionCallback) {\n                    this._invalidInstructionCallback(this);\n                }\n                return;\n        }\n\n        this.state.p = (this.state.p + 1) & 0xffff;\n\n        let value: number, base: number;\n\n        switch (addressingMode) {\n            case Instruction.AddressingMode.immediate:\n                this._operand = this._bus.read(this.state.p);\n                dereference = false;\n                this.state.p = (this.state.p + 1) & 0xffff;\n                this._opCycles++;\n                break;\n\n            case Instruction.AddressingMode.zeroPage:\n                this._operand = this._bus.read(this.state.p);\n                this.state.p = (this.state.p + 1) & 0xffff;\n                this._opCycles++;\n                break;\n\n            case Instruction.AddressingMode.absolute:\n                this._operand = this._bus.readWord(this.state.p);\n                this.state.p = (this.state.p + 2) & 0xffff;\n                this._opCycles += 2;\n                break;\n\n            case Instruction.AddressingMode.indirect:\n                value = this._bus.readWord(this.state.p);\n                if ((value & 0xff) === 0xff) {\n                    this._operand = this._bus.read(value) + (this._bus.read(value & 0xff00) << 8);\n                } else {\n                    this._operand = this._bus.readWord(value);\n                }\n                this.state.p = (this.state.p + 2) & 0xffff;\n                this._opCycles += 4;\n                break;\n\n            case Instruction.AddressingMode.relative:\n                value = this._bus.read(this.state.p);\n                value = value & 0x80 ? -(~(value - 1) & 0xff) : value;\n                this._operand = (this.state.p + value + 0x10001) & 0xffff;\n                this.state.p = (this.state.p + 1) & 0xffff;\n                this._opCycles += (this._operand & 0xff00) !== (this.state.p & 0xff00) ? 3 : 2;\n                break;\n\n            case Instruction.AddressingMode.zeroPageX:\n                base = this._bus.read(this.state.p);\n                this._bus.read(base);\n\n                this._operand = (base + this.state.x) & 0xff;\n                this.state.p = (this.state.p + 1) & 0xffff;\n                this._opCycles += 2;\n                break;\n\n            case Instruction.AddressingMode.absoluteX:\n                value = this._bus.readWord(this.state.p);\n                this._operand = (value + this.state.x) & 0xffff;\n\n                if ((this._operand & 0xff00) !== (value & 0xff00)) {\n                    this._bus.read((value & 0xff00) | (this._operand & 0xff));\n                }\n\n                this._opCycles += slowIndexedAccess || (this._operand & 0xff00) !== (value & 0xff00) ? 3 : 2;\n                this.state.p = (this.state.p + 2) & 0xffff;\n                break;\n\n            case Instruction.AddressingMode.zeroPageY:\n                base = this._bus.read(this.state.p);\n                this._bus.read(base);\n\n                this._operand = (base + this.state.y) & 0xff;\n                this.state.p = (this.state.p + 1) & 0xffff;\n                this._opCycles += 2;\n                break;\n\n            case Instruction.AddressingMode.absoluteY:\n                value = this._bus.readWord(this.state.p);\n                this._operand = (value + this.state.y) & 0xffff;\n\n                if ((this._operand & 0xff00) !== (value & 0xff00)) {\n                    this._bus.read((value & 0xff00) | (this._operand & 0xff));\n                }\n\n                this._opCycles += slowIndexedAccess || (this._operand & 0xff00) !== (value & 0xff00) ? 3 : 2;\n                this.state.p = (this.state.p + 2) & 0xffff;\n                break;\n\n            case Instruction.AddressingMode.indexedIndirectX:\n                base = this._bus.read(this.state.p);\n                this._bus.read(base);\n\n                value = (base + this.state.x) & 0xff;\n\n                if (value === 0xff) {\n                    this._operand = this._bus.read(0xff) + (this._bus.read(0x00) << 8);\n                } else {\n                    this._operand = this._bus.readWord(value);\n                }\n\n                this._opCycles += 4;\n                this.state.p = (this.state.p + 1) & 0xffff;\n                break;\n\n            case Instruction.AddressingMode.indirectIndexedY:\n                value = this._bus.read(this.state.p);\n\n                if (value === 0xff) {\n                    value = this._bus.read(0xff) + (this._bus.read(0x00) << 8);\n                } else {\n                    value = this._bus.readWord(value);\n                }\n\n                this._operand = (value + this.state.y) & 0xffff;\n\n                if ((this._operand & 0xff00) !== (value & 0xff00)) {\n                    this._bus.read((value & 0xff00) | (this._operand & 0xff));\n                }\n\n                this._opCycles += slowIndexedAccess || (value & 0xff00) !== (this._operand & 0xff00) ? 4 : 3;\n                this.state.p = (this.state.p + 1) & 0xffff;\n                break;\n        }\n\n        this._dereference = dereference;\n        if (dereference) {\n            this._opCycles++;\n        }\n\n        this.executionState = CpuInterface.ExecutionState.execute;\n    }\n\n    private _checkForInterrupts(): void {\n        if (this._nmiPending) {\n            this.state.irq = false;\n            this.state.nmi = true;\n            this._nmiPending = false;\n        }\n\n        if (this._interruptPending && !this.state.nmi && !(this.state.flags & CpuInterface.Flags.i)) {\n            this.state.irq = true;\n        }\n    }\n\n    executionState: CpuInterface.ExecutionState = CpuInterface.ExecutionState.boot;\n    state: CpuInterface.State = new CpuInterface.State();\n\n    private _opCycles: number = 0;\n    private _instructionCallback: InstructionCallbackInterface = null;\n    private _invalidInstructionCallback: CpuInterface.InvalidInstructionCallbackInterface = null;\n\n    private _interruptPending: boolean = false;\n    private _nmiPending: boolean = false;\n    private _interuptCheck = InterruptCheck.endOfInstruction;\n\n    private _halted: boolean = false;\n\n    private _operand: number = 0;\n    private _lastInstructionPointer: number = 0;\n    private _currentAddressingMode: Instruction.AddressingMode = Instruction.AddressingMode.invalid;\n\n    private _dereference = false;\n}\n\ninterface InstructionCallbackInterface {\n    (\n        state?: CpuInterface.State,\n        bus?: BusInterface,\n        operand?: number,\n        addressingMode?: Instruction.AddressingMode\n    ): void;\n}\n\nexport { BatchedAccessCpu as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\ninterface CpuInterface {\n    setInterrupt(irq: boolean): CpuInterface;\n\n    isInterrupt(): boolean;\n\n    nmi(): CpuInterface;\n\n    halt(): CpuInterface;\n\n    resume(): CpuInterface;\n\n    isHalt(): boolean;\n\n    setInvalidInstructionCallback(callback: CpuInterface.InvalidInstructionCallbackInterface): CpuInterface;\n\n    getInvalidInstructionCallback(): CpuInterface.InvalidInstructionCallbackInterface;\n\n    getLastInstructionPointer(): number;\n\n    reset(): CpuInterface;\n\n    cycle(): CpuInterface;\n\n    executionState: CpuInterface.ExecutionState;\n    state: CpuInterface.State;\n}\n\nnamespace CpuInterface {\n    export const enum ExecutionState {\n        boot,\n        fetch,\n        execute\n    }\n\n    export class State {\n        a: number = 0;\n        x: number = 0;\n        y: number = 0;\n        s: number = 0;\n        p: number = 0;\n        flags: number = 0;\n\n        irq = false;\n        nmi = false;\n    }\n\n    export const enum Flags {\n        c = 0x01, // carry\n        z = 0x02, // zero\n        i = 0x04, // interrupt\n        d = 0x08, // decimal mode\n        b = 0x10, // break\n        e = 0x20, // reserved\n        v = 0x40, // overflow\n        n = 0x80 // sign\n    }\n\n    export interface InvalidInstructionCallbackInterface {\n        (cpu?: CpuInterface): void;\n    }\n}\n\nexport { CpuInterface as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport RngInterface from '../../tools/rng/GeneratorInterface';\nimport BusInterface from '../bus/BusInterface';\nimport CpuInterface from './CpuInterface';\nimport StateMachineCpu from './StateMachineCpu';\nimport BatchedAccessCpu from './BatchedAccessCpu';\n\nclass Factory {\n    constructor(private _type: Factory.Type) {}\n\n    create(bus: BusInterface, rng?: RngInterface): CpuInterface {\n        switch (this._type) {\n            case Factory.Type.stateMachine:\n                return new StateMachineCpu(bus, rng);\n\n            case Factory.Type.batchedAccess:\n                return new BatchedAccessCpu(bus, rng);\n\n            default:\n                throw new Error('invalid CPU type');\n        }\n    }\n}\n\nnamespace Factory {\n    export enum Type {\n        stateMachine,\n        batchedAccess\n    }\n}\n\nexport default Factory;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nclass Instruction {\n    constructor(\n        public readonly operation: Instruction.Operation,\n        public readonly addressingMode: Instruction.AddressingMode,\n        public readonly effectiveAddressingMode = addressingMode\n    ) {}\n\n    getSize(): number {\n        switch (this.effectiveAddressingMode) {\n            case Instruction.AddressingMode.immediate:\n            case Instruction.AddressingMode.zeroPage:\n            case Instruction.AddressingMode.zeroPageX:\n            case Instruction.AddressingMode.zeroPageY:\n            case Instruction.AddressingMode.indexedIndirectX:\n            case Instruction.AddressingMode.indirectIndexedY:\n            case Instruction.AddressingMode.relative:\n                return 2;\n\n            case Instruction.AddressingMode.absolute:\n            case Instruction.AddressingMode.absoluteX:\n            case Instruction.AddressingMode.absoluteY:\n            case Instruction.AddressingMode.indirect:\n                return 3;\n\n            default:\n                return 1;\n        }\n    }\n}\n\nnamespace Instruction {\n    export const enum Operation {\n        adc,\n        and,\n        asl,\n        bcc,\n        bcs,\n        beq,\n        bit,\n        bmi,\n        bne,\n        bpl,\n        brk,\n        bvc,\n        bvs,\n        clc,\n        cld,\n        cli,\n        clv,\n        cmp,\n        cpx,\n        cpy,\n        dec,\n        dex,\n        dey,\n        eor,\n        inc,\n        inx,\n        iny,\n        jmp,\n        jsr,\n        lda,\n        ldx,\n        ldy,\n        lsr,\n        nop,\n        ora,\n        pha,\n        php,\n        pla,\n        plp,\n        rol,\n        ror,\n        rti,\n        rts,\n        sbc,\n        sec,\n        sed,\n        sei,\n        sta,\n        stx,\n        sty,\n        tax,\n        tay,\n        tsx,\n        txa,\n        txs,\n        tya,\n        // undocumented operations\n        dop,\n        top,\n        alr,\n        axs,\n        dcp,\n        lax,\n        arr,\n        slo,\n        aax,\n        lar,\n        isc,\n        aac,\n        atx,\n        rra,\n        rla,\n        invalid\n    }\n\n    export enum OperationMap {\n        adc,\n        and,\n        asl,\n        bcc,\n        bcs,\n        beq,\n        bit,\n        bmi,\n        bne,\n        bpl,\n        brk,\n        bvc,\n        bvs,\n        clc,\n        cld,\n        cli,\n        clv,\n        cmp,\n        cpx,\n        cpy,\n        dec,\n        dex,\n        dey,\n        eor,\n        inc,\n        inx,\n        iny,\n        jmp,\n        jsr,\n        lda,\n        ldx,\n        ldy,\n        lsr,\n        nop,\n        ora,\n        pha,\n        php,\n        pla,\n        plp,\n        rol,\n        ror,\n        rti,\n        rts,\n        sbc,\n        sec,\n        sed,\n        sei,\n        sta,\n        stx,\n        sty,\n        tax,\n        tay,\n        tsx,\n        txa,\n        txs,\n        tya,\n        // undocumented operations\n        dop,\n        top,\n        alr,\n        axs,\n        dcp,\n        lax,\n        arr,\n        slo,\n        aax,\n        lar,\n        isc,\n        aac,\n        atx,\n        rra,\n        rla,\n        invalid\n    }\n\n    export const enum AddressingMode {\n        implied,\n        immediate,\n        zeroPage,\n        absolute,\n        indirect,\n        relative,\n        zeroPageX,\n        absoluteX,\n        indexedIndirectX,\n        zeroPageY,\n        absoluteY,\n        indirectIndexedY,\n        invalid\n    }\n\n    export const opcodes = new Array<Instruction>(256);\n}\n\nexport { Instruction as default };\n\n// Opcodes init\n\nnamespace Instruction {\n    export namespace __init {\n        for (let i = 0; i < 256; i++) {\n            opcodes[i] = new Instruction(Operation.invalid, AddressingMode.invalid);\n        }\n\n        let operation: Operation, addressingMode: AddressingMode, opcode: number;\n\n        for (let i = 0; i < 8; i++) {\n            switch (i) {\n                case 0:\n                    operation = Operation.ora;\n                    break;\n                case 1:\n                    operation = Operation.and;\n                    break;\n                case 2:\n                    operation = Operation.eor;\n                    break;\n                case 3:\n                    operation = Operation.adc;\n                    break;\n                case 4:\n                    operation = Operation.sta;\n                    break;\n                case 5:\n                    operation = Operation.lda;\n                    break;\n                case 6:\n                    operation = Operation.cmp;\n                    break;\n                case 7:\n                    operation = Operation.sbc;\n                    break;\n            }\n            for (let j = 0; j < 8; j++) {\n                switch (j) {\n                    case 0:\n                        addressingMode = AddressingMode.indexedIndirectX;\n                        break;\n                    case 1:\n                        addressingMode = AddressingMode.zeroPage;\n                        break;\n                    case 2:\n                        addressingMode = AddressingMode.immediate;\n                        break;\n                    case 3:\n                        addressingMode = AddressingMode.absolute;\n                        break;\n                    case 4:\n                        addressingMode = AddressingMode.indirectIndexedY;\n                        break;\n                    case 5:\n                        addressingMode = AddressingMode.zeroPageX;\n                        break;\n                    case 6:\n                        addressingMode = AddressingMode.absoluteY;\n                        break;\n                    case 7:\n                        addressingMode = AddressingMode.absoluteX;\n                        break;\n                }\n\n                if (operation === Operation.sta && addressingMode === AddressingMode.immediate) {\n                    addressingMode = AddressingMode.invalid;\n                }\n\n                if (operation !== Operation.invalid && addressingMode !== AddressingMode.invalid) {\n                    opcode = (i << 5) | (j << 2) | 1;\n                    opcodes[opcode] = new Instruction(operation, addressingMode);\n                }\n            }\n        }\n\n        function set(\n            _opcode: number,\n            _operation: Operation,\n            _addressingMode: AddressingMode,\n            _effectiveAdressingMode?: AddressingMode\n        ): void {\n            if (opcodes[_opcode].operation !== Operation.invalid) {\n                throw new Error('entry for opcode ' + _opcode + ' already exists');\n            }\n\n            opcodes[_opcode] = new Instruction(_operation, _addressingMode, _effectiveAdressingMode);\n        }\n\n        set(0x06, Operation.asl, AddressingMode.zeroPage);\n        set(0x0a, Operation.asl, AddressingMode.implied);\n        set(0x0e, Operation.asl, AddressingMode.absolute);\n        set(0x16, Operation.asl, AddressingMode.zeroPageX);\n        set(0x1e, Operation.asl, AddressingMode.absoluteX);\n\n        set(0x26, Operation.rol, AddressingMode.zeroPage);\n        set(0x2a, Operation.rol, AddressingMode.implied);\n        set(0x2e, Operation.rol, AddressingMode.absolute);\n        set(0x36, Operation.rol, AddressingMode.zeroPageX);\n        set(0x3e, Operation.rol, AddressingMode.absoluteX);\n\n        set(0x46, Operation.lsr, AddressingMode.zeroPage);\n        set(0x4a, Operation.lsr, AddressingMode.implied);\n        set(0x4e, Operation.lsr, AddressingMode.absolute);\n        set(0x56, Operation.lsr, AddressingMode.zeroPageX);\n        set(0x5e, Operation.lsr, AddressingMode.absoluteX);\n\n        set(0x66, Operation.ror, AddressingMode.zeroPage);\n        set(0x6a, Operation.ror, AddressingMode.implied);\n        set(0x6e, Operation.ror, AddressingMode.absolute);\n        set(0x76, Operation.ror, AddressingMode.zeroPageX);\n        set(0x7e, Operation.ror, AddressingMode.absoluteX);\n\n        set(0x86, Operation.stx, AddressingMode.zeroPage);\n        set(0x8e, Operation.stx, AddressingMode.absolute);\n        set(0x96, Operation.stx, AddressingMode.zeroPageY);\n\n        set(0xa2, Operation.ldx, AddressingMode.immediate);\n        set(0xa6, Operation.ldx, AddressingMode.zeroPage);\n        set(0xae, Operation.ldx, AddressingMode.absolute);\n        set(0xb6, Operation.ldx, AddressingMode.zeroPageY);\n        set(0xbe, Operation.ldx, AddressingMode.absoluteY);\n\n        set(0xc6, Operation.dec, AddressingMode.zeroPage);\n        set(0xce, Operation.dec, AddressingMode.absolute);\n        set(0xd6, Operation.dec, AddressingMode.zeroPageX);\n        set(0xde, Operation.dec, AddressingMode.absoluteX);\n\n        set(0xe6, Operation.inc, AddressingMode.zeroPage);\n        set(0xee, Operation.inc, AddressingMode.absolute);\n        set(0xf6, Operation.inc, AddressingMode.zeroPageX);\n        set(0xfe, Operation.inc, AddressingMode.absoluteX);\n\n        set(0x24, Operation.bit, AddressingMode.zeroPage);\n        set(0x2c, Operation.bit, AddressingMode.absolute);\n\n        set(0x4c, Operation.jmp, AddressingMode.absolute);\n        set(0x6c, Operation.jmp, AddressingMode.indirect);\n\n        set(0x84, Operation.sty, AddressingMode.zeroPage);\n        set(0x8c, Operation.sty, AddressingMode.absolute);\n        set(0x94, Operation.sty, AddressingMode.zeroPageX);\n\n        set(0xa0, Operation.ldy, AddressingMode.immediate);\n        set(0xa4, Operation.ldy, AddressingMode.zeroPage);\n        set(0xac, Operation.ldy, AddressingMode.absolute);\n        set(0xb4, Operation.ldy, AddressingMode.zeroPageX);\n        set(0xbc, Operation.ldy, AddressingMode.absoluteX);\n\n        set(0xc0, Operation.cpy, AddressingMode.immediate);\n        set(0xc4, Operation.cpy, AddressingMode.zeroPage);\n        set(0xcc, Operation.cpy, AddressingMode.absolute);\n\n        set(0xe0, Operation.cpx, AddressingMode.immediate);\n        set(0xe4, Operation.cpx, AddressingMode.zeroPage);\n        set(0xec, Operation.cpx, AddressingMode.absolute);\n\n        set(0x10, Operation.bpl, AddressingMode.relative);\n        set(0x30, Operation.bmi, AddressingMode.relative);\n        set(0x50, Operation.bvc, AddressingMode.relative);\n        set(0x70, Operation.bvs, AddressingMode.relative);\n        set(0x90, Operation.bcc, AddressingMode.relative);\n        set(0xb0, Operation.bcs, AddressingMode.relative);\n        set(0xd0, Operation.bne, AddressingMode.relative);\n        set(0xf0, Operation.beq, AddressingMode.relative);\n\n        set(0x00, Operation.brk, AddressingMode.implied);\n        set(0x20, Operation.jsr, AddressingMode.implied, AddressingMode.absolute);\n        set(0x40, Operation.rti, AddressingMode.implied);\n        set(0x60, Operation.rts, AddressingMode.implied);\n        set(0x08, Operation.php, AddressingMode.implied);\n        set(0x28, Operation.plp, AddressingMode.implied);\n        set(0x48, Operation.pha, AddressingMode.implied);\n        set(0x68, Operation.pla, AddressingMode.implied);\n        set(0x88, Operation.dey, AddressingMode.implied);\n        set(0xa8, Operation.tay, AddressingMode.implied);\n        set(0xc8, Operation.iny, AddressingMode.implied);\n        set(0xe8, Operation.inx, AddressingMode.implied);\n        set(0x18, Operation.clc, AddressingMode.implied);\n        set(0x38, Operation.sec, AddressingMode.implied);\n        set(0x58, Operation.cli, AddressingMode.implied);\n        set(0x78, Operation.sei, AddressingMode.implied);\n        set(0x98, Operation.tya, AddressingMode.implied);\n        set(0xb8, Operation.clv, AddressingMode.implied);\n        set(0xd8, Operation.cld, AddressingMode.implied);\n        set(0xf8, Operation.sed, AddressingMode.implied);\n        set(0x8a, Operation.txa, AddressingMode.implied);\n        set(0x9a, Operation.txs, AddressingMode.implied);\n        set(0xaa, Operation.tax, AddressingMode.implied);\n        set(0xba, Operation.tsx, AddressingMode.implied);\n        set(0xca, Operation.dex, AddressingMode.implied);\n        set(0xea, Operation.nop, AddressingMode.implied);\n\n        // instructions for undocumented opcodes\n        set(0x1a, Operation.nop, AddressingMode.implied);\n        set(0x3a, Operation.nop, AddressingMode.implied);\n        set(0x5a, Operation.nop, AddressingMode.implied);\n        set(0x7a, Operation.nop, AddressingMode.implied);\n        set(0xda, Operation.nop, AddressingMode.implied);\n        set(0xfa, Operation.nop, AddressingMode.implied);\n\n        set(0x04, Operation.dop, AddressingMode.zeroPage);\n        set(0x14, Operation.dop, AddressingMode.zeroPageX);\n        set(0x34, Operation.dop, AddressingMode.zeroPageX);\n        set(0x44, Operation.dop, AddressingMode.zeroPage);\n        set(0x54, Operation.dop, AddressingMode.zeroPageX);\n        set(0x64, Operation.dop, AddressingMode.zeroPage);\n        set(0x74, Operation.dop, AddressingMode.zeroPageX);\n        set(0x80, Operation.dop, AddressingMode.immediate);\n        set(0x82, Operation.dop, AddressingMode.immediate);\n        set(0x89, Operation.dop, AddressingMode.immediate);\n        set(0xc2, Operation.dop, AddressingMode.immediate);\n        set(0xd4, Operation.dop, AddressingMode.zeroPageX);\n        set(0xe2, Operation.dop, AddressingMode.immediate);\n        set(0xf4, Operation.dop, AddressingMode.zeroPageX);\n\n        set(0x0c, Operation.top, AddressingMode.absolute);\n        set(0x1c, Operation.top, AddressingMode.absoluteX);\n        set(0x3c, Operation.top, AddressingMode.absoluteX);\n        set(0x5c, Operation.top, AddressingMode.absoluteX);\n        set(0x7c, Operation.top, AddressingMode.absoluteX);\n        set(0xdc, Operation.top, AddressingMode.absoluteX);\n        set(0xfc, Operation.top, AddressingMode.absoluteX);\n\n        set(0xeb, Operation.sbc, AddressingMode.immediate);\n\n        set(0x4b, Operation.alr, AddressingMode.immediate);\n\n        set(0xcb, Operation.axs, AddressingMode.immediate);\n\n        set(0xc7, Operation.dcp, AddressingMode.zeroPage);\n        set(0xd7, Operation.dcp, AddressingMode.zeroPageX);\n        set(0xcf, Operation.dcp, AddressingMode.absolute);\n        set(0xdf, Operation.dcp, AddressingMode.absoluteX);\n        set(0xdb, Operation.dcp, AddressingMode.absoluteY);\n        set(0xc3, Operation.dcp, AddressingMode.indexedIndirectX);\n        set(0xd3, Operation.dcp, AddressingMode.indirectIndexedY);\n\n        set(0xa7, Operation.lax, AddressingMode.zeroPage);\n        set(0xb7, Operation.lax, AddressingMode.zeroPageY);\n        set(0xaf, Operation.lax, AddressingMode.absolute);\n        set(0xbf, Operation.lax, AddressingMode.absoluteY);\n        set(0xa3, Operation.lax, AddressingMode.indexedIndirectX);\n        set(0xb3, Operation.lax, AddressingMode.indirectIndexedY);\n\n        set(0x6b, Operation.arr, AddressingMode.immediate);\n\n        set(0x07, Operation.slo, AddressingMode.zeroPage);\n        set(0x17, Operation.slo, AddressingMode.zeroPageX);\n        set(0x0f, Operation.slo, AddressingMode.absolute);\n        set(0x1f, Operation.slo, AddressingMode.absoluteX);\n        set(0x1b, Operation.slo, AddressingMode.absoluteY);\n        set(0x03, Operation.slo, AddressingMode.indexedIndirectX);\n        set(0x13, Operation.slo, AddressingMode.indirectIndexedY);\n\n        set(0x87, Operation.aax, AddressingMode.zeroPage);\n        set(0x97, Operation.aax, AddressingMode.zeroPageY);\n        set(0x83, Operation.aax, AddressingMode.indexedIndirectX);\n        set(0x8f, Operation.aax, AddressingMode.absolute);\n\n        set(0xbb, Operation.lar, AddressingMode.absoluteY);\n\n        set(0xe7, Operation.isc, AddressingMode.zeroPage);\n        set(0xf7, Operation.isc, AddressingMode.zeroPageX);\n        set(0xef, Operation.isc, AddressingMode.absolute);\n        set(0xff, Operation.isc, AddressingMode.absoluteX);\n        set(0xfb, Operation.isc, AddressingMode.absoluteY);\n        set(0xe3, Operation.isc, AddressingMode.indexedIndirectX);\n        set(0xf3, Operation.isc, AddressingMode.indirectIndexedY);\n\n        set(0x0b, Operation.aac, AddressingMode.immediate);\n        set(0x2b, Operation.aac, AddressingMode.immediate);\n\n        set(0xab, Operation.atx, AddressingMode.immediate);\n\n        set(0x67, Operation.rra, AddressingMode.zeroPage);\n        set(0x77, Operation.rra, AddressingMode.zeroPageX);\n        set(0x6f, Operation.rra, AddressingMode.absolute);\n        set(0x7f, Operation.rra, AddressingMode.absoluteX);\n        set(0x7b, Operation.rra, AddressingMode.absoluteY);\n        set(0x63, Operation.rra, AddressingMode.indexedIndirectX);\n        set(0x73, Operation.rra, AddressingMode.indirectIndexedY);\n\n        set(0x27, Operation.rla, AddressingMode.zeroPage);\n        set(0x37, Operation.rla, AddressingMode.zeroPageX);\n        set(0x2f, Operation.rla, AddressingMode.absolute);\n        set(0x3f, Operation.rla, AddressingMode.absoluteX);\n        set(0x3b, Operation.rla, AddressingMode.absoluteY);\n        set(0x23, Operation.rla, AddressingMode.indexedIndirectX);\n        set(0x33, Operation.rla, AddressingMode.indirectIndexedY);\n    }\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport CpuInterface from './CpuInterface';\nimport StateMachineInterface from './statemachine/StateMachineInterface';\nimport BusInterface from '../bus/BusInterface';\nimport RngInterface from '../../tools/rng/GeneratorInterface';\nimport { boot, irq, nmi } from './statemachine/vector';\nimport Compiler from './statemachine/Compiler';\n\nclass StateMachineCpu implements CpuInterface {\n    constructor(private _bus: BusInterface, private _rng?: RngInterface) {\n        this._opBoot = boot(this.state);\n        this._opIrq = irq(this.state);\n        this._opNmi = nmi(this.state);\n\n        const compiler = new Compiler(this.state);\n        for (let op = 0; op < 256; op++) {\n            this._operations[op] = compiler.compile(op);\n        }\n\n        this.reset();\n    }\n\n    reset(): this {\n        this.state.a = this._rng ? this._rng.int(0xff) : 0;\n        this.state.x = this._rng ? this._rng.int(0xff) : 0;\n        this.state.y = this._rng ? this._rng.int(0xff) : 0;\n        this.state.s = 0xfd;\n        this.state.p = this._rng ? this._rng.int(0xffff) : 0;\n        this.state.flags =\n            (this._rng ? this._rng.int(0xff) : 0) | CpuInterface.Flags.i | CpuInterface.Flags.e | CpuInterface.Flags.b;\n        this.state.irq = false;\n        this.state.nmi = false;\n\n        this.executionState = CpuInterface.ExecutionState.boot;\n        this._interruptPending = false;\n        this._nmiPending = false;\n        this._halt = false;\n        this._lastResult = this._opBoot.reset(undefined);\n        this._lastInstructionPointer = 0;\n\n        return this;\n    }\n\n    setInterrupt(i: boolean): this {\n        this._interruptPending = i;\n\n        return this;\n    }\n\n    isInterrupt(): boolean {\n        return this._interruptPending;\n    }\n\n    nmi(): this {\n        this._nmiPending = true;\n\n        return this;\n    }\n\n    halt(): this {\n        this._halt = true;\n\n        return this;\n    }\n\n    resume(): this {\n        this._halt = false;\n\n        return this;\n    }\n\n    isHalt(): boolean {\n        return this._halt;\n    }\n\n    setInvalidInstructionCallback(callback: CpuInterface.InvalidInstructionCallbackInterface): this {\n        this._invalidInstructionCallback = callback;\n\n        return this;\n    }\n\n    getInvalidInstructionCallback(): CpuInterface.InvalidInstructionCallbackInterface {\n        return this._invalidInstructionCallback;\n    }\n\n    getLastInstructionPointer(): number {\n        return this._lastInstructionPointer;\n    }\n\n    cycle(): this {\n        if (this._halt && (!this._lastResult || this._lastResult.cycleType === StateMachineInterface.CycleType.read)) {\n            return this;\n        }\n\n        if (this.executionState === CpuInterface.ExecutionState.fetch) {\n            this._fetch();\n            return this;\n        }\n\n        let value: number;\n\n        switch (this._lastResult.cycleType) {\n            case StateMachineInterface.CycleType.read:\n                value = this._bus.read(this._lastResult.address);\n                break;\n\n            case StateMachineInterface.CycleType.write:\n                value = this._lastResult.value;\n                this._bus.write(this._lastResult.address, value);\n                break;\n\n            default:\n                throw new Error('invalid cycle type');\n        }\n\n        if (this._lastResult.pollInterrupts) {\n            this._pollInterrupts();\n\n            this._lastResult.pollInterrupts = false;\n            this._pollInterruptsAfterLastInstruction = false;\n        }\n\n        this._lastResult = this._lastResult.nextStep(value);\n        if (this._lastResult === null) {\n            this.executionState = CpuInterface.ExecutionState.fetch;\n        }\n\n        return this;\n    }\n\n    private _fetch(): void {\n        if (this._pollInterruptsAfterLastInstruction) {\n            this._pollInterrupts();\n        }\n\n        this._lastInstructionPointer = this.state.p;\n\n        let operation: StateMachineInterface;\n        const opcode = this._bus.read(this.state.p);\n\n        if (this.state.nmi) {\n            operation = this._opNmi;\n            this._pollInterruptsAfterLastInstruction = false;\n        } else if (this.state.irq) {\n            operation = this._opIrq;\n            this._pollInterruptsAfterLastInstruction = false;\n        } else {\n            operation = this._operations[opcode];\n            this.state.p = (this.state.p + 1) & 0xffff;\n            this._pollInterruptsAfterLastInstruction = true;\n        }\n\n        if (!operation) {\n            if (this._invalidInstructionCallback) {\n                this._invalidInstructionCallback(this);\n            }\n\n            return;\n        }\n\n        this.executionState = CpuInterface.ExecutionState.execute;\n\n        this._lastResult = operation.reset(undefined);\n    }\n\n    private _pollInterrupts(): void {\n        this.state.irq = false;\n\n        if (this._nmiPending) {\n            this.state.nmi = true;\n            this._nmiPending = false;\n\n            return;\n        }\n\n        if (this._interruptPending && !this.state.nmi && !(this.state.flags & CpuInterface.Flags.i)) {\n            this.state.irq = true;\n        }\n    }\n\n    executionState = CpuInterface.ExecutionState.boot;\n    state = new CpuInterface.State();\n\n    private _invalidInstructionCallback: CpuInterface.InvalidInstructionCallbackInterface = null;\n\n    private _lastResult: StateMachineInterface.Result;\n    private _interruptPending = false;\n    private _nmiPending = false;\n    private _halt = false;\n    private _pollInterruptsAfterLastInstruction = false;\n\n    private _lastInstructionPointer = 0;\n\n    private _opBoot: StateMachineInterface;\n    private _opNmi: StateMachineInterface;\n    private _opIrq: StateMachineInterface;\n    private _operations = new Array<StateMachineInterface>(255);\n}\n\nexport default StateMachineCpu;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport CpuInterface from './CpuInterface';\nimport BusInterface from '../bus/BusInterface';\nimport Instruction from './Instruction';\n\nfunction restoreFlagsFromStack(state: CpuInterface.State, bus: BusInterface): void {\n    state.s = (state.s + 0x01) & 0xff;\n    state.flags = (bus.read(0x0100 + state.s) | CpuInterface.Flags.e) & ~CpuInterface.Flags.b;\n}\n\nfunction setFlagsNZ(state: CpuInterface.State, operand: number): void {\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z)) |\n        (operand & 0x80) |\n        (operand ? 0 : CpuInterface.Flags.z);\n}\n\nexport function opAdc(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    if (state.flags & CpuInterface.Flags.d) {\n        const d0 = (operand & 0x0f) + (state.a & 0x0f) + (state.flags & CpuInterface.Flags.c),\n            d1 = (operand >>> 4) + (state.a >>> 4) + (d0 > 9 ? 1 : 0);\n\n        state.a = d0 % 10 | (d1 % 10 << 4);\n\n        state.flags =\n            (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n            (state.a & 0x80) | // negative\n            (state.a ? 0 : CpuInterface.Flags.z) | // zero\n            (d1 > 9 ? CpuInterface.Flags.c : 0); // carry\n    } else {\n        const sum = state.a + operand + (state.flags & CpuInterface.Flags.c),\n            result = sum & 0xff;\n\n        state.flags =\n            (state.flags &\n                ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c | CpuInterface.Flags.v)) |\n            (result & 0x80) | // negative\n            (result ? 0 : CpuInterface.Flags.z) | // zero\n            (sum >>> 8) | // carry\n            ((~(operand ^ state.a) & (result ^ operand) & 0x80) >>> 1); // overflow\n\n        state.a = result;\n    }\n}\n\nexport function opAnd(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a &= operand;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opAslAcc(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = (state.a << 1) & 0xff;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nexport function opAslMem(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = (old << 1) & 0xff;\n    bus.write(operand, value);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (value & 0x80) |\n        (value ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nexport function opBit(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.v | CpuInterface.Flags.z)) |\n        (operand & (CpuInterface.Flags.n | CpuInterface.Flags.v)) |\n        (operand & state.a ? 0 : CpuInterface.Flags.z);\n}\n\nexport function opBrk(state: CpuInterface.State, bus: BusInterface): void {\n    const nextOpAddr = (state.p + 1) & 0xffff;\n    let vector = 0xfffe;\n\n    if (state.nmi) {\n        vector = 0xfffa;\n        state.nmi = false;\n    }\n\n    state.nmi = state.irq = false;\n\n    bus.write(state.s + 0x0100, (nextOpAddr >>> 8) & 0xff);\n    state.s = (state.s + 0xff) & 0xff;\n    bus.write(state.s + 0x0100, nextOpAddr & 0xff);\n    state.s = (state.s + 0xff) & 0xff;\n\n    bus.write(state.s + 0x0100, state.flags | CpuInterface.Flags.b);\n    state.s = (state.s + 0xff) & 0xff;\n\n    state.flags |= CpuInterface.Flags.i;\n\n    state.p = bus.readWord(vector);\n}\n\nexport function opClc(state: CpuInterface.State): void {\n    state.flags &= ~CpuInterface.Flags.c;\n}\n\nexport function opCld(state: CpuInterface.State): void {\n    state.flags &= ~CpuInterface.Flags.d;\n}\n\nexport function opCli(state: CpuInterface.State): void {\n    state.flags &= ~CpuInterface.Flags.i;\n}\n\nexport function opClv(state: CpuInterface.State): void {\n    state.flags &= ~CpuInterface.Flags.v;\n}\n\nexport function opCmp(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const diff = state.a + (~operand & 0xff) + 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        (diff & 0xff ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n}\n\nexport function opCpx(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const diff = state.x + (~operand & 0xff) + 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        (diff & 0xff ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n}\n\nexport function opCpy(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const diff = state.y + (~operand & 0xff) + 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        (diff & 0xff ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n}\n\nexport function opDec(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = (bus.read(operand) + 0xff) & 0xff;\n    bus.write(operand, value);\n    setFlagsNZ(state, value);\n}\n\nexport function opDex(state: CpuInterface.State): void {\n    state.x = (state.x + 0xff) & 0xff;\n    setFlagsNZ(state, state.x);\n}\n\nexport function opEor(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a = state.a ^ operand;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opDey(state: CpuInterface.State): void {\n    state.y = (state.y + 0xff) & 0xff;\n    setFlagsNZ(state, state.y);\n}\n\nexport function opInc(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = (bus.read(operand) + 1) & 0xff;\n    bus.write(operand, value);\n    setFlagsNZ(state, value);\n}\n\nexport function opInx(state: CpuInterface.State): void {\n    state.x = (state.x + 0x01) & 0xff;\n    setFlagsNZ(state, state.x);\n}\n\nexport function opIny(state: CpuInterface.State): void {\n    state.y = (state.y + 0x01) & 0xff;\n    setFlagsNZ(state, state.y);\n}\n\nexport function opJmp(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.p = operand;\n}\n\nexport function opJsr(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const returnPtr = (state.p + 1) & 0xffff,\n        addrLo = bus.read(state.p);\n\n    bus.read(0x0100 + state.s);\n    bus.write(0x0100 + state.s, returnPtr >>> 8);\n    state.s = (state.s + 0xff) & 0xff;\n    bus.write(0x0100 + state.s, returnPtr & 0xff);\n    state.s = (state.s + 0xff) & 0xff;\n\n    state.p = addrLo | (bus.read((state.p + 1) & 0xffff) << 8);\n}\n\nexport function opLda(\n    state: CpuInterface.State,\n    bus: BusInterface,\n    operand: number,\n    addressingMode: Instruction.AddressingMode\n): void {\n    state.a = addressingMode === Instruction.AddressingMode.immediate ? operand : bus.read(operand);\n    setFlagsNZ(state, state.a);\n}\n\nexport function opLdx(\n    state: CpuInterface.State,\n    bus: BusInterface,\n    operand: number,\n    addressingMode: Instruction.AddressingMode\n): void {\n    state.x = addressingMode === Instruction.AddressingMode.immediate ? operand : bus.read(operand);\n    setFlagsNZ(state, state.x);\n}\n\nexport function opLdy(\n    state: CpuInterface.State,\n    bus: BusInterface,\n    operand: number,\n    addressingMode: Instruction.AddressingMode\n): void {\n    state.y = addressingMode === Instruction.AddressingMode.immediate ? operand : bus.read(operand);\n    setFlagsNZ(state, state.y);\n}\n\nexport function opLsrAcc(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = state.a >>> 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nexport function opLsrMem(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = old >>> 1;\n    bus.write(operand, value);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (value & 0x80) |\n        (value ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nexport function opNop(): void {}\n\nexport function opOra(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a |= operand;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opPhp(state: CpuInterface.State, bus: BusInterface): void {\n    bus.write(0x0100 + state.s, state.flags | CpuInterface.Flags.b);\n    state.s = (state.s + 0xff) & 0xff;\n}\n\nexport function opPlp(state: CpuInterface.State, bus: BusInterface): void {\n    restoreFlagsFromStack(state, bus);\n}\n\nexport function opPha(state: CpuInterface.State, bus: BusInterface): void {\n    bus.write(0x0100 + state.s, state.a);\n    state.s = (state.s + 0xff) & 0xff;\n}\n\nexport function opPla(state: CpuInterface.State, bus: BusInterface): void {\n    state.s = (state.s + 0x01) & 0xff;\n    state.a = bus.read(0x0100 + state.s);\n    setFlagsNZ(state, state.a);\n}\n\nexport function opRolAcc(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = ((state.a << 1) & 0xff) | (state.flags & CpuInterface.Flags.c);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nexport function opRolMem(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = ((old << 1) & 0xff) | (state.flags & CpuInterface.Flags.c);\n    bus.write(operand, value);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (value & 0x80) |\n        (value ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nexport function opRorAcc(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = (state.a >>> 1) | ((state.flags & CpuInterface.Flags.c) << 7);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nexport function opRorMem(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = (old >>> 1) | ((state.flags & CpuInterface.Flags.c) << 7);\n    bus.write(operand, value);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (value & 0x80) |\n        (value ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nexport function opRti(state: CpuInterface.State, bus: BusInterface): void {\n    let returnPtr: number;\n\n    restoreFlagsFromStack(state, bus);\n\n    state.s = (state.s + 1) & 0xff;\n    returnPtr = bus.read(0x0100 + state.s);\n    state.s = (state.s + 1) & 0xff;\n    returnPtr |= bus.read(0x0100 + state.s) << 8;\n\n    state.p = returnPtr;\n}\n\nexport function opRts(state: CpuInterface.State, bus: BusInterface): void {\n    let returnPtr: number;\n\n    bus.read(0x0100 + state.s);\n    state.s = (state.s + 1) & 0xff;\n    returnPtr = bus.read(0x0100 + state.s);\n    state.s = (state.s + 1) & 0xff;\n    returnPtr += bus.read(0x0100 + state.s) << 8;\n\n    state.p = (returnPtr + 1) & 0xffff;\n}\n\nexport function opSbc(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    if (state.flags & CpuInterface.Flags.d) {\n        const d0 = (state.a & 0x0f) - (operand & 0x0f) - (~state.flags & CpuInterface.Flags.c),\n            d1 = (state.a >>> 4) - (operand >>> 4) - (d0 < 0 ? 1 : 0);\n\n        state.a = (d0 < 0 ? 10 + d0 : d0) | ((d1 < 0 ? 10 + d1 : d1) << 4);\n\n        state.flags =\n            (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n            (state.a & 0x80) | // negative\n            (state.a ? 0 : CpuInterface.Flags.z) | // zero\n            (d1 < 0 ? 0 : CpuInterface.Flags.c); // carry / borrow\n    } else {\n        operand = ~operand & 0xff;\n\n        const sum = state.a + operand + (state.flags & CpuInterface.Flags.c),\n            result = sum & 0xff;\n\n        state.flags =\n            (state.flags &\n                ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c | CpuInterface.Flags.v)) |\n            (result & 0x80) | // negative\n            (result ? 0 : CpuInterface.Flags.z) | // zero\n            (sum >>> 8) | // carry / borrow\n            ((~(operand ^ state.a) & (result ^ operand) & 0x80) >>> 1); // overflow\n\n        state.a = result;\n    }\n}\n\nexport function opSec(state: CpuInterface.State): void {\n    state.flags |= CpuInterface.Flags.c;\n}\n\nexport function opSed(state: CpuInterface.State): void {\n    state.flags |= CpuInterface.Flags.d;\n}\n\nexport function opSei(state: CpuInterface.State): void {\n    state.flags |= CpuInterface.Flags.i;\n}\n\nexport function opSta(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    bus.write(operand, state.a);\n}\n\nexport function opStx(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    bus.write(operand, state.x);\n}\n\nexport function opSty(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    bus.write(operand, state.y);\n}\n\nexport function opTax(state: CpuInterface.State): void {\n    state.x = state.a;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opTay(state: CpuInterface.State): void {\n    state.y = state.a;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opTsx(state: CpuInterface.State): void {\n    state.x = state.s;\n    setFlagsNZ(state, state.x);\n}\n\nexport function opTxa(state: CpuInterface.State): void {\n    state.a = state.x;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opTxs(state: CpuInterface.State): void {\n    state.s = state.x;\n}\n\nexport function opTya(state: CpuInterface.State): void {\n    state.a = state.y;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opAlr(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const i = state.a & operand;\n    state.a = i >>> 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (i & CpuInterface.Flags.c);\n}\n\nexport function opAxs(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = (state.a & state.x) + (~operand & 0xff) + 1;\n\n    state.x = value & 0xff;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.x & 0x80) |\n        (state.x & 0xff ? 0 : CpuInterface.Flags.z) |\n        (value >>> 8);\n}\n\nexport function opDcp(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = (bus.read(operand) + 0xff) & 0xff;\n    bus.write(operand, value);\n\n    const diff = state.a + (~value & 0xff) + 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        (diff & 0xff ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n}\n\nexport function opLax(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a = operand;\n    state.x = operand;\n    setFlagsNZ(state, operand);\n}\n\nexport function opArr(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a = ((state.a & operand) >>> 1) | (state.flags & CpuInterface.Flags.c ? 0x80 : 0);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.c | CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.v)) |\n        ((state.a & 0x40) >>> 6) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (state.a & 0x80) |\n        ((state.a & 0x40) ^ ((state.a & 0x20) << 1));\n}\n\nexport function opSlo(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    let value = bus.read(operand);\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | (value >>> 7);\n    value = (value << 1) & 0xff;\n\n    bus.write(operand, value);\n\n    state.a = state.a | value;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opAax(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = state.x & state.a;\n    bus.write(operand, value);\n    setFlagsNZ(state, value);\n}\n\nexport function opLar(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.s = state.a = state.x = state.s & operand;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opIsc(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = (bus.read(operand) + 1) & 0xff;\n    bus.write(operand, value);\n\n    opSbc(state, bus, value);\n}\n\nexport function opAac(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a &= operand;\n    setFlagsNZ(state, state.a);\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | ((state.a & 0x80) >>> 7);\n}\n\nexport function opAtx(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a &= operand;\n    state.x = state.a;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opRra(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = (old >>> 1) | ((state.flags & CpuInterface.Flags.c) << 7);\n    bus.write(operand, value);\n\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | (old & CpuInterface.Flags.c);\n\n    opAdc(state, bus, value);\n}\n\nexport function opRla(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = ((old << 1) & 0xff) | (state.flags & CpuInterface.Flags.c);\n    bus.write(operand, value);\n\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | (old >>> 7);\n\n    opAnd(state, bus, value);\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport CpuInterface from '../CpuInterface';\nimport StateMachineInterface from './StateMachineInterface';\nimport Instruction from '../Instruction';\nimport {\n    immediate,\n    dereference,\n    zeroPage,\n    absolute,\n    zeroPageX,\n    zeroPageY,\n    absoluteX,\n    absoluteY,\n    indexedIndirectX,\n    indirectIndexedY\n} from './addressing';\nimport { nullaryOneCycle, readModifyWrite, jsr, push, pull, rti, rts, write, branch } from './instruction';\nimport * as ops from './ops';\nimport { indirect } from './addressing/indirect';\nimport NextStep from './addressing/NextStep';\nimport { brk } from './vector';\n\nclass Compiler {\n    constructor(private readonly _state: CpuInterface.State) {}\n\n    compile(op: number): StateMachineInterface | null {\n        const instruction = Instruction.opcodes[op];\n\n        switch (instruction.operation) {\n            case Instruction.Operation.adc:\n                return this._createAddressing(instruction.addressingMode, ops.adc, {\n                    deref: true\n                });\n\n            case Instruction.Operation.and:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => ops.genUnary(o, s, (operand, state) => (state.a = state.a & operand)),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.asl:\n                return instruction.addressingMode === Instruction.AddressingMode.implied\n                    ? nullaryOneCycle(this._state, ops.aslImmediate)\n                    : this._createAddressing(\n                          instruction.addressingMode,\n                          readModifyWrite(this._state, ops.aslRmw).reset,\n                          { writeOp: true }\n                      );\n\n            case Instruction.Operation.bit:\n                return this._createAddressing(instruction.addressingMode, ops.bit, {\n                    deref: true\n                });\n\n            case Instruction.Operation.brk:\n                return brk(this._state);\n\n            case Instruction.Operation.cmp:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => (ops.cmp(o, s, state => state.a), null),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.cpx:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => (ops.cmp(o, s, state => state.x), null),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.cpy:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => (ops.cmp(o, s, state => state.y), null),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.dec:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    readModifyWrite(this._state, (s, o) => ops.genRmw(s, o, x => (x - 1) & 0xff)).reset,\n                    {\n                        writeOp: true\n                    }\n                );\n\n            case Instruction.Operation.dex:\n                return nullaryOneCycle(this._state, s => ops.genNullary(s, state => (state.x = (state.x - 1) & 0xff)));\n\n            case Instruction.Operation.dey:\n                return nullaryOneCycle(this._state, s => ops.genNullary(s, state => (state.y = (state.y - 1) & 0xff)));\n\n            case Instruction.Operation.inc:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    readModifyWrite(this._state, (s, o) => ops.genRmw(s, o, x => (x + 1) & 0xff)).reset,\n                    {\n                        writeOp: true\n                    }\n                );\n\n            case Instruction.Operation.inx:\n                return nullaryOneCycle(this._state, s => ops.genNullary(s, state => (state.x = (state.x + 1) & 0xff)));\n\n            case Instruction.Operation.iny:\n                return nullaryOneCycle(this._state, s => ops.genNullary(s, state => (state.y = (state.y + 1) & 0xff)));\n\n            case Instruction.Operation.eor:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => ops.genUnary(o, s, (operand, state) => (state.a = state.a ^ operand)),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.jmp:\n                return this._createAddressing(instruction.addressingMode, (o, s) => ((s.p = o), null));\n\n            case Instruction.Operation.jsr:\n                return jsr(this._state);\n\n            case Instruction.Operation.lda:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => ops.genUnary(o, s, (operand, state) => (state.a = operand)),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.ldx:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => ops.genUnary(o, s, (operand, state) => (state.x = operand)),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.ldy:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => ops.genUnary(o, s, (operand, state) => (state.y = operand)),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.lsr:\n                return instruction.addressingMode === Instruction.AddressingMode.implied\n                    ? nullaryOneCycle(this._state, ops.lsrImmediate)\n                    : this._createAddressing(\n                          instruction.addressingMode,\n                          readModifyWrite(this._state, ops.lsrRmw).reset,\n                          { writeOp: true }\n                      );\n\n            case Instruction.Operation.nop:\n                return nullaryOneCycle(this._state, () => undefined);\n\n            case Instruction.Operation.ora:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => ops.genUnary(o, s, (operand, state) => (state.a |= operand)),\n                    { deref: true }\n                );\n\n            case Instruction.Operation.pha:\n                return push(this._state, s => s.a);\n\n            case Instruction.Operation.php:\n                return push(this._state, s => s.flags | CpuInterface.Flags.b);\n\n            case Instruction.Operation.pla:\n                return pull(this._state, (s, o) => ops.genNullary(s, state => (state.a = o)));\n\n            case Instruction.Operation.plp:\n                return pull(this._state, (s, o) => (s.flags = (o | CpuInterface.Flags.e) & ~CpuInterface.Flags.b));\n\n            case Instruction.Operation.rol:\n                return instruction.addressingMode === Instruction.AddressingMode.implied\n                    ? nullaryOneCycle(this._state, ops.rolImmediate)\n                    : this._createAddressing(\n                          instruction.addressingMode,\n                          readModifyWrite(this._state, ops.rolRmw).reset,\n                          { writeOp: true }\n                      );\n\n            case Instruction.Operation.ror:\n                return instruction.addressingMode === Instruction.AddressingMode.implied\n                    ? nullaryOneCycle(this._state, ops.rorImmediate)\n                    : this._createAddressing(\n                          instruction.addressingMode,\n                          readModifyWrite(this._state, ops.rorRmw).reset,\n                          { writeOp: true }\n                      );\n\n            case Instruction.Operation.rti:\n                return rti(this._state);\n\n            case Instruction.Operation.rts:\n                return rts(this._state);\n\n            case Instruction.Operation.sbc:\n                return this._createAddressing(instruction.addressingMode, ops.sbc, {\n                    deref: true\n                });\n\n            case Instruction.Operation.stx:\n                return this._createAddressing(instruction.addressingMode, write(this._state, s => s.x).reset, {\n                    writeOp: true\n                });\n\n            case Instruction.Operation.sty:\n                return this._createAddressing(instruction.addressingMode, write(this._state, s => s.y).reset, {\n                    writeOp: true\n                });\n\n            case Instruction.Operation.tax:\n                return nullaryOneCycle(this._state, s => ops.genNullary(s, state => (state.x = state.a)));\n\n            case Instruction.Operation.tay:\n                return nullaryOneCycle(this._state, s => ops.genNullary(s, state => (state.y = state.a)));\n\n            case Instruction.Operation.tsx:\n                return nullaryOneCycle(this._state, s => ops.genNullary(s, state => (state.x = state.s)));\n\n            case Instruction.Operation.txa:\n                return nullaryOneCycle(this._state, s => ops.genNullary(s, state => (state.a = state.x)));\n\n            case Instruction.Operation.txs:\n                return nullaryOneCycle(this._state, s => (s.s = s.x));\n\n            case Instruction.Operation.tya:\n                return nullaryOneCycle(this._state, s => ops.genNullary(s, state => (state.a = state.y)));\n\n            // Bramches\n\n            case Instruction.Operation.bcc:\n                return branch(this._state, flags => (flags & CpuInterface.Flags.c) === 0);\n\n            case Instruction.Operation.bcs:\n                return branch(this._state, flags => (flags & CpuInterface.Flags.c) > 0);\n\n            case Instruction.Operation.bne:\n                return branch(this._state, flags => (flags & CpuInterface.Flags.z) === 0);\n\n            case Instruction.Operation.beq:\n                return branch(this._state, flags => (flags & CpuInterface.Flags.z) > 0);\n\n            case Instruction.Operation.bpl:\n                return branch(this._state, flags => (flags & CpuInterface.Flags.n) === 0);\n\n            case Instruction.Operation.bmi:\n                return branch(this._state, flags => (flags & CpuInterface.Flags.n) > 0);\n\n            case Instruction.Operation.bvc:\n                return branch(this._state, flags => (flags & CpuInterface.Flags.v) === 0);\n\n            case Instruction.Operation.bvs:\n                return branch(this._state, flags => (flags & CpuInterface.Flags.v) > 0);\n\n            // Flags\n\n            case Instruction.Operation.sec:\n                return nullaryOneCycle(this._state, s => (s.flags |= CpuInterface.Flags.c));\n\n            case Instruction.Operation.sed:\n                return nullaryOneCycle(this._state, s => (s.flags |= CpuInterface.Flags.d));\n\n            case Instruction.Operation.sei:\n                return nullaryOneCycle(this._state, s => (s.flags |= CpuInterface.Flags.i));\n\n            case Instruction.Operation.sta:\n                return this._createAddressing(instruction.addressingMode, write(this._state, s => s.a).reset, {\n                    writeOp: true\n                });\n\n            case Instruction.Operation.clc:\n                return nullaryOneCycle(this._state, s => (s.flags &= ~CpuInterface.Flags.c));\n\n            case Instruction.Operation.cld:\n                return nullaryOneCycle(this._state, s => (s.flags &= ~CpuInterface.Flags.d));\n\n            case Instruction.Operation.cli:\n                return nullaryOneCycle(this._state, s => (s.flags &= ~CpuInterface.Flags.i));\n\n            case Instruction.Operation.clv:\n                return nullaryOneCycle(this._state, s => (s.flags &= ~CpuInterface.Flags.v));\n\n            // Undocumented opcodes\n\n            case Instruction.Operation.dop:\n            case Instruction.Operation.top:\n                return this._createAddressing(instruction.addressingMode, () => null, { deref: true });\n\n            case Instruction.Operation.aac:\n                return this._createAddressing(instruction.addressingMode, ops.aac);\n\n            case Instruction.Operation.aax:\n                return this._createAddressing(instruction.addressingMode, write(this._state, ops.aax).reset, {\n                    writeOp: true\n                });\n\n            case Instruction.Operation.alr:\n                return this._createAddressing(instruction.addressingMode, ops.alr, {\n                    deref: true\n                });\n\n            case Instruction.Operation.arr:\n                return this._createAddressing(instruction.addressingMode, (o, s) => (ops.arr(o, s), null), {\n                    deref: true\n                });\n\n            case Instruction.Operation.axs:\n                return this._createAddressing(instruction.addressingMode, ops.axs, {\n                    deref: true\n                });\n\n            case Instruction.Operation.atx:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => ops.genUnary(o, s, (operand, state) => (state.x = state.a = state.a & operand)),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.dcp:\n                return this._createAddressing(instruction.addressingMode, readModifyWrite(this._state, ops.dcp).reset, {\n                    writeOp: true\n                });\n\n            case Instruction.Operation.isc:\n                return this._createAddressing(instruction.addressingMode, readModifyWrite(this._state, ops.isc).reset, {\n                    writeOp: true\n                });\n\n            case Instruction.Operation.lax:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => ops.genUnary(o, s, (operand, state) => (state.a = state.x = operand)),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.lar:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => ops.genUnary(o, s, (operand, state) => (state.s = state.x = state.a = state.s & operand)),\n                    { deref: true }\n                );\n\n            case Instruction.Operation.rla:\n                return this._createAddressing(instruction.addressingMode, readModifyWrite(this._state, ops.rla).reset, {\n                    writeOp: true\n                });\n\n            case Instruction.Operation.rra:\n                return this._createAddressing(instruction.addressingMode, readModifyWrite(this._state, ops.rra).reset, {\n                    writeOp: true\n                });\n\n            case Instruction.Operation.slo:\n                return this._createAddressing(instruction.addressingMode, readModifyWrite(this._state, ops.slo).reset, {\n                    writeOp: true\n                });\n\n            default:\n                return null;\n        }\n    }\n\n    private _createAddressing(\n        addressingMode: Instruction.AddressingMode,\n        next: NextStep,\n        { deref = false, writeOp = false } = {}\n    ): StateMachineInterface {\n        if (deref && addressingMode !== Instruction.AddressingMode.immediate) {\n            next = dereference(this._state, next).reset;\n        }\n\n        switch (addressingMode) {\n            case Instruction.AddressingMode.immediate:\n                return immediate(this._state, next);\n\n            case Instruction.AddressingMode.zeroPage:\n                return zeroPage(this._state, next);\n\n            case Instruction.AddressingMode.absolute:\n                return absolute(this._state, next);\n\n            case Instruction.AddressingMode.zeroPageX:\n                return zeroPageX(this._state, next);\n\n            case Instruction.AddressingMode.zeroPageY:\n                return zeroPageY(this._state, next);\n\n            case Instruction.AddressingMode.absoluteX:\n                return absoluteX(this._state, next, writeOp);\n\n            case Instruction.AddressingMode.absoluteY:\n                return absoluteY(this._state, next, writeOp);\n\n            case Instruction.AddressingMode.indexedIndirectX:\n                return indexedIndirectX(this._state, next);\n\n            case Instruction.AddressingMode.indirectIndexedY:\n                return indirectIndexedY(this._state, next, writeOp);\n\n            case Instruction.AddressingMode.indirect:\n                return indirect(this._state, next);\n\n            default:\n                throw new Error(`invalid addressing mode ${addressingMode}`);\n        }\n    }\n}\n\nexport default Compiler;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport StateMachineInterface from './StateMachineInterface';\n\nclass ResultImpl implements StateMachineInterface.Result {\n    constructor() {}\n\n    read(nextStep: StateMachineInterface.Step, address: number): this {\n        this.cycleType = StateMachineInterface.CycleType.read;\n        this.address = address;\n        this.nextStep = nextStep;\n\n        return this;\n    }\n\n    write(nextStep: StateMachineInterface.Step, address: number, value: number): this {\n        this.cycleType = StateMachineInterface.CycleType.write;\n        this.address = address;\n        this.value = value;\n        this.nextStep = nextStep;\n\n        return this;\n    }\n\n    poll(poll: boolean): this {\n        this.pollInterrupts = poll;\n\n        return this;\n    }\n\n    cycleType = StateMachineInterface.CycleType.read;\n    address = 0;\n    value = 0;\n    pollInterrupts = false;\n    nextStep: StateMachineInterface.Step = null;\n}\n\nexport default ResultImpl;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport StateMachineInterface from '../StateMachineInterface';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport NextStep from './NextStep';\n\nclass Absolute implements StateMachineInterface {\n    constructor(state: CpuInterface.State, next: NextStep = () => null) {\n        this._state = state;\n        this._next = next;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._fetchLo, this._state.p);\n\n    @Immutable\n    private _fetchLo = (value: number): StateMachineInterface.Result => {\n        this._operand = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._result.read(this._fetchHi, this._state.p);\n    };\n\n    @Immutable\n    private _fetchHi = (value: number): StateMachineInterface.Result | null => {\n        this._operand |= value << 8;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._next(this._operand, this._state);\n    };\n\n    private _operand = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _next: NextStep;\n}\n\nexport const absolute = (state: CpuInterface.State, next: NextStep) => new Absolute(state, next);\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport StateMachineInterface from '../StateMachineInterface';\n\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport NextStep from './NextStep';\n\nclass AbsoluteIndexed implements StateMachineInterface {\n    private constructor(\n        state: CpuInterface.State,\n        indexExtractor: AbsoluteIndexed.IndexExtractor,\n        next: NextStep = () => null,\n        writeOp = false\n    ) {\n        this._state = state;\n        this._indexExtractor = indexExtractor;\n        this._next = next;\n        this._writeOp = writeOp;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable\n    static absoluteX(state: CpuInterface.State, next: NextStep, writeOp: boolean): AbsoluteIndexed {\n        return new AbsoluteIndexed(state, s => s.x, next, writeOp);\n    }\n\n    @Immutable\n    static absoluteY(state: CpuInterface.State, next: NextStep, writeOp: boolean): AbsoluteIndexed {\n        return new AbsoluteIndexed(state, s => s.y, next, writeOp);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._fetchLo, this._state.p);\n\n    @Immutable\n    private _fetchLo = (value: number): StateMachineInterface.Result => {\n        this._operand = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._result.read(this._fetchHi, this._state.p);\n    };\n\n    @Immutable\n    private _fetchHi = (value: number): StateMachineInterface.Result | null => {\n        this._operand |= value << 8;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        const index = this._indexExtractor(this._state);\n        this._carry = (this._operand & 0xff) + index > 0xff;\n        this._operand = (this._operand & 0xff00) | ((this._operand + index) & 0xff);\n\n        return this._carry || this._writeOp\n            ? this._result.read(this._dereferenceAndCarry, this._operand)\n            : this._next(this._operand, this._state);\n    };\n\n    @Immutable\n    private _dereferenceAndCarry = (value: number): StateMachineInterface.Result | null => {\n        if (this._carry) {\n            this._operand = (this._operand + 0x0100) & 0xffff;\n        }\n\n        return this._next(this._operand, this._state);\n    };\n\n    private _operand = 0;\n    private _carry = false;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _indexExtractor: AbsoluteIndexed.IndexExtractor;\n    @Immutable private readonly _next: NextStep;\n    @Immutable private readonly _writeOp: boolean;\n}\n\nnamespace AbsoluteIndexed {\n    export interface IndexExtractor {\n        (s: CpuInterface.State): number;\n    }\n}\n\nexport const absoluteX = (state: CpuInterface.State, next: NextStep, writeOp: boolean) =>\n    AbsoluteIndexed.absoluteX(state, next, writeOp);\n\nexport const absoluteY = (state: CpuInterface.State, next: NextStep, writeOp: boolean) =>\n    AbsoluteIndexed.absoluteY(state, next, writeOp);\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport NextStep from './NextStep';\nimport CpuInterface from '../../CpuInterface';\n\nclass Dereference implements StateMachineInterface<number> {\n    constructor(state: CpuInterface.State, next: NextStep = () => null) {\n        this._next = next;\n        this._state = state;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (operand: number): StateMachineInterface.Result => this._result.read(this._dereference, operand);\n\n    @Immutable\n    private _dereference = (value: number): StateMachineInterface.Result | null => this._next(value, this._state);\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _next: NextStep;\n}\n\nexport const dereference = (state: CpuInterface.State, next: NextStep) => new Dereference(state, next);\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport CpuInterface from '../../CpuInterface';\nimport StateMachineInterface from '../StateMachineInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport NextStep from './NextStep';\n\nclass Immediate implements StateMachineInterface {\n    constructor(state: CpuInterface.State, next: NextStep = () => null) {\n        this._state = state;\n        this._next = next;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._fetchOperand, this._state.p);\n\n    @Immutable\n    private _fetchOperand = (value: number): StateMachineInterface.Result | null => {\n        this._operand = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._next(this._operand, this._state);\n    };\n\n    private _operand = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _next: NextStep;\n}\n\nexport const immediate = (state: CpuInterface.State, next: NextStep) => new Immediate(state, next);\n",
    "export { absolute } from './absolute';\nexport { absoluteX, absoluteY } from './absoluteIndexed';\nexport { dereference } from './dereference';\nexport { immediate } from './immediate';\nexport { indexedIndirectX } from './indexedIndirectX';\nexport { indirectIndexedY } from './indirectIndexedY';\nexport { zeroPage } from './zeroPage';\nexport { zeroPageX, zeroPageY } from './zeroPageIndexed';\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport StateMachineInterface from '../StateMachineInterface';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport NextStep from './NextStep';\n\nclass IndexedIndirectX implements StateMachineInterface {\n    constructor(state: CpuInterface.State, next: NextStep = () => null) {\n        this._state = state;\n        this._next = next;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._fetchAddress, this._state.p);\n\n    @Immutable\n    private _fetchAddress = (value: number): StateMachineInterface.Result => {\n        this._address = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._result.read(this._addIndex, this._address);\n    };\n\n    @Immutable\n    private _addIndex = (value: number): StateMachineInterface.Result => {\n        this._address = (this._address + this._state.x) & 0xff;\n\n        return this._result.read(this._fetchLo, this._address);\n    };\n\n    @Immutable\n    private _fetchLo = (value: number): StateMachineInterface.Result => {\n        this._operand = value;\n        this._address = (this._address + 1) & 0xff;\n\n        return this._result.read(this._fetchHi, this._address);\n    };\n\n    @Immutable\n    private _fetchHi = (value: number): StateMachineInterface.Result | null => {\n        this._operand |= value << 8;\n\n        return this._next(this._operand, this._state);\n    };\n\n    private _operand = 0;\n    private _address = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _next: NextStep;\n}\n\nexport const indexedIndirectX = (state: CpuInterface.State, next: NextStep) => new IndexedIndirectX(state, next);\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport StateMachineInterface from '../StateMachineInterface';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport NextStep from './NextStep';\n\nclass Indirect implements StateMachineInterface {\n    constructor(state: CpuInterface.State, next: NextStep = () => null) {\n        this._state = state;\n        this._next = next;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._fetchAddressLo, this._state.p);\n\n    @Immutable\n    private _fetchAddressLo = (value: number): StateMachineInterface.Result => {\n        this._address = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._result.read(this._fetchAddressHi, this._state.p);\n    };\n\n    @Immutable\n    private _fetchAddressHi = (value: number): StateMachineInterface.Result => {\n        this._address |= value << 8;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._result.read(this._fetchLo, this._address);\n    };\n\n    @Immutable\n    private _fetchLo = (value: number): StateMachineInterface.Result => {\n        this._operand = value;\n\n        if ((this._address & 0xff) === 0xff) {\n            this._address &= 0xff00;\n        } else {\n            this._address = (this._address + 1) & 0xffff;\n        }\n\n        return this._result.read(this._fetchHi, this._address);\n    };\n\n    @Immutable\n    private _fetchHi = (value: number): StateMachineInterface.Result | null => {\n        this._operand |= value << 8;\n\n        return this._next(this._operand, this._state);\n    };\n\n    private _operand = 0;\n    private _address = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _next: NextStep;\n}\n\nexport const indirect = (state: CpuInterface.State, next: NextStep) => new Indirect(state, next);\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport StateMachineInterface from '../StateMachineInterface';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport NextStep from './NextStep';\n\nclass IndexedIndirectY implements StateMachineInterface {\n    constructor(state: CpuInterface.State, next: NextStep = () => null, writeOp: boolean) {\n        this._state = state;\n        this._next = next;\n        this._writeOp = writeOp;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._fetchAddress, this._state.p);\n\n    @Immutable\n    private _fetchAddress = (value: number): StateMachineInterface.Result => {\n        this._address = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._result.read(this._fetchLo, this._address);\n    };\n\n    @Immutable\n    private _fetchLo = (value: number): StateMachineInterface.Result => {\n        this._operand = value;\n        this._address = (this._address + 1) & 0xff;\n\n        return this._result.read(this._fetchHi, this._address);\n    };\n\n    @Immutable\n    private _fetchHi = (value: number): StateMachineInterface.Result | null => {\n        this._operand |= value << 8;\n\n        this._carry = (this._operand & 0xff) + this._state.y > 0xff;\n        this._operand = (this._operand & 0xff00) | ((this._operand + this._state.y) & 0xff);\n\n        return this._carry || this._writeOp\n            ? this._result.read(this._dereferenceAndCarry, this._operand)\n            : this._next(this._operand, this._state);\n    };\n\n    @Immutable\n    private _dereferenceAndCarry = (value: number): StateMachineInterface.Result | null => {\n        if (this._carry) {\n            this._operand = (this._operand + 0x0100) & 0xffff;\n        }\n\n        return this._next(this._operand, this._state);\n    };\n\n    private _operand = 0;\n    private _address = 0;\n    private _carry = false;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _next: NextStep;\n    @Immutable private readonly _writeOp: boolean;\n}\n\nexport const indirectIndexedY = (state: CpuInterface.State, next: NextStep, writeOp: boolean) =>\n    new IndexedIndirectY(state, next, writeOp);\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport StateMachineInterface from '../StateMachineInterface';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport NextStep from './NextStep';\n\nclass ZeroPage implements StateMachineInterface {\n    constructor(state: CpuInterface.State, next: NextStep = () => null) {\n        this._state = state;\n        this._next = next;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._fetchAddress, this._state.p);\n\n    @Immutable\n    private _fetchAddress = (value: number): StateMachineInterface.Result | null => {\n        this._operand = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._next(this._operand, this._state);\n    };\n\n    private _operand = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _next: NextStep;\n}\n\nexport const zeroPage = (state: CpuInterface.State, next: NextStep) => new ZeroPage(state, next);\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport StateMachineInterface from '../StateMachineInterface';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport NextStep from './NextStep';\n\nclass ZeroPageIndexed implements StateMachineInterface {\n    private constructor(state: CpuInterface.State, indexExtractor: ZeroPageIndexed.IndexExtractor, next: NextStep) {\n        this._state = state;\n        this._indexExtractor = indexExtractor;\n        this._next = next;\n\n        freezeImmutables(this);\n    }\n\n    static zeroPageX(state: CpuInterface.State, next: NextStep = () => null): ZeroPageIndexed {\n        return new ZeroPageIndexed(state, s => s.x, next);\n    }\n\n    static zeroPageY(state: CpuInterface.State, next: NextStep = () => null): ZeroPageIndexed {\n        return new ZeroPageIndexed(state, s => s.y, next);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._fetchAddress, this._state.p);\n\n    @Immutable\n    private _fetchAddress = (value: number): StateMachineInterface.Result => {\n        this._operand = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._result.read(this._addIndex, this._operand);\n    };\n\n    @Immutable\n    private _addIndex = (value: number): StateMachineInterface.Result | null => {\n        this._operand = (this._operand + this._indexExtractor(this._state)) & 0xff;\n\n        return this._next(this._operand, this._state);\n    };\n\n    private _operand = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _next: NextStep;\n    @Immutable private readonly _indexExtractor: ZeroPageIndexed.IndexExtractor;\n}\n\nnamespace ZeroPageIndexed {\n    export interface IndexExtractor {\n        (s: CpuInterface.State): number;\n    }\n}\n\nexport const zeroPageX = (state: CpuInterface.State, next: NextStep) => ZeroPageIndexed.zeroPageX(state, next);\n\nexport const zeroPageY = (state: CpuInterface.State, next: NextStep) => ZeroPageIndexed.zeroPageY(state, next);\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\n\nclass Branch implements StateMachineInterface {\n    constructor(state: CpuInterface.State, predicate: Branch.Predicate) {\n        this._state = state;\n        this._predicate = predicate;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable\n    reset = (): StateMachineInterface.Result => this._result.read(this._fetchTarget, this._state.p).poll(true);\n\n    @Immutable\n    private _fetchTarget = (value: number): StateMachineInterface.Result | null => {\n        this._operand = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._predicate(this._state.flags) ? this._result.read(this._firstDummyRead, this._state.p) : null;\n    };\n\n    @Immutable\n    private _firstDummyRead = (value: number): StateMachineInterface.Result | null => {\n        this._target = (this._state.p + (this._operand & 0x80 ? this._operand - 256 : this._operand)) & 0xffff;\n\n        if ((this._target & 0xff00) === (this._state.p & 0xff00)) {\n            this._state.p = this._target;\n            return null;\n        }\n\n        return this._result.read(this._secondDummyRead, (this._state.p & 0xff00) | (this._target & 0x00ff)).poll(true);\n    };\n\n    @Immutable\n    private _secondDummyRead = (value: number): null => {\n        this._state.p = this._target;\n        return null;\n    };\n\n    private _target = 0;\n    private _operand = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _predicate: Branch.Predicate;\n}\n\nnamespace Branch {\n    export interface Predicate {\n        (flags: number): boolean;\n    }\n}\n\nexport const branch = (state: CpuInterface.State, predicate: Branch.Predicate) => new Branch(state, predicate);\n",
    "export { branch } from './branch';\nexport { jsr } from './jsr';\nexport { readModifyWrite } from './readModifyWrite';\nexport { rts } from './rts';\nexport { nullaryOneCycle } from './nullaryOneCycle';\nexport { pull } from './pull';\nexport { push } from './push';\nexport { rti } from './rti';\nexport { write } from './write';\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\n\nclass Jsr implements StateMachineInterface {\n    constructor(state: CpuInterface.State) {\n        this._state = state;\n\n        freezeImmutables(this);\n    }\n\n    reset = (): StateMachineInterface.Result => this._result.read(this._fetchPcl, this._state.p);\n\n    @Immutable\n    private _fetchPcl = (value: number): StateMachineInterface.Result => {\n        this._addressLo = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._result.read(this._dummyStackRead, 0x0100 + this._state.s);\n    };\n\n    @Immutable\n    private _dummyStackRead = (): StateMachineInterface.Result =>\n        this._result.write(this._pushPch, 0x0100 + this._state.s, this._state.p >>> 8);\n\n    @Immutable\n    private _pushPch = (): StateMachineInterface.Result => {\n        this._state.s = (this._state.s - 1) & 0xff;\n\n        return this._result.write(this._pushPcl, 0x0100 + this._state.s, this._state.p & 0xff);\n    };\n\n    @Immutable\n    private _pushPcl = (): StateMachineInterface.Result => {\n        this._state.s = (this._state.s - 1) & 0xff;\n\n        return this._result.read(this._fetchPch, this._state.p);\n    };\n\n    @Immutable\n    private _fetchPch = (value: number): null => {\n        this._state.p = this._addressLo | (value << 8);\n\n        return null;\n    };\n\n    private _addressLo = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n}\n\nexport const jsr = (state: CpuInterface.State) => new Jsr(state);\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\n\nclass NullaryOneCycle implements StateMachineInterface<number> {\n    constructor(state: CpuInterface.State, operation: UnaryOneCycle.Operation) {\n        this._state = state;\n        this._operation = operation;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = () => this._result.read(this._executeOperation, this._state.p).poll(true);\n\n    @Immutable\n    private _executeOperation = (): null => {\n        this._operation(this._state);\n\n        return null;\n    };\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _operation: UnaryOneCycle.Operation;\n}\n\nnamespace UnaryOneCycle {\n    export interface Operation {\n        (s: CpuInterface.State): void;\n    }\n}\n\nexport const nullaryOneCycle = (state: CpuInterface.State, operation: UnaryOneCycle.Operation) =>\n    new NullaryOneCycle(state, operation);\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport StateMachineInterface from '../StateMachineInterface';\nimport ResultImpl from '../ResultImpl';\nimport CpuInterface from '../../CpuInterface';\n\nclass Pull implements StateMachineInterface {\n    constructor(state: CpuInterface.State, operation: Pull.Operation) {\n        this._state = state;\n        this._operation = operation;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._dummyRead, this._state.p).poll(true);\n\n    @Immutable\n    private _dummyRead = (): StateMachineInterface.Result =>\n        this._result.read(this._incrementS, 0x0100 + this._state.s);\n\n    @Immutable\n    private _incrementS = (): StateMachineInterface.Result => {\n        this._state.s = (this._state.s + 1) & 0xff;\n\n        return this._result.read(this._pull, 0x0100 + this._state.s);\n    };\n\n    @Immutable private _pull = (value: number): null => (this._operation(this._state, value), null);\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _operation: Pull.Operation;\n}\n\nnamespace Pull {\n    export interface Operation {\n        (state: CpuInterface.State, ooperand: number): void;\n    }\n}\n\nexport const pull = (state: CpuInterface.State, operation: Pull.Operation) => new Pull(state, operation);\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport CpuInterface from '../../CpuInterface';\nimport StateMachineInterface from '../StateMachineInterface';\nimport ResultImpl from '../ResultImpl';\n\nclass Push implements StateMachineInterface {\n    constructor(state: CpuInterface.State, operation: Push.Operation) {\n        this._state = state;\n        this._operation = operation;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._dummyRead, this._state.p);\n\n    @Immutable\n    private _dummyRead = (): StateMachineInterface.Result =>\n        this._result.write(this._push, 0x0100 + this._state.s, this._operation(this._state));\n\n    @Immutable\n    private _push = (): null => {\n        this._state.s = (this._state.s - 1) & 0xff;\n\n        return null;\n    };\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _operation: Push.Operation;\n}\n\nnamespace Push {\n    export interface Operation {\n        (s: CpuInterface.State): number;\n    }\n}\n\nexport const push = (state: CpuInterface.State, operation: Push.Operation) => new Push(state, operation);\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\n\nclass ReadModifyWrite implements StateMachineInterface<number> {\n    constructor(state: CpuInterface.State, operation: ReadModifyWrite.Operation) {\n        this._state = state;\n        this._operation = operation;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable\n    reset = (address: number): StateMachineInterface.Result => {\n        this._address = address;\n\n        return this._result.read(this._read, address);\n    };\n\n    @Immutable\n    private _read = (value: number): StateMachineInterface.Result => {\n        this._operand = value;\n\n        return this._result.write(this._dummyWrite, this._address, this._operand);\n    };\n\n    @Immutable\n    private _dummyWrite = (value: number): StateMachineInterface.Result =>\n        this._result.write(this._write, this._address, this._operation(this._operand, this._state));\n\n    @Immutable private _write = (): null => null;\n\n    private _address: number;\n    private _operand: number;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _operation: ReadModifyWrite.Operation;\n}\n\nnamespace ReadModifyWrite {\n    export interface Operation {\n        (o: number, s: CpuInterface.State): number;\n    }\n}\n\nexport const readModifyWrite = (state: CpuInterface.State, operation: ReadModifyWrite.Operation) =>\n    new ReadModifyWrite(state, operation);\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\n\nclass Rti implements StateMachineInterface {\n    constructor(state: CpuInterface.State) {\n        this._state = state;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._dummyOperandRead, this._state.p);\n\n    @Immutable\n    private _dummyOperandRead = (): StateMachineInterface.Result =>\n        this._result.read(this._dummyStackRead, 0x0100 + this._state.s);\n\n    @Immutable\n    private _dummyStackRead = (): StateMachineInterface.Result => {\n        this._state.s = (this._state.s + 1) & 0xff;\n\n        return this._result.read(this._popP, 0x0100 + this._state.s);\n    };\n\n    @Immutable\n    private _popP = (value: number): StateMachineInterface.Result => {\n        this._state.flags = (value | CpuInterface.Flags.e) & ~CpuInterface.Flags.b;\n        this._state.s = (this._state.s + 1) & 0xff;\n\n        return this._result.read(this._popPcl, 0x0100 + this._state.s);\n    };\n\n    @Immutable\n    private _popPcl = (value: number): StateMachineInterface.Result => {\n        this._state.p = (this._state.p & 0xff00) | value;\n        this._state.s = (this._state.s + 1) & 0xff;\n\n        return this._result.read(this._popPch, 0x0100 + this._state.s);\n    };\n\n    @Immutable\n    private _popPch = (value: number): null => {\n        this._state.p = (this._state.p & 0xff) | (value << 8);\n\n        return null;\n    };\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n}\n\nexport const rti = (state: CpuInterface.State) => new Rti(state);\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\n\nclass Rts implements StateMachineInterface {\n    constructor(state: CpuInterface.State) {\n        this._state = state;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._dummyOperandRead, this._state.p);\n\n    @Immutable\n    private _dummyOperandRead = (): StateMachineInterface.Result =>\n        this._result.read(this._dummyStackRead, 0x0100 + this._state.s);\n\n    @Immutable\n    private _dummyStackRead = (): StateMachineInterface.Result => {\n        this._state.s = (this._state.s + 1) & 0xff;\n\n        return this._result.read(this._popPcl, 0x0100 + this._state.s);\n    };\n\n    @Immutable\n    private _popPcl = (value: number): StateMachineInterface.Result => {\n        this._state.p = (this._state.p & 0xff00) | value;\n        this._state.s = (this._state.s + 1) & 0xff;\n\n        return this._result.read(this._popPch, 0x0100 + this._state.s);\n    };\n\n    @Immutable\n    private _popPch = (value: number): StateMachineInterface.Result => {\n        this._state.p = (this._state.p & 0xff) | (value << 8);\n\n        return this._result.read(this._incrementP, this._state.p);\n    };\n\n    @Immutable\n    private _incrementP = (): null => {\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return null;\n    };\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n}\n\nexport const rts = (state: CpuInterface.State) => new Rts(state);\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\n\nclass Write implements StateMachineInterface<number> {\n    constructor(state: CpuInterface.State, operation: Write.Operation) {\n        this._state = state;\n        this._operation = operation;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable\n    reset = (operand: number): StateMachineInterface.Result =>\n        this._result.write(() => null, operand, this._operation(this._state));\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _operation: Write.Operation;\n}\n\nnamespace Write {\n    export interface Operation {\n        (s: CpuInterface.State): number;\n    }\n}\n\nexport const write = (state: CpuInterface.State, operation: Write.Operation) => new Write(state, operation);\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport CpuInterface from '../CpuInterface';\n\nfunction setFlagsNZ(operand: number, state: CpuInterface.State): void {\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z)) |\n        (operand & 0x80) |\n        (operand ? 0 : CpuInterface.Flags.z);\n}\n\nexport function genRmw(operand: number, state: CpuInterface.State, operation: (x: number) => number): number {\n    const result = operation(operand);\n    setFlagsNZ(result, state);\n\n    return result;\n}\n\nexport function genNullary(state: CpuInterface.State, operation: (state: CpuInterface.State) => number): void {\n    setFlagsNZ(operation(state), state);\n}\n\nexport function genUnary(\n    operand: number,\n    state: CpuInterface.State,\n    operation: (operand: number, state: CpuInterface.State) => number\n): null {\n    setFlagsNZ(operation(operand, state), state);\n\n    return null;\n}\n\nexport function adc(operand: number, state: CpuInterface.State): null {\n    if (state.flags & CpuInterface.Flags.d) {\n        const d0 = (operand & 0x0f) + (state.a & 0x0f) + (state.flags & CpuInterface.Flags.c),\n            d1 = (operand >>> 4) + (state.a >>> 4) + (d0 > 9 ? 1 : 0);\n\n        state.a = d0 % 10 | (d1 % 10 << 4);\n\n        state.flags =\n            (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n            (state.a & 0x80) | // negative\n            (state.a ? 0 : CpuInterface.Flags.z) | // zero\n            (d1 > 9 ? CpuInterface.Flags.c : 0); // carry\n    } else {\n        const sum = state.a + operand + (state.flags & CpuInterface.Flags.c),\n            result = sum & 0xff;\n\n        state.flags =\n            (state.flags &\n                ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c | CpuInterface.Flags.v)) |\n            (result & 0x80) | // negative\n            (result ? 0 : CpuInterface.Flags.z) | // zero\n            (sum >>> 8) | // carry\n            ((~(operand ^ state.a) & (result ^ operand) & 0x80) >>> 1); // overflow\n\n        state.a = result;\n    }\n\n    return null;\n}\n\nexport function aslImmediate(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = (state.a << 1) & 0xff;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nexport function aslRmw(operand: number, state: CpuInterface.State): number {\n    const result = (operand << 1) & 0xff;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (result & 0x80) |\n        (result ? 0 : CpuInterface.Flags.z) |\n        (operand >>> 7);\n\n    return result;\n}\n\nexport function bit(operand: number, state: CpuInterface.State): null {\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.v | CpuInterface.Flags.z)) |\n        (operand & (CpuInterface.Flags.n | CpuInterface.Flags.v)) |\n        (operand & state.a ? 0 : CpuInterface.Flags.z);\n\n    return null;\n}\n\nexport function cmp(\n    operand: number,\n    state: CpuInterface.State,\n    getRegister: (state: CpuInterface.State) => number\n): void {\n    const diff = getRegister(state) + (~operand & 0xff) + 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        (diff & 0xff ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n}\n\nexport function sbc(operand: number, state: CpuInterface.State): null {\n    if (state.flags & CpuInterface.Flags.d) {\n        const d0 = (state.a & 0x0f) - (operand & 0x0f) - (~state.flags & CpuInterface.Flags.c),\n            d1 = (state.a >>> 4) - (operand >>> 4) - (d0 < 0 ? 1 : 0);\n\n        state.a = (d0 < 0 ? 10 + d0 : d0) | ((d1 < 0 ? 10 + d1 : d1) << 4);\n\n        state.flags =\n            (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n            (state.a & 0x80) | // negative\n            (state.a ? 0 : CpuInterface.Flags.z) | // zero\n            (d1 < 0 ? 0 : CpuInterface.Flags.c); // carry / borrow\n    } else {\n        operand = ~operand & 0xff;\n\n        const sum = state.a + operand + (state.flags & CpuInterface.Flags.c),\n            result = sum & 0xff;\n\n        state.flags =\n            (state.flags &\n                ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c | CpuInterface.Flags.v)) |\n            (result & 0x80) | // negative\n            (result ? 0 : CpuInterface.Flags.z) | // zero\n            (sum >>> 8) | // carry / borrow\n            ((~(operand ^ state.a) & (result ^ operand) & 0x80) >>> 1); // overflow\n\n        state.a = result;\n    }\n\n    return null;\n}\n\nexport function lsrImmediate(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = state.a >>> 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nexport function lsrRmw(operand: number, state: CpuInterface.State): number {\n    const result = operand >>> 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (result & 0x80) |\n        (result ? 0 : CpuInterface.Flags.z) |\n        (operand & CpuInterface.Flags.c);\n\n    return result;\n}\n\nexport function rolImmediate(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = ((state.a << 1) & 0xff) | (state.flags & CpuInterface.Flags.c);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nexport function rolRmw(operand: number, state: CpuInterface.State): number {\n    const result = ((operand << 1) & 0xff) | (state.flags & CpuInterface.Flags.c);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (result & 0x80) |\n        (result ? 0 : CpuInterface.Flags.z) |\n        (operand >>> 7);\n\n    return result;\n}\n\nexport function rorImmediate(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = (state.a >>> 1) | ((state.flags & CpuInterface.Flags.c) << 7);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nexport function rorRmw(operand: number, state: CpuInterface.State): number {\n    const result = (operand >>> 1) | ((state.flags & CpuInterface.Flags.c) << 7);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (result & 0x80) |\n        (result ? 0 : CpuInterface.Flags.z) |\n        (operand & CpuInterface.Flags.c);\n\n    return result;\n}\n\n// Undocumented opcodes\n\nexport function arr(operand: number, state: CpuInterface.State): void {\n    state.a = ((state.a & operand) >>> 1) | (state.flags & CpuInterface.Flags.c ? 0x80 : 0);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.c | CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.v)) |\n        ((state.a & 0x40) >>> 6) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (state.a & 0x80) |\n        ((state.a & 0x40) ^ ((state.a & 0x20) << 1));\n}\n\nexport function alr(operand: number, state: CpuInterface.State): null {\n    const i = state.a & operand;\n    state.a = i >>> 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (i & CpuInterface.Flags.c);\n\n    return null;\n}\n\nexport function dcp(operand: number, state: CpuInterface.State): number {\n    const result = (operand + 0xff) & 0xff;\n    const diff = state.a + (~result & 0xff) + 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        (diff & 0xff ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n\n    return result;\n}\n\nexport function axs(operand: number, state: CpuInterface.State): null {\n    const value = (state.a & state.x) + (~operand & 0xff) + 1;\n\n    state.x = value & 0xff;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.x & 0x80) |\n        (state.x & 0xff ? 0 : CpuInterface.Flags.z) |\n        (value >>> 8);\n\n    return null;\n}\n\nexport function rra(operand: number, state: CpuInterface.State): number {\n    const result = (operand >>> 1) | ((state.flags & CpuInterface.Flags.c) << 7);\n\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | (operand & CpuInterface.Flags.c);\n\n    adc(result, state);\n\n    return result;\n}\n\nexport function rla(operand: number, state: CpuInterface.State): number {\n    const result = ((operand << 1) & 0xff) | (state.flags & CpuInterface.Flags.c);\n\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | (operand >>> 7);\n\n    setFlagsNZ((state.a &= result), state);\n\n    return result;\n}\n\nexport function slo(operand: number, state: CpuInterface.State): number {\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | (operand >>> 7);\n    const result = (operand << 1) & 0xff;\n\n    state.a = state.a | result;\n    setFlagsNZ(state.a, state);\n\n    return result;\n}\n\nexport function aax(state: CpuInterface.State): number {\n    const result = state.a & state.x;\n    setFlagsNZ(result, state);\n\n    return result;\n}\n\nexport function isc(operand: number, state: CpuInterface.State): number {\n    const result = (operand + 1) & 0xff;\n\n    sbc(result, state);\n\n    return result;\n}\n\nexport function aac(operand: number, state: CpuInterface.State): null {\n    state.a &= operand;\n    setFlagsNZ(state.a, state);\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | ((state.a & 0x80) >>> 7);\n\n    return null;\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\n\nclass Boot implements StateMachineInterface {\n    constructor(state: CpuInterface.State) {\n        this._state = state;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._pre1Step, 0xff);\n\n    @Immutable private _pre1Step = (): StateMachineInterface.Result => this._result.read(this._pre2Step, 0x0ff);\n\n    @Immutable private _pre2Step = (): StateMachineInterface.Result => this._result.read(this._stack1Step, 0x0100);\n\n    @Immutable private _stack1Step = (): StateMachineInterface.Result => this._result.read(this._stack2Step, 0x01ff);\n\n    @Immutable\n    private _stack2Step = (): StateMachineInterface.Result => {\n        this._state.s = 0xfd;\n        return this._result.read(this._stack3Step, 0x01fe);\n    };\n\n    @Immutable\n    private _stack3Step = (): StateMachineInterface.Result => this._result.read(this._readTargetLoStep, 0xfffc);\n\n    @Immutable\n    private _readTargetLoStep = (operand: number): StateMachineInterface.Result => {\n        this._targetAddress = operand;\n        return this._result.read(this._readTargetHiStep, 0xfffd);\n    };\n\n    @Immutable\n    private _readTargetHiStep = (operand: number): null => {\n        this._targetAddress |= operand << 8;\n        this._state.p = this._targetAddress;\n\n        return null;\n    };\n\n    private _targetAddress = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n}\n\nexport const boot = (state: CpuInterface.State) => new Boot(state);\n",
    "export { boot } from './boot';\nexport { brk, nmi, irq } from './interrupt';\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\n\nclass Interrupt implements StateMachineInterface {\n    constructor(state: CpuInterface.State, defaultVector: number, isBrk: boolean) {\n        this._state = state;\n        this._defaultVector = defaultVector;\n        this._isBrk = isBrk;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._dummyRead, this._state.p);\n\n    @Immutable\n    private _dummyRead = (): StateMachineInterface.Result => {\n        if (this._isBrk) {\n            this._state.p = (this._state.p + 1) & 0xffff;\n        }\n\n        return this._result.write(this._pushPch, 0x0100 + this._state.s, this._state.p >>> 8);\n    };\n\n    @Immutable\n    private _pushPch = (): StateMachineInterface.Result => {\n        this._state.s = (this._state.s - 1) & 0xff;\n\n        return this._result.write(this._pushPcl, 0x0100 + this._state.s, this._state.p & 0xff).poll(true);\n    };\n\n    @Immutable\n    private _pushPcl = (): StateMachineInterface.Result => {\n        this._state.s = (this._state.s - 1) & 0xff;\n        this._vector = this._state.nmi ? 0xfffa : this._defaultVector;\n\n        return this._result.write(\n            this._pushFlags,\n            0x0100 + this._state.s,\n            this._isBrk ? this._state.flags | CpuInterface.Flags.b : this._state.flags & ~CpuInterface.Flags.b\n        );\n    };\n\n    @Immutable\n    private _pushFlags = (): StateMachineInterface.Result => {\n        this._state.s = (this._state.s - 1) & 0xff;\n\n        return this._result.read(this._fetchPcl, this._vector);\n    };\n\n    @Immutable\n    private _fetchPcl = (value: number): StateMachineInterface.Result => {\n        this._state.flags |= CpuInterface.Flags.i;\n        this._state.p = value;\n\n        return this._result.read(this._fetchPch, ++this._vector);\n    };\n\n    @Immutable\n    private _fetchPch = (value: number): null => {\n        this._state.p = this._state.p | (value << 8);\n        this._state.nmi = this._state.irq = false;\n\n        return null;\n    };\n\n    private _vector = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _defaultVector: number;\n    @Immutable private readonly _isBrk: boolean;\n}\n\nexport const brk = (state: CpuInterface.State) => new Interrupt(state, 0xfffe, true);\nexport const irq = (state: CpuInterface.State) => new Interrupt(state, 0xfffe, false);\nexport const nmi = (state: CpuInterface.State) => new Interrupt(state, 0xfffa, false);\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport DigitalJoystickInterface from './DigitalJoystickInterface';\nimport Switch from './Switch';\nimport SwitchInterface from './SwitchInterface';\n\nexport default class DigitalJoystick implements DigitalJoystickInterface {\n    getLeft(): SwitchInterface {\n        return this._left;\n    }\n\n    getRight(): SwitchInterface {\n        return this._right;\n    }\n\n    getUp(): SwitchInterface {\n        return this._up;\n    }\n\n    getDown(): SwitchInterface {\n        return this._down;\n    }\n\n    getFire(): SwitchInterface {\n        return this._fire;\n    }\n\n    private _left = new Switch();\n    private _right = new Switch();\n    private _up = new Switch();\n    private _down = new Switch();\n\n    private _fire = new Switch();\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport Switch from './Switch';\nimport PaddleInterface from './PaddleInterface';\n\nexport default class Paddle implements PaddleInterface {\n    setValue(value: number): void {\n        this._value = value;\n        this.valueChanged.dispatch(value);\n    }\n\n    getValue(): number {\n        return this._value;\n    }\n\n    getFire(): Switch {\n        return this._fireSwitch;\n    }\n\n    valueChanged = new Event<number>();\n\n    protected _fireSwitch = new Switch();\n    protected _value = 0.5;\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport SwitchInterface from './SwitchInterface';\n\nexport default class Switch implements SwitchInterface {\n    constructor(private _state: boolean = false) {}\n\n    read(): boolean {\n        this.beforeRead.dispatch(this);\n        return this._state;\n    }\n\n    peek(): boolean {\n        return this._state;\n    }\n\n    toggle(state: boolean): void {\n        if (this._state === state) {\n            return;\n        }\n\n        this._state = state;\n        this.stateChanged.dispatch(state);\n    }\n\n    stateChanged = new Event<boolean>();\n    beforeRead = new Event<this>();\n}\n",
    "import CpuFactory from '../cpu/Factory';\n\n/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\ninterface Config {\n    tvMode: Config.TvMode;\n    enableAudio: boolean;\n    randomSeed: number;\n    emulatePaddles: boolean;\n    frameStart: number;\n    pcmAudio: boolean;\n    cpuType: CpuFactory.Type;\n}\n\nnamespace Config {\n    export const enum TvMode {\n        ntsc,\n        pal,\n        secam\n    }\n\n    export function create(config: Partial<Config> = {}): Config {\n        return {\n            tvMode: TvMode.ntsc,\n            enableAudio: true,\n            randomSeed: -1,\n            emulatePaddles: true,\n            frameStart: -1,\n            pcmAudio: false,\n            cpuType: CpuFactory.Type.stateMachine,\n\n            ...config\n        };\n    }\n\n    export function getClockHz(config: Config): number {\n        switch (config.tvMode) {\n            case Config.TvMode.ntsc:\n                return 262 * 228 * 60;\n\n            case Config.TvMode.pal:\n            case Config.TvMode.secam:\n                return 312 * 228 * 50;\n        }\n    }\n}\n\nexport { Config as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Switch from '../io/Switch';\nimport SwitchInterface from '../io/SwitchInterface';\nimport ControlPanelInterface from './ControlPanelInterface';\n\nclass ControlPanel implements ControlPanelInterface {\n    getSelectSwitch(): SwitchInterface {\n        return this._selectSwitch;\n    }\n\n    getResetButton(): SwitchInterface {\n        return this._resetButton;\n    }\n\n    getColorSwitch(): SwitchInterface {\n        return this._colorSwitch;\n    }\n\n    getDifficultySwitchP0(): SwitchInterface {\n        return this._difficutlyP0;\n    }\n\n    getDifficultySwitchP1(): SwitchInterface {\n        return this._difficutlyP1;\n    }\n\n    private _selectSwitch = new Switch();\n    private _resetButton = new Switch();\n    private _colorSwitch = new Switch();\n    private _difficutlyP0 = new Switch();\n    private _difficutlyP1 = new Switch();\n}\n\nexport { ControlPanel as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nnamespace CartridgeInfo {\n    export enum CartridgeType {\n        vanilla_2k = 'vanilla_2k',\n        vanilla_4k = 'vanilla_4k',\n\n        bankswitch_8k_F8 = 'bankswitch_8k_F8',\n        bankswitch_8k_E0 = 'bankswitch_8k_E0',\n        bankswitch_8k_3F = 'bankswitch_8k_3F',\n        bankswitch_8k_FE = 'bankswitch_8k_FE',\n        bankswitch_8k_UA = 'bankswitch_8k_UA',\n        bankswitch_8k_DPC = 'bankswitch_8k_DPC',\n        bankswitch_8k_econobanking = 'bankswitch_8k_econobanking',\n\n        bankswitch_12k_FA = 'bankswitch_12k_FA',\n\n        bankswitch_16k_F6 = 'bankswitch_16k_F6',\n        bankswitch_16k_E7 = 'bankswitch_16k_E7',\n\n        bankswitch_FA2 = 'bankswitch_FA2',\n\n        bankswitch_32k_F4 = 'bankswitch_32k_F4',\n\n        bankswitch_64k_F0 = 'bankswitch_64k_F0',\n        bankswitch_64k_EF = 'bankswitch_64k_EF',\n\n        bankswitch_3E = 'bankswitch_3E',\n        bankswitch_supercharger = 'bankswitch_supercharger',\n        bankswitch_dpc_plus = 'bankswitch_dpc_plus',\n        bankswitch_cdf = 'bankswitch_cdf',\n\n        unknown = 'unknown'\n    }\n\n    export function getAllTypes(): Array<CartridgeType> {\n        return [\n            CartridgeType.vanilla_2k,\n            CartridgeType.vanilla_4k,\n            CartridgeType.bankswitch_8k_F8,\n            CartridgeType.bankswitch_8k_E0,\n            CartridgeType.bankswitch_8k_3F,\n            CartridgeType.bankswitch_8k_FE,\n            CartridgeType.bankswitch_8k_UA,\n            CartridgeType.bankswitch_8k_econobanking,\n            CartridgeType.bankswitch_12k_FA,\n            CartridgeType.bankswitch_8k_DPC,\n            CartridgeType.bankswitch_16k_F6,\n            CartridgeType.bankswitch_16k_E7,\n            CartridgeType.bankswitch_FA2,\n            CartridgeType.bankswitch_32k_F4,\n            CartridgeType.bankswitch_3E,\n            CartridgeType.bankswitch_64k_F0,\n            CartridgeType.bankswitch_64k_EF,\n            CartridgeType.bankswitch_supercharger,\n            CartridgeType.bankswitch_dpc_plus,\n            CartridgeType.bankswitch_cdf,\n            CartridgeType.unknown\n        ];\n    }\n\n    export function describeCartridgeType(cartridgeType: CartridgeType): string {\n        switch (cartridgeType) {\n            case CartridgeType.vanilla_2k:\n                return 'plain 2k';\n\n            case CartridgeType.vanilla_4k:\n                return 'plain 4k';\n\n            case CartridgeType.bankswitch_8k_F8:\n                return 'bankswitched 8k, F8 (Atari) scheme';\n\n            case CartridgeType.bankswitch_8k_E0:\n                return 'bankswitched 8k, E0 (Parker Bros.) scheme';\n\n            case CartridgeType.bankswitch_8k_3F:\n                return 'bankswitched 8k, 3F (Tigervision) scheme';\n\n            case CartridgeType.bankswitch_8k_FE:\n                return 'bankswitched 8k, FE (Activision) scheme';\n\n            case CartridgeType.bankswitch_8k_UA:\n                return 'bankswitched 8k, UA (Pleiades) scheme';\n\n            case CartridgeType.bankswitch_12k_FA:\n                return 'bankswitched 12k, FA (CBS) scheme';\n\n            case CartridgeType.bankswitch_8k_DPC:\n                return 'bankswitched 8k + DPC';\n\n            case CartridgeType.bankswitch_8k_econobanking:\n                return 'bankswitched 8k, econobanking scheme';\n\n            case CartridgeType.bankswitch_16k_F6:\n                return 'bankswitched 16k, F6 (Atari) scheme';\n\n            case CartridgeType.bankswitch_16k_E7:\n                return 'bankswitched 16k, E7 (M-Network) scheme';\n\n            case CartridgeType.bankswitch_FA2:\n                return 'bankswitched 28k/29k, FA2 (modified CBS) scheme';\n\n            case CartridgeType.bankswitch_32k_F4:\n                return 'bankswitched 32k, F4 (Atari) scheme';\n\n            case CartridgeType.bankswitch_3E:\n                return 'bankswitched 3E (Tigervision + RAM) scheme';\n\n            case CartridgeType.bankswitch_64k_F0:\n                return 'bankswitched 64k, F0 (Megaboy) scheme';\n\n            case CartridgeType.bankswitch_64k_EF:\n                return 'bankswitched 64k, EFSC (Homestar Runner) scheme';\n\n            case CartridgeType.bankswitch_supercharger:\n                return 'bankswitched supercharger';\n\n            case CartridgeType.bankswitch_dpc_plus:\n                return 'bankswitched DPC+';\n\n            case CartridgeType.bankswitch_cdf:\n                return 'bankswitched CDF';\n\n            case CartridgeType.unknown:\n                return 'unknown';\n        }\n    }\n}\n\nexport { CartridgeInfo as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\n/*\n * The tone generator has been heavily influenced by the code found at\n * http://www.biglist.com/lists/stella/archives/200311/msg00156.html with following licence:\n *\n * sound.c\n * version 0.2\n *\n * Copyright (c) 2003 Adam Wozniak (adam@wozniakconsulting.com)\n * All Rights Reserved\n *\n * Permission granted to freely copy and use for any purpose, provided\n * this copyright header remains intact.\n */\nimport Config from '../Config';\nimport AudioOutputBuffer from '../../../tools/AudioOutputBuffer';\nimport { decode as decodeBase64 } from '../../../tools/base64';\n\nconst FREQUENCY_DIVISIORS = decodeBase64('AQEPAQEBAQEBAQEBAwMDAQ==');\n\n// all ones\nconst POLY0 = new Int8Array([1]);\n\n// 50% duty cycle\nconst POLY1 = new Int8Array([1, 1]);\n\n// 16/31 duty cycle\nconst POLY2 = new Int8Array([16, 15]);\n\n// 4 bit LFSR\nconst POLY4 = decodeBase64('AQICAQEBBAM=');\n\n// 5 bit LFSR\nconst POLY5 = decodeBase64('AQIBAQICBQQCAQMBAQEBBA==');\n\n// 9 bit LFSR\nconst POLY9 = decodeBase64(\n    'AQQBAwIEAQIDAgEBAQEBAQIEAgEEAQECAgEDAgEDAQEBBAEBAQECAQECBgECAgECAQIBAQIBBg' +\n        'IBAgIBAQEBAgICAgcCAwICAQEBAwIBAQIBAQcBAQMBAQIDAwEBAQICAQECAgQDBQEDAQEFAgEB' +\n        'AQIBAgEDAQIFAQECAQEBBQEBAQEBAQEBBgEBAQIBAQEBBAIBAQMBAwYDAgMBAQIBAgQBAQEDAQ' +\n        'EBAQMBAgEEAgIDBAEBBAECAQICAgEBBAMBBAQJBQQBBQMBAQMCAgIBBQECAQEBAgMBAgEBAwQC' +\n        'BQICAQIDAQEBAQECAQMDAwIBAgEBAQEBAwMBAgIDAQMBCA=='\n);\n\n// used by mode 15\nconst POLY68 = decodeBase64('BQYEBQoFAwcECgYDBgQJBg==');\n\n// used by mode 3\nconst POLY465 = decodeBase64(\n    'AgMCAQQBBgoCBAIBAQQFCQMDBAEBAQgFBQUEAQEBCAQCCAMDAQEHBAIHBQEDAQcEAQQIAgEDBA' +\n        'cBAwcDAgEGBgICBAUDAgYGAQMDAgUDBwMEAwICAgUJAwEFAwECAgsFAQUDAQECDAUBAgUCAQEM' +\n        'BgECBQECAQoGAwICBAECBgo='\n);\n\nconst POLYS = [\n    POLY0,\n    POLY4,\n    POLY4,\n    POLY465,\n    POLY1,\n    POLY1,\n    POLY2,\n    POLY5,\n    POLY9,\n    POLY5,\n    POLY2,\n    POLY0,\n    POLY1,\n    POLY1,\n    POLY2,\n    POLY68\n];\n\nclass ToneGenerator {\n    constructor(private _config?: Config) {}\n\n    setConfig(config: Config) {\n        this._config = config;\n    }\n\n    getKey(tone: number, frequency: number): number {\n        // Hack: this is at the boundary of hearing anyway and causes nasty artifacts during\n        // resampling, so we kill it right away.\n        if (POLYS[tone] === POLY1 && FREQUENCY_DIVISIORS[tone] * (frequency + 1) === 1) {\n            return 0;\n        }\n\n        return (tone << 5) | frequency;\n    }\n\n    getBuffer(key: number): AudioOutputBuffer {\n        const tone = (key >>> 5) & 0x0f,\n            frequency = key & 0x1f;\n\n        const poly = POLYS[tone];\n\n        let length = 0;\n        for (let i = 0; i < poly.length; i++) {\n            length += poly[i];\n        }\n\n        length = length * FREQUENCY_DIVISIORS[tone] * (frequency + 1);\n\n        const content = new Float32Array(length);\n\n        const sampleRate = Config.getClockHz(this._config) / 114;\n\n        let f = 0;\n        let count = 0;\n        let offset = 0;\n        let state = true;\n\n        for (let i = 0; i < length; i++) {\n            f++;\n\n            if (f === FREQUENCY_DIVISIORS[tone] * (frequency + 1)) {\n                f = 0;\n                count++;\n\n                if (count === poly[offset]) {\n                    offset++;\n                    count = 0;\n\n                    if (poly.length === offset) {\n                        offset = 0;\n                    }\n                }\n\n                state = !(offset & 0x01);\n            }\n\n            content[i] = state ? 1 : -1;\n        }\n\n        return new AudioOutputBuffer(content, sampleRate);\n    }\n}\n\nexport { ToneGenerator as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nclass AudioOutputBuffer {\n    constructor(private _content: Float32Array, private _sampleRate: number) {}\n\n    getLength(): number {\n        return this._content.length;\n    }\n\n    getContent(): Float32Array {\n        return this._content;\n    }\n\n    getSampleRate(): number {\n        return this._sampleRate;\n    }\n\n    replaceUnderlyingBuffer(buffer: Float32Array): void {\n        this._content = buffer;\n    }\n}\n\nexport { AudioOutputBuffer as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nclass RingBuffer<T> {\n    constructor(private _capacity: number) {\n        this._buffer = new Array<T>(this._capacity);\n\n        for (let i = 0; i < this._capacity; i++) {\n            this._buffer[i] = null;\n        }\n    }\n\n    size(): number {\n        return this._size;\n    }\n\n    pop(): T {\n        if (this._size === 0) {\n            return undefined;\n        }\n\n        const item = this._buffer[this._index];\n        this._buffer[this._index] = null;\n\n        this._index = (this._index + 1) % this._capacity;\n        this._size--;\n\n        return item;\n    }\n\n    push(item: T): this {\n        if (this._size === this._capacity) {\n            this.pop();\n        }\n\n        this._buffer[(this._index + this._size++) % this._capacity] = item;\n\n        return this;\n    }\n\n    forEach(fn: (item: T) => void): this {\n        for (let i = 0; i < this._size; i++) {\n            fn(this._buffer[(this._index + i) % this._capacity]);\n        }\n\n        return this;\n    }\n\n    clear(): this {\n        for (let i = 0; i < this._capacity; i++) {\n            this._buffer[i] = null;\n        }\n\n        this._size = 0;\n        this._index = 0;\n\n        return this;\n    }\n\n    private _size = 0;\n    private _index = 0;\n    private _buffer: Array<T>;\n}\n\nexport { RingBuffer as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nconst encodingsString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n    encodings = new Uint8Array(256);\n\nexport namespace __init {\n    let i: number;\n\n    for (i = 0; i < 256; i++) {\n        encodings[i] = 255;\n    }\n    for (i = 0; i < 64; i++) {\n        encodings[encodingsString.charCodeAt(i)] = i;\n    }\n\n    encodings['='.charCodeAt(0)] = 0;\n}\n\nfunction decodeChar(data: string, idx: number): number {\n    const value = encodings[data.charCodeAt(idx)];\n\n    if (value > 63) {\n        throw new Error('invalid base64 character \"' + data[idx] + '\" at index ' + idx);\n    }\n\n    return value;\n}\n\nfunction decodeNibble(data: string, idx: number): number {\n    return (\n        (decodeChar(data, idx) << 18) +\n        (decodeChar(data, idx + 1) << 12) +\n        (decodeChar(data, idx + 2) << 6) +\n        decodeChar(data, idx + 3)\n    );\n}\n\nfunction getPadding(data: string): number {\n    let padding = 0,\n        idx = data.length - 1;\n\n    while (idx >= 0 && data[idx--] === '=') {\n        padding++;\n    }\n\n    return padding;\n}\n\nexport function decode(data: string): Uint8Array {\n    if (data.length % 4 !== 0) {\n        throw new Error('invalid base64 data --- char count mismatch');\n    }\n\n    const nibbles = data.length / 4,\n        decodedSize = nibbles * 3 - getPadding(data),\n        decoded = new Uint8Array(decodedSize);\n\n    let idx = 0;\n\n    for (let i = 0; i < nibbles; i++) {\n        const nibble = decodeNibble(data, i * 4);\n\n        for (let j = 0; j < 3 && idx < decodedSize; j++) {\n            decoded[idx++] = (nibble >>> (8 * (2 - j))) & 0xff;\n        }\n    }\n\n    return decoded;\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nconst immutables = Symbol('immutable properties');\n\nexport function freezeImmutables(target: any): void {\n    const immutableProperties = target[immutables];\n    if (!immutableProperties) {\n        return;\n    }\n\n    for (const prop of immutableProperties) {\n        Object.defineProperty(target, prop, { writable: false, configurable: false });\n    }\n}\n\nexport function Immutable(target: any, prop: string): void {\n    if (!target[immutables]) {\n        Object.defineProperty(target, immutables, { value: [], writable: false, enumerable: false });\n    }\n\n    target[immutables].push(prop);\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport PoolMember from './PoolMember';\nimport PoolInterface from './PoolInterface';\n\nclass Pool<T> implements PoolInterface<T> {\n    constructor(private _factory: Pool.FactoryInterface<T>) {}\n\n    get(): PoolMember<T> {\n        let member: PoolMember<T>;\n\n        if (this._poolSize === 0) {\n            const newItem = this._factory();\n\n            member = new PoolMember<T>(\n                newItem,\n                (victim: PoolMember<T>) => this._releaseMember(victim),\n                (victim: PoolMember<T>) => this._disposeMember(victim)\n            );\n        } else {\n            member = this._pool[--this._poolSize];\n            member._isAvailable = false;\n        }\n\n        return member;\n    }\n\n    private _releaseMember(victim: PoolMember<T>) {\n        if (victim._isAvailable) {\n            throw new Error('Trying to release an already released pool member');\n        }\n\n        if (victim._isDisposed) {\n            throw new Error('Trying to release an already disposed pool member');\n        }\n\n        const position = this._poolSize++;\n\n        this._pool[position] = victim;\n\n        victim._isAvailable = true;\n        victim._poolPosition = position;\n\n        this.event.release.dispatch(victim.get());\n    }\n\n    private _disposeMember(victim: PoolMember<T>) {\n        if (victim._isDisposed) {\n            throw new Error('Trying to dispose of an already disposed pool member');\n        }\n\n        if (victim._isAvailable) {\n            if (this._poolSize > 1) {\n                this._pool[victim._poolPosition] = this._pool[this._poolSize - 1];\n            }\n\n            this._poolSize--;\n        }\n\n        victim._isDisposed = true;\n\n        this.event.dispose.dispatch(victim.get());\n    }\n\n    event = {\n        release: new Event<T>(),\n        dispose: new Event<T>()\n    };\n\n    private _pool: Array<PoolMember<T>> = [];\n\n    private _poolSize = 0;\n}\n\nnamespace Pool {\n    export interface FactoryInterface<T> {\n        (): T;\n    }\n\n    export interface RecycleCallbackInterface<T> {\n        (value: T): void;\n    }\n\n    export interface DisposeCallbackInterface<T> {\n        (value: T): void;\n    }\n}\n\nexport { Pool as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport PoolMemberInterface from './PoolMemberInterface';\n\nclass PoolMember<T> implements PoolMemberInterface<T> {\n    constructor(\n        private _value: T,\n        private _releaseCB: (victim: PoolMember<T>) => void,\n        private _disposeCB: (victim: PoolMember<T>) => void\n    ) {}\n\n    adopt(target: T): void {\n        this._value = target;\n    }\n\n    get(): T {\n        return this._value;\n    }\n\n    release(): void {\n        this._releaseCB(this);\n    }\n\n    dispose(): void {\n        this._disposeCB(this);\n    }\n\n    public _isAvailable = false;\n    public _isDisposed = false;\n    public _poolPosition: number;\n}\n\nexport { PoolMember as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport * as screenfull from 'screenfull';\n\nimport VideoDriver from './VideoDriverInterface';\n\nconst noFullscrenApi = !!navigator.platform.match(/iPhone|iPad|iPod/);\n\nexport default class FullscreenVideoDriver {\n    constructor(\n        private _videoDriver: VideoDriver,\n        private _zIndex = 100000,\n        private _fullscreenClass = 'stellerator-fullscreen'\n    ) {}\n\n    engage(): void {\n        if (this._engaged) {\n            return;\n        }\n\n        this._engaged = true;\n\n        if (noFullscrenApi || !screenfull) {\n            this._adjustSizeForFullscreen();\n            window.addEventListener('resize', this._resizeListener);\n            this._engaged = true;\n        } else {\n            screenfull.on('change', this._changeListener);\n            screenfull.request(this._videoDriver.getCanvas());\n        }\n    }\n\n    disengage(): void {\n        if (!this._engaged) {\n            return;\n        }\n\n        if (noFullscrenApi || !screenfull) {\n            this._resetSize();\n            window.removeEventListener('resize', this._resizeListener);\n            this._engaged = false;\n        } else {\n            screenfull.exit();\n        }\n    }\n\n    toggle(): void {\n        if (this._engaged) {\n            this.disengage();\n        } else {\n            this.engage();\n        }\n    }\n\n    isEngaged(): boolean {\n        return this._engaged;\n    }\n\n    private _onChange(): void {\n        if (!screenfull) {\n            return;\n        }\n\n        if (screenfull.isFullscreen) {\n            window.addEventListener('resize', this._resizeListener);\n            this._adjustSizeForFullscreen();\n        } else {\n            this._resetSize();\n            window.removeEventListener('resize', this._resizeListener);\n            screenfull.off('change', this._changeListener);\n\n            this._engaged = false;\n        }\n    }\n\n    private _resetSize() {\n        const element = this._videoDriver.getCanvas();\n\n        if (this._resizeHandle) {\n            clearTimeout(this._resizeHandle);\n            this._resizeHandle = null;\n        }\n\n        element.style.width = '';\n        element.style.height = '';\n        element.style.maxWidth = '';\n        element.style.maxHeight = '';\n\n        if (noFullscrenApi) {\n            element.style.position = '';\n            element.style.top = '';\n            element.style.left = '';\n            element.style.zIndex = '';\n        }\n\n        document.body.classList.remove(this._fullscreenClass);\n\n        setTimeout(() => this._videoDriver.resize(), 0);\n    }\n\n    private _adjustSizeForFullscreen() {\n        const element = this._videoDriver.getCanvas();\n\n        this._videoDriver.resize(window.innerWidth, window.innerHeight);\n        element.style.width = window.innerWidth + 'px';\n        element.style.height = window.innerHeight + 'px';\n        element.style.maxWidth = window.innerWidth + 'px';\n        element.style.maxHeight = window.innerHeight + 'px';\n\n        if (noFullscrenApi) {\n            element.style.position = 'fixed';\n            element.style.top = '0';\n            element.style.left = '0';\n            element.style.zIndex = '' + this._zIndex;\n        }\n\n        document.body.classList.add(this._fullscreenClass);\n    }\n\n    private _resizeListener = () => {\n        if (this._resizeHandle) {\n            return;\n        }\n\n        this._resizeHandle = setTimeout(() => {\n            this._resizeHandle = null;\n            this._adjustSizeForFullscreen();\n        }, 100);\n    };\n\n    private _resizeHandle: any = null;\n\n    private _changeListener: () => void = this._onChange.bind(this);\n\n    private _engaged = false;\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport DigitalJoystickInterface from '../../machine/io/DigitalJoystickInterface';\nimport SwitchInterface from '../../machine/io/SwitchInterface';\n\nconst MIN_POLL_INTERVAL = 50;\n\nconst enum MappingButton {\n    left = 'left',\n    right = 'right',\n    up = 'up',\n    down = 'down',\n    fire = 'fire',\n    start = 'start',\n    select = 'select'\n}\n\nconst standardMappings: { [button: string]: Array<number> } = {\n    [MappingButton.up]: [12],\n    [MappingButton.down]: [13],\n    [MappingButton.left]: [14],\n    [MappingButton.right]: [15],\n    [MappingButton.fire]: [0, 1, 2, 3, 10, 11],\n    [MappingButton.select]: [8],\n    [MappingButton.start]: [9]\n};\n\nexport default class GamepadDriver {\n    init(): void {\n        if (!navigator.getGamepads) {\n            throw new Error(`gamepad API not available`);\n        }\n\n        this._probeGamepads();\n        window.addEventListener('gamepadconnected', this._onGamepadConnect);\n        window.addEventListener('gamepaddisconnected', this._onGamepadDisconnect);\n    }\n\n    deinit(): void {\n        this.unbind();\n\n        window.removeEventListener('gamepadconnected', this._onGamepadConnect);\n        window.removeEventListener('gamepaddisconnected', this._onGamepadDisconnect);\n    }\n\n    bind({\n        joysticks = null,\n        start = null,\n        select = null\n    }: {\n        joysticks?: Array<DigitalJoystickInterface>;\n        start?: SwitchInterface;\n        select?: SwitchInterface;\n    }): void {\n        if (this._bound) {\n            return;\n        }\n\n        this._joysticks = joysticks || [];\n        this._start = start;\n        this._select = select;\n        this._bound = true;\n\n        this._joysticksShadow = this._joysticks.map(x => createShadowJoystick());\n        this._startShadow = this._start ? new ShadowSwitch() : null;\n        this._selectShadow = this._select ? new ShadowSwitch() : null;\n\n        this._controlledSwitches().forEach(swtch =>\n            swtch.beforeRead.addHandler(GamepadDriver._onBeforeSwitchRead, this)\n        );\n\n        this._initShadows();\n    }\n\n    unbind(): void {\n        if (!this._bound) {\n            return;\n        }\n\n        this._controlledSwitches().forEach(swtch =>\n            swtch.beforeRead.removeHandler(GamepadDriver._onBeforeSwitchRead, this)\n        );\n\n        this._joysticks = this._start = this._select = null;\n        this._bound = false;\n    }\n\n    getGamepadCount(): number {\n        return this._gamepadCount;\n    }\n\n    private static _onBeforeSwitchRead(swtch: SwitchInterface, self: GamepadDriver) {\n        const now = Date.now();\n\n        if (self._gamepadCount === 0 || now - self._lastPoll < MIN_POLL_INTERVAL) {\n            return;\n        }\n\n        self._lastPoll = now;\n\n        let gamepadCount = 0,\n            joystickIndex = 0,\n            start = false,\n            select = false;\n\n        const gamepads = navigator.getGamepads();\n\n        for (let i = 0; i < gamepads.length; i++) {\n            const gamepad = gamepads[i];\n\n            if (!gamepad) {\n                continue;\n            }\n\n            gamepadCount++;\n\n            self._updateJoystickState(gamepad, joystickIndex++);\n\n            start = start || self._readState(standardMappings[MappingButton.start], gamepad);\n            select = select || self._readState(standardMappings[MappingButton.select], gamepad);\n        }\n\n        if (gamepadCount > 0) {\n            if (self._start) {\n                self._startShadow.toggle(start);\n            }\n\n            if (self._select) {\n                self._selectShadow.toggle(select);\n            }\n        }\n\n        self._syncShadows();\n    }\n\n    private _controlledSwitches(): Array<SwitchInterface> {\n        const switches: Array<SwitchInterface> = [];\n\n        for (const joystick of this._joysticks) {\n            switches.push(\n                joystick.getLeft(),\n                joystick.getRight(),\n                joystick.getUp(),\n                joystick.getDown(),\n                joystick.getFire()\n            );\n        }\n\n        if (this._select) {\n            switches.push(this._select);\n        }\n\n        if (this._start) {\n            switches.push(this._start);\n        }\n\n        return switches;\n    }\n\n    private _readState(mapping: Array<number>, gamepad: Gamepad): boolean {\n        let state = false;\n\n        for (let i = 0; i < mapping.length; i++) {\n            const button: GamepadButton | number = gamepad.buttons[mapping[i]];\n\n            state = state || (typeof button === 'object' ? button.pressed : button >= 0.5);\n        }\n\n        return state;\n    }\n\n    private _updateJoystickState(gamepad: Gamepad, joystickIndex: number): void {\n        if (!this._joysticks || joystickIndex >= this._joysticks.length) {\n            return;\n        }\n\n        const joystick = this._joysticksShadow[joystickIndex];\n\n        joystick[MappingButton.left].toggle(this._readState(standardMappings[MappingButton.left], gamepad));\n        joystick[MappingButton.right].toggle(this._readState(standardMappings[MappingButton.right], gamepad));\n        joystick[MappingButton.up].toggle(this._readState(standardMappings[MappingButton.up], gamepad));\n        joystick[MappingButton.down].toggle(this._readState(standardMappings[MappingButton.down], gamepad));\n        joystick[MappingButton.fire].toggle(this._readState(standardMappings[MappingButton.fire], gamepad));\n\n        if (gamepad.axes[0] < -0.5 || gamepad.axes[2] < -0.5) {\n            joystick[MappingButton.left].toggle(true);\n        }\n\n        if (gamepad.axes[0] > 0.5 || gamepad.axes[2] > 0.5) {\n            joystick[MappingButton.right].toggle(true);\n        }\n\n        if (gamepad.axes[1] < -0.5 || gamepad.axes[3] < -0.5) {\n            joystick[MappingButton.up].toggle(true);\n        }\n\n        if (gamepad.axes[1] > 0.5 || gamepad.axes[3] > 0.5) {\n            joystick[MappingButton.down].toggle(true);\n        }\n    }\n\n    private _initShadows(): void {\n        if (this._joysticks) {\n            for (let i = 0; i < this._joysticks.length; i++) {\n                const original = this._joysticks[i],\n                    shadow = this._joysticksShadow[i];\n\n                shadow[MappingButton.left].setState(original.getLeft().peek());\n                shadow[MappingButton.right].setState(original.getRight().peek());\n                shadow[MappingButton.up].setState(original.getUp().peek());\n                shadow[MappingButton.down].setState(original.getDown().peek());\n                shadow[MappingButton.fire].setState(original.getFire().peek());\n            }\n        }\n\n        if (this._start) {\n            this._startShadow.setState(this._start.peek());\n        }\n\n        if (this._select) {\n            this._selectShadow.setState(this._select.peek());\n        }\n    }\n\n    private _syncShadows(): void {\n        if (this._joysticks) {\n            for (let i = 0; i < this._joysticks.length; i++) {\n                const original = this._joysticks[i],\n                    shadow = this._joysticksShadow[i];\n\n                shadow[MappingButton.left].sync(original.getLeft());\n                shadow[MappingButton.right].sync(original.getRight());\n                shadow[MappingButton.up].sync(original.getUp());\n                shadow[MappingButton.down].sync(original.getDown());\n                shadow[MappingButton.fire].sync(original.getFire());\n            }\n        }\n\n        if (this._start) {\n            this._startShadow.sync(this._start);\n        }\n\n        if (this._select) {\n            this._selectShadow.sync(this._select);\n        }\n    }\n\n    private _probeGamepads(): void {\n        let cnt = 0;\n\n        const gamepads = navigator.getGamepads();\n\n        for (let i = 0; i < gamepads.length; i++) {\n            if (gamepads[i]) {\n                cnt++;\n            }\n        }\n\n        if (cnt !== this._gamepadCount) {\n            this._gamepadCount = cnt;\n            this.gamepadCountChanged.dispatch(this._gamepadCount);\n        }\n    }\n\n    private _onGamepadConnect = () => this._probeGamepads();\n    private _onGamepadDisconnect = () => this._probeGamepads();\n\n    gamepadCountChanged = new Event<number>();\n\n    private _bound = false;\n    private _gamepadCount = 0;\n    private _lastPoll = 0;\n\n    private _joysticks: Array<DigitalJoystickInterface> = null;\n    private _start: SwitchInterface = null;\n    private _select: SwitchInterface = null;\n\n    private _joysticksShadow: Array<ShadowJoystick> = null;\n    private _startShadow: ShadowSwitch = null;\n    private _selectShadow: ShadowSwitch = null;\n}\n\nclass ShadowSwitch {\n    toggle(state: boolean): void {\n        if (state === this._state) {\n            return;\n        }\n\n        this._state = state;\n        this._dirty = true;\n    }\n\n    setState(state: boolean): void {\n        this._state = state;\n        this._dirty = false;\n    }\n\n    sync(swtch: SwitchInterface): void {\n        if (this._dirty) {\n            swtch.toggle(this._state);\n            this._dirty = false;\n        }\n    }\n\n    private _state = false;\n    private _dirty = false;\n}\n\ninterface ShadowJoystick {\n    [button: string]: ShadowSwitch;\n}\n\nfunction createShadowJoystick(): ShadowJoystick {\n    return {\n        [MappingButton.left]: new ShadowSwitch(),\n        [MappingButton.right]: new ShadowSwitch(),\n        [MappingButton.up]: new ShadowSwitch(),\n        [MappingButton.down]: new ShadowSwitch(),\n        [MappingButton.fire]: new ShadowSwitch()\n    };\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport PaddleInterface from '../../machine/io/PaddleInterface';\n\nexport default class MouseAsPaddleDriver {\n    bind(paddle: PaddleInterface): void {\n        if (this._paddle) {\n            return;\n        }\n\n        this._paddle = paddle;\n        this._x = -1;\n\n        document.addEventListener('mousemove', this._listener);\n    }\n\n    unbind(): void {\n        if (!this._paddle) {\n            return;\n        }\n\n        document.removeEventListener('mousemove', this._listener);\n        this._paddle = null;\n    }\n\n    private _onDocumentMouseMove(e: MouseEvent) {\n        if (this._x >= 0) {\n            const dx = e.screenX - this._x;\n            let value = this._paddle.getValue();\n\n            value += -dx / window.innerWidth / 0.9;\n            if (value < 0) {\n                value = 0;\n            }\n            if (value > 1) {\n                value = 1;\n            }\n\n            this._paddle.setValue(value);\n        }\n\n        this._x = e.screenX;\n    }\n\n    private _paddle: PaddleInterface;\n    private _x = -1;\n    private _listener: (e: MouseEvent) => void = this._onDocumentMouseMove.bind(this);\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport VideoEndpointInterface from './VideoEndpointInterface';\nimport PoolMemberInterface from '../../tools/pool/PoolMemberInterface';\nimport VideoDriverInterface from './VideoDriverInterface';\n\nconst SMOOTHING_PROPS = [\n    'imageSmoothingEnabled',\n    'mozImageSmoothingEnabled',\n    'webkitImageSmoothingEnabled',\n    'msImageSmoothingEnabled'\n];\n\nconst INITIAL_RENDER_CANVAS_SIZE = 100;\n\nexport default class SimpleCanvasVideo implements VideoDriverInterface {\n    constructor(private _canvas: HTMLCanvasElement, private _aspect = 4 / 3) {\n        this._context = this._canvas.getContext('2d');\n\n        this._renderCanvas = document.createElement('canvas');\n        this._renderCanvas.width = this._renderCanvas.height = INITIAL_RENDER_CANVAS_SIZE;\n        this._renderContext = this._renderCanvas.getContext('2d');\n    }\n\n    resize(width?: number, height?: number): this {\n        if (typeof width === 'undefined' || typeof height === 'undefined') {\n            width = this._canvas.clientWidth;\n            height = this._canvas.clientHeight;\n        }\n\n        let pixelRatio = window.devicePixelRatio || 1;\n        if (this._video) {\n            const w = this._video.getWidth(),\n                h = this._video.getHeight();\n\n            if (height * this._aspect <= width) {\n                if (height >= 3 * h && height * this._aspect >= 3 * w) {\n                    pixelRatio = 1;\n                }\n            } else {\n                if (width >= 3 * w && width / this._aspect >= 3 * h) {\n                    pixelRatio = 1;\n                }\n            }\n        }\n        this._canvas.width = width * pixelRatio;\n        this._canvas.height = height * pixelRatio;\n\n        this._clearCanvas();\n        this._recalculateBlittingMetrics();\n        this._applyInterpolationSettings();\n\n        if (this._video) {\n            this._blitToCanvas();\n        }\n\n        return this;\n    }\n\n    init(): this {\n        this.enableInterpolation(true);\n        this._clearRenderCanvas();\n        this.resize();\n\n        return this;\n    }\n\n    close(): this {\n        return this;\n    }\n\n    enableSyncRendering(syncRendering: boolean): this {\n        if (syncRendering === this._syncRendering) {\n            return this;\n        }\n\n        this._cancelPendingFrame();\n\n        this._syncRendering = syncRendering;\n\n        return this;\n    }\n\n    syncRenderingEnabled(): boolean {\n        return this._syncRendering;\n    }\n\n    bind(video: VideoEndpointInterface): this {\n        if (this._video) {\n            return this;\n        }\n\n        this._video = video;\n\n        this._videoWidth = this._renderCanvas.width = this._video.getWidth();\n        this._videoHeight = this._renderCanvas.height = this._video.getHeight();\n\n        this.resize();\n        this._clearRenderCanvas();\n\n        this._video.newFrame.addHandler(SimpleCanvasVideo._frameHandler, this);\n\n        return this;\n    }\n\n    unbind(): this {\n        if (!this._video) {\n            return this;\n        }\n\n        this._video.newFrame.removeHandler(SimpleCanvasVideo._frameHandler, this);\n        this._video = null;\n\n        this._cancelPendingFrame();\n        this._clearCanvas();\n\n        return this;\n    }\n\n    enableInterpolation(enable: boolean): this {\n        if (this._interpolate === enable) {\n            return this;\n        }\n\n        this._interpolate = enable;\n\n        this._applyInterpolationSettings();\n\n        return this;\n    }\n\n    interpolationEnabled(): boolean {\n        return this._interpolate;\n    }\n\n    getCanvas(): HTMLCanvasElement {\n        return this._canvas;\n    }\n\n    private static _frameHandler(imageDataPoolMember: PoolMemberInterface<ImageData>, self: SimpleCanvasVideo): void {\n        if (self._pendingFrame) {\n            self._pendingFrame.release();\n        }\n\n        self._pendingFrame = imageDataPoolMember;\n\n        if (self._syncRendering) {\n            if (!self._animationFrameHandle) {\n                self._scheduleDraw();\n            }\n        } else {\n            self._draw();\n        }\n    }\n\n    private _clearCanvas(): void {\n        this._context.fillStyle = 'solid black';\n        this._context.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n\n    private _clearRenderCanvas(): void {\n        this._renderContext.fillStyle = 'solid black';\n        this._renderContext.fillRect(0, 0, this._renderCanvas.width, this._renderCanvas.height);\n    }\n\n    private _draw(): void {\n        this._blitToRenderCanvas();\n        this._blitToCanvas();\n\n        this._pendingFrame.release();\n        this._pendingFrame = null;\n    }\n\n    private _blitToRenderCanvas(): void {\n        this._renderContext.putImageData(this._pendingFrame.get(), 0, 0);\n    }\n\n    private _blitToCanvas(): void {\n        this._context.drawImage(\n            this._renderCanvas,\n            0,\n            0,\n            this._videoWidth,\n            this._videoHeight,\n            this._renderX,\n            this._renderY,\n            this._renderWidth,\n            this._renderHeight\n        );\n    }\n\n    private _scheduleDraw(): void {\n        if (!this._animationFrameHandle) {\n            this._animationFrameHandle = requestAnimationFrame(() => {\n                this._draw();\n                this._animationFrameHandle = 0;\n            });\n        }\n    }\n\n    private _cancelPendingFrame(): void {\n        if (this._animationFrameHandle) {\n            cancelAnimationFrame(this._animationFrameHandle);\n            this._animationFrameHandle = 0;\n        }\n\n        if (this._pendingFrame) {\n            this._pendingFrame.release();\n            this._pendingFrame = null;\n        }\n    }\n\n    private _recalculateBlittingMetrics(): void {\n        const targetWidth = this._canvas.width,\n            targetHeight = this._canvas.height;\n\n        if (this._aspect * targetHeight <= targetWidth) {\n            this._renderHeight = targetHeight;\n            this._renderWidth = this._aspect * targetHeight;\n            this._renderY = 0;\n            this._renderX = Math.floor((targetWidth - this._renderWidth) / 2);\n        } else {\n            this._renderHeight = targetWidth / this._aspect;\n            this._renderWidth = targetWidth;\n            this._renderY = Math.floor((targetHeight - this._renderHeight) / 2);\n            this._renderX = 0;\n        }\n    }\n\n    private _applyInterpolationSettings(): void {\n        for (const prop of SMOOTHING_PROPS) {\n            (this._context as any)[prop] = this._interpolate;\n        }\n    }\n\n    private _syncRendering = true;\n    private _animationFrameHandle = 0;\n    private _pendingFrame: PoolMemberInterface<ImageData> = null;\n\n    private _context: CanvasRenderingContext2D;\n    private _video: VideoEndpointInterface = null;\n\n    private _renderCanvas: HTMLCanvasElement;\n    private _renderContext: CanvasRenderingContext2D;\n\n    private _interpolate = true;\n\n    private _renderX: number;\n    private _renderY: number;\n    private _renderWidth: number;\n    private _renderHeight: number;\n\n    private _videoWidth: number;\n    private _videoHeight: number;\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Mutex } from 'async-mutex';\n\nimport ChannelInterface from './audio/ChannelInterface';\nimport WaveformChannel from './audio/WaveformChannel';\nimport PCMChannel from './audio/PCMChannel';\n\nimport WaveformAudioOutputInterface from '../../machine/io/WaveformAudioOutputInterface';\nimport PCMAudioEndpointInterface from './PCMAudioEndpointInterface';\n\nconst audioNeedsInteraction = !!navigator.platform.match(/iPhone|iPad|iPod/) || !!(window as any).safari;\nconst INTERACTION_EVENTS = ['touchstart', 'click', 'keydown'];\n\ntype AudioContextType = typeof AudioContext;\n\ndeclare namespace window {\n    const webkitAudioContext: AudioContextType;\n    // tslint:disable-next-line:variable-name\n    const AudioContext: AudioContextType;\n}\n\nconst audioContextCtor = window.AudioContext || window.webkitAudioContext;\n\nclass PreallocatedContext {\n    constructor() {\n        if (!audioContextCtor) {\n            return;\n        }\n\n        this.context = new audioContextCtor();\n\n        try {\n            this.context.destination.channelCount = 1;\n        } catch (e) {\n            console.warn('audio driver: failed to set channel count');\n        }\n\n        INTERACTION_EVENTS.forEach(event => document.addEventListener(event, this._interactionListener));\n    }\n\n    stopListening(): void {\n        INTERACTION_EVENTS.forEach(event => document.removeEventListener(event, this._interactionListener));\n    }\n\n    private _interactionListener = () => {\n        const context = this.context;\n\n        this.interactionRequired = false;\n        INTERACTION_EVENTS.forEach(event => document.removeEventListener(event, this._interactionListener));\n\n        this.mutex.runExclusive(() => {\n            context.resume();\n\n            return new Promise(r =>\n                setTimeout(() => {\n                    context.suspend();\n                    r();\n                }, 100)\n            );\n        });\n    };\n\n    public readonly mutex = new Mutex();\n    public readonly context: AudioContext = null;\n    public interactionRequired = true;\n}\n\nlet preallocatedContext = audioNeedsInteraction ? new PreallocatedContext() : null;\n\nclass WebAudioDriver {\n    constructor(waveformChannels = 0, pcmChannels = 0, fragmentSize?: number) {\n        this._waveformChannels = new Array<WaveformChannel>(waveformChannels);\n        this._pcmChannels = new Array<PCMChannel>(pcmChannels);\n\n        for (let i = 0; i < waveformChannels; i++) {\n            this._waveformChannels[i] = new WaveformChannel(this._cache);\n        }\n\n        for (let i = 0; i < pcmChannels; i++) {\n            this._pcmChannels[i] = new PCMChannel(fragmentSize);\n        }\n\n        this._channels = [...this._waveformChannels, ...this._pcmChannels];\n    }\n\n    init(): void {\n        if (preallocatedContext) {\n            const p = preallocatedContext;\n            preallocatedContext = new PreallocatedContext();\n\n            this._context = p.context;\n            p.stopListening();\n\n            this._mutex = p.mutex;\n\n            if (p.interactionRequired) {\n                INTERACTION_EVENTS.forEach(event => document.addEventListener(event, this._touchListener, true));\n            }\n        } else {\n            if (!audioContextCtor) {\n                throw new Error(`web audio is not supported by runtime`);\n            }\n\n            this._context = new audioContextCtor();\n\n            try {\n                this._context.destination.channelCount = 1;\n            } catch (e) {\n                console.warn('audio driver: failed to set channel count');\n            }\n        }\n\n        this._merger = this._context.createChannelMerger(this._channels.length);\n        this._merger.connect(this._context.destination);\n\n        this._channels.forEach(channel => channel.init(this._context, this._merger));\n    }\n\n    bind(\n        waveformSources: Array<WaveformAudioOutputInterface> = [],\n        pcmSources: Array<PCMAudioEndpointInterface> = []\n    ): void {\n        if (this._isBound) {\n            return;\n        }\n\n        if (waveformSources.length !== this._waveformChannels.length) {\n            throw new Error(\n                `invalid number of waveform sources: expected ${this._waveformChannels.length}, got ${\n                    waveformSources.length\n                }`\n            );\n        }\n\n        if (pcmSources.length !== this._pcmChannels.length) {\n            throw new Error(\n                `invalid number of waveform sources: expected ${this._pcmChannels.length}, got ${pcmSources.length}`\n            );\n        }\n\n        this._waveformChannels.forEach((channel, i) => channel.bind(waveformSources[i]));\n        this._pcmChannels.forEach((channel, i) => channel.bind(pcmSources[i]));\n\n        this._isBound = true;\n\n        this.resume();\n    }\n\n    unbind(): void {\n        if (!this._isBound) {\n            return;\n        }\n\n        this._channels.forEach(channel => channel.unbind());\n\n        this._isBound = false;\n\n        this.pause();\n    }\n\n    setMasterVolume(channel: number, volume: number): void {\n        this._channels[channel].setMasterVolume(volume);\n    }\n\n    pause(): Promise<void> {\n        return this._mutex.runExclusive(() => {\n            this._suspended = true;\n\n            return new Promise(resolve => {\n                this._context.suspend().then(resolve, resolve);\n                setTimeout(resolve, 200);\n            });\n        });\n    }\n\n    resume(): Promise<void> {\n        return this._mutex.runExclusive(() => {\n            this._suspended = false;\n\n            return new Promise(resolve => {\n                this._context.resume().then(resolve, resolve);\n                setTimeout(resolve, 200);\n            });\n        });\n    }\n\n    close(): void {\n        this._mutex.runExclusive(() => this._context.close());\n    }\n\n    private _touchListener = () => {\n        INTERACTION_EVENTS.forEach(event => document.removeEventListener(event, this._touchListener, true));\n\n        if (!this._context) {\n            return;\n        }\n\n        this._context.resume();\n\n        setTimeout(() => {\n            this._mutex.runExclusive(() => (this._suspended ? this._context.suspend() : this._context.resume()));\n        }, 10);\n    };\n\n    private _context: AudioContext = null;\n    private _merger: ChannelMergerNode = null;\n    private _waveformChannels: Array<WaveformChannel> = null;\n    private _pcmChannels: Array<PCMChannel> = null;\n    private _channels: Array<ChannelInterface> = null;\n    private _cache = new Map<number, AudioBuffer>();\n    private _mutex = new Mutex();\n\n    private _suspended = true;\n\n    private _isBound = false;\n}\n\nexport { WebAudioDriver as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport ResamplerInterface from './ResamplerInterface';\n\nclass LinearReasmpler implements ResamplerInterface {\n    constructor() {\n        this.reset(1, 1);\n    }\n\n    reset(sourceRate: number, targetRate: number) {\n        this._ratio = sourceRate / targetRate;\n        this._needsData = false;\n        this._fractionalIndex = 0;\n\n        for (let i = 0; i < 2; i++) {\n            this._buffer[i] = 0;\n        }\n    }\n\n    get(): number {\n        const x = (1 - this._fractionalIndex) * this._buffer[0] + this._fractionalIndex * this._buffer[1];\n\n        this._fractionalIndex += this._ratio;\n        if (this._fractionalIndex > 1) {\n            this._fractionalIndex -= 1;\n            this._needsData = true;\n        }\n\n        return x;\n    }\n\n    push(sample: number): void {\n        this._buffer[0] = this._buffer[1];\n        this._buffer[1] = sample;\n\n        this._needsData = false;\n    }\n\n    needsData(): boolean {\n        return this._needsData;\n    }\n\n    private _buffer = new Float32Array(2);\n    private _fractionalIndex = 0;\n    private _needsData = false;\n\n    private _ratio = 0;\n}\n\nexport { LinearReasmpler as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport ChannelInterface from './ChannelInterface';\nimport PCMAudioEndpointInterface from '../PCMAudioEndpointInterface';\nimport PoolMemberInterface from '../../../tools/pool/PoolMemberInterface';\nimport RingBuffer from '../../../tools/RingBuffer';\nimport ResamplerInterface from './ResamplerInterface';\nimport LinearReasmpler from './LinearResampler';\n\nclass PCMChannel implements ChannelInterface {\n    constructor(private _hostFragmentSize = 1024) {}\n\n    init(context: AudioContext, target: AudioNode) {\n        this._outputSampleRate = context.sampleRate;\n\n        this._gain = context.createGain();\n        this._gain.gain.value = this._volume;\n        this._gain.connect(target);\n\n        this._processor = context.createScriptProcessor(this._hostFragmentSize, 1, 1);\n        this._bufferSize = this._processor.bufferSize;\n\n        this._processor.connect(this._gain);\n        this._processor.onaudioprocess = e => this._processAudio(e);\n\n        const buffer = context.createBuffer(1, 1, context.sampleRate);\n        buffer.getChannelData(0).set([0]);\n    }\n\n    bind(audio: PCMAudioEndpointInterface): void {\n        this.unbind();\n\n        this._audio = audio;\n        this._fragmentSize = audio.getFrameSize();\n        this._inputSampleRate = audio.getSampleRate();\n        this._fragmentIndex = 0;\n        this._lastFragment = null;\n        this._bufferUnderrun = true;\n        this._fragmentRing = new RingBuffer<PoolMemberInterface<Float32Array>>(\n            Math.ceil(4 * this._bufferSize / this._outputSampleRate / this._fragmentSize * this._inputSampleRate)\n        );\n\n        this._audio.newFrame.addHandler(PCMChannel._onNewFragment, this);\n\n        this._resampler.reset(this._inputSampleRate, this._outputSampleRate);\n    }\n\n    unbind() {\n        if (!this._audio) {\n            return;\n        }\n\n        this._audio.newFrame.removeHandler(PCMChannel._onNewFragment, this);\n\n        if (this._lastFragment) {\n            this._lastFragment.release();\n            this._lastFragment = null;\n        }\n\n        if (this._currentFragment) {\n            this._currentFragment.release();\n            this._currentFragment = null;\n        }\n\n        if (this._fragmentRing) {\n            this._fragmentRing.forEach(b => b.release());\n            this._fragmentRing.clear();\n            this._fragmentRing = null;\n        }\n    }\n\n    setMasterVolume(volume: number): void {\n        this._volume = volume;\n    }\n\n    private static _onNewFragment(fragment: PoolMemberInterface<Float32Array>, self: PCMChannel): void {\n        self._fragmentRing.push(fragment);\n\n        if (!self._currentFragment) {\n            self._currentFragment = self._fragmentRing.pop();\n            self._fragmentIndex = 0;\n        }\n    }\n\n    private _processAudio(e: AudioProcessingEvent): void {\n        if (!this._audio) {\n            return;\n        }\n\n        const outputBuffer = e.outputBuffer.getChannelData(0);\n        let bufferIndex = 0;\n\n        const fillBuffer = (until: number) => {\n            const previousFragmentBuffer = this._lastFragment && this._lastFragment.get();\n\n            while (bufferIndex < until) {\n                if (this._resampler.needsData()) {\n                    this._resampler.push(\n                        (this._audio && this._audio.isPaused()) || !previousFragmentBuffer\n                            ? 0\n                            : previousFragmentBuffer[this._fragmentIndex++] * this._volume\n                    );\n\n                    if (this._fragmentIndex >= this._fragmentSize) {\n                        this._fragmentIndex = 0;\n                    }\n                }\n\n                outputBuffer[bufferIndex++] = this._resampler.get();\n            }\n        };\n\n        // Give the emulation half a fragment of head start when recovering from an underrun\n        if (this._currentFragment && this._bufferUnderrun) {\n            fillBuffer(this._bufferSize >>> 1);\n            this._bufferUnderrun = false;\n        }\n\n        let fragmentBuffer = this._currentFragment && this._currentFragment.get();\n\n        while (bufferIndex < this._bufferSize && this._currentFragment) {\n            if (this._resampler.needsData()) {\n                this._resampler.push(fragmentBuffer[this._fragmentIndex++] * this._volume);\n\n                if (this._fragmentIndex >= this._fragmentSize) {\n                    this._fragmentIndex = 0;\n\n                    if (this._lastFragment) {\n                        this._lastFragment.release();\n                    }\n\n                    this._lastFragment = this._currentFragment;\n                    this._currentFragment = this._fragmentRing.pop();\n\n                    fragmentBuffer = this._currentFragment && this._currentFragment.get();\n                }\n            }\n\n            outputBuffer[bufferIndex++] = this._resampler.get();\n        }\n\n        if (bufferIndex < this._bufferSize) {\n            this._bufferUnderrun = true;\n        }\n\n        fillBuffer(this._bufferSize);\n    }\n\n    private _outputSampleRate = 0;\n    private _bufferSize = 0;\n    private _volume = 1;\n\n    private _gain: GainNode = null;\n    private _processor: ScriptProcessorNode = null;\n    private _bufferUnderrun = false;\n\n    private _fragmentRing: RingBuffer<PoolMemberInterface<Float32Array>> = null;\n\n    private _fragmentSize = 0;\n    private _inputSampleRate = 0;\n    private _fragmentIndex = 0;\n    private _currentFragment: PoolMemberInterface<Float32Array> = null;\n    private _lastFragment: PoolMemberInterface<Float32Array> = null;\n\n    private _audio: PCMAudioEndpointInterface;\n\n    private _resampler: ResamplerInterface = new LinearReasmpler();\n}\n\nexport { PCMChannel as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport ChannelInterface from './ChannelInterface';\nimport WaveformAudioOutputInterface from '../../../machine/io/WaveformAudioOutputInterface';\n\nclass WaveformChannel implements ChannelInterface {\n    constructor(private _cache: Map<number, AudioBuffer>) {}\n\n    init(context: AudioContext, target: AudioNode): void {\n        this._context = context;\n\n        this._gain = this._context.createGain();\n        this._gain.connect(target);\n    }\n\n    bind(target: WaveformAudioOutputInterface): void {\n        if (this._audio) {\n            return;\n        }\n\n        this._audio = target;\n        this._volume = this._audio.getVolume();\n        this._updateGain();\n\n        this._audio.volumeChanged.addHandler(WaveformChannel._onVolumeChanged, this);\n        this._audio.bufferChanged.addHandler(WaveformChannel._onBufferChanged, this);\n        this._audio.stop.addHandler(WaveformChannel._onStop, this);\n    }\n\n    unbind(): void {\n        if (!this._audio) {\n            return;\n        }\n\n        this._audio.volumeChanged.removeHandler(WaveformChannel._onVolumeChanged, this);\n        this._audio.bufferChanged.removeHandler(WaveformChannel._onBufferChanged, this);\n        this._audio.stop.removeHandler(WaveformChannel._onStop, this);\n\n        if (this._source) {\n            this._source.stop();\n            this._source = null;\n        }\n\n        this._audio = null;\n    }\n\n    setMasterVolume(volume: number): void {\n        this._masterVolume = volume;\n        this._updateGain();\n    }\n\n    private static _onVolumeChanged(volume: number, self: WaveformChannel): void {\n        self._volume = volume;\n        self._updateGain();\n    }\n\n    private static _onBufferChanged(key: number, self: WaveformChannel): void {\n        if (!self._cache.has(key)) {\n            const sampleBuffer = self._audio.getBuffer(key),\n                audioBuffer = self._context.createBuffer(1, sampleBuffer.getLength(), sampleBuffer.getSampleRate());\n\n            audioBuffer.getChannelData(0).set(sampleBuffer.getContent());\n            self._cache.set(key, audioBuffer);\n        }\n\n        const buffer = self._cache.get(key),\n            source = self._context.createBufferSource();\n\n        if (self._source) {\n            self._source.stop();\n        }\n\n        source.loop = true;\n        source.buffer = buffer;\n        source.connect(self._gain);\n        source.start();\n\n        self._source = source;\n    }\n\n    private static _onStop(payload: void, self: WaveformChannel): void {\n        if (self._source) {\n            self._source.stop();\n            self._source = null;\n        }\n    }\n\n    private _updateGain(): void {\n        this._gain.gain.value = this._volume * this._masterVolume;\n    }\n\n    private _context: AudioContext = null;\n    private _source: AudioBufferSourceNode = null;\n    private _gain: GainNode = null;\n    private _audio: WaveformAudioOutputInterface = null;\n\n    private _volume = 0;\n    private _masterVolume = 1;\n}\n\nexport { WaveformChannel as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport PoolMemberInterface from '../../../tools/pool/PoolMemberInterface';\nimport VideoEndpointInterface from '../VideoEndpointInterface';\nimport VideoDriverInterface from '../VideoDriverInterface';\n\nimport {\n    vertexShader as vertexShaderSource,\n    fragmentShaderPlain as fragmentShaderPlainSource,\n    fragmentShaderPov as fragmentShaderPovSource\n} from './shader';\n\nconst CONTEXT_IDS = ['webgl', 'experimental-webgl'];\n\nclass WebglVideoDriver implements VideoDriverInterface {\n    constructor(private _canvas: HTMLCanvasElement, config: WebglVideoDriver.Config = {}) {\n        if (typeof config.aspect !== 'undefined') {\n            this._aspect = config.aspect;\n        }\n\n        if (typeof config.gamma !== 'undefined') {\n            this._gamma = config.gamma;\n        }\n\n        if (typeof config.povEmulation !== 'undefined') {\n            this._povEmulation = config.povEmulation;\n        }\n\n        for (const contextId of CONTEXT_IDS) {\n            if (this._gl) {\n                break;\n            }\n\n            this._gl = this._canvas.getContext(contextId, {\n                alpha: false\n            }) as WebGLRenderingContext;\n        }\n\n        if (!this._gl) {\n            throw new Error('unable to acquire WebGL context');\n        }\n\n        this._createTextureArrays();\n    }\n\n    init(): this {\n        this._gl.clearColor(0, 0, 0, 1);\n\n        this._createProgram();\n        this._createBuffers();\n        this.resize();\n        this._allocateTextures();\n        this._configureTextures();\n        this._setupAttribs();\n\n        this.enableInterpolation(true);\n\n        return this;\n    }\n\n    close(): this {\n        if (this._program) {\n            this._gl.deleteProgram(this._program);\n        }\n\n        if (this._vertexShader) {\n            this._gl.deleteShader(this._vertexShader);\n        }\n\n        if (this._fragmentShader) {\n            this._gl.deleteShader(this._fragmentShader);\n        }\n\n        if (this._textures) {\n            this._textures.forEach(t => t && this._gl.deleteTexture(t));\n        }\n\n        if (this._imageData) {\n            this._imageData.forEach(i => i && i.release());\n        }\n\n        if (this._vertexBuffer) {\n            this._gl.deleteBuffer(this._vertexBuffer);\n        }\n\n        if (this._textureCoordinateBuffer) {\n            this._gl.deleteBuffer(this._textureCoordinateBuffer);\n        }\n\n        return this;\n    }\n\n    resize(width?: number, height?: number): this {\n        if (typeof width === 'undefined' || typeof height === 'undefined') {\n            width = this._canvas.clientWidth;\n            height = this._canvas.clientHeight;\n        }\n\n        let pixelRatio = window.devicePixelRatio || 1;\n        if (this._video) {\n            const w = this._video.getWidth(),\n                h = this._video.getHeight();\n\n            if (height * this._aspect <= width) {\n                if (height >= 3 * h && height * this._aspect >= 3 * w) {\n                    pixelRatio = 1;\n                }\n            } else {\n                if (width >= 3 * w && width / this._aspect >= 3 * h) {\n                    pixelRatio = 1;\n                }\n            }\n        }\n\n        this._canvas.width = width * pixelRatio;\n        this._canvas.height = height * pixelRatio;\n        this._gl.viewport(0, 0, width * pixelRatio, height * pixelRatio);\n        this._recalculateVertexBuffer();\n\n        if (this._video) {\n            this._draw();\n        }\n\n        return this;\n    }\n\n    getCanvas(): HTMLCanvasElement {\n        return this._canvas;\n    }\n\n    bind(video: VideoEndpointInterface): this {\n        if (this._video) {\n            return this;\n        }\n\n        this.resize();\n\n        this._video = video;\n        this._video.newFrame.addHandler(WebglVideoDriver._frameHandler, this);\n\n        return this;\n    }\n\n    unbind(): this {\n        this._cancelDraw();\n\n        if (!this._video) {\n            return this;\n        }\n\n        this._video.newFrame.removeHandler(WebglVideoDriver._frameHandler, this);\n        this._video = null;\n\n        return this;\n    }\n\n    enableInterpolation(enabled: boolean): this {\n        if (enabled === this._interpolation) {\n            return this;\n        }\n\n        this._interpolation = enabled;\n        this._configureTextures();\n\n        return this;\n    }\n\n    interpolationEnabled(): boolean {\n        return this._interpolation;\n    }\n\n    enableSyncRendering(syncRendering: boolean): this {\n        if (syncRendering === this._syncRendering) {\n            return this;\n        }\n\n        if (!syncRendering) {\n            this._cancelDraw();\n        }\n\n        this._syncRendering = syncRendering;\n\n        return this;\n    }\n\n    syncRenderingEnabled(): boolean {\n        return this._syncRendering;\n    }\n\n    setGamma(gamma: number): this {\n        this._gamma = gamma;\n\n        return this;\n    }\n\n    getGamma(): number {\n        return this._gamma;\n    }\n\n    enablePovEmulation(emulatePov: boolean): this {\n        if (emulatePov === this._povEmulation) {\n            return this;\n        }\n\n        this._povEmulation = emulatePov;\n        this._reinit();\n    }\n\n    povEmulationEnabled(): boolean {\n        return this._povEmulation;\n    }\n\n    private static _frameHandler(imageDataPoolMember: PoolMemberInterface<ImageData>, self: WebglVideoDriver): void {\n        const oldImageData = self._imageData[self._currentFrameIndex];\n\n        self._imageData[self._currentFrameIndex] = imageDataPoolMember;\n        self._imageDataGeneration[self._currentFrameIndex]++;\n        self._currentFrameIndex = (self._currentFrameIndex + 1) % self._numberOfFramesToCompose;\n\n        if (self._frameCount < self._numberOfFramesToCompose) {\n            self._frameCount++;\n        } else {\n            if (self._syncRendering) {\n                self._scheduleDraw();\n            } else {\n                self._draw();\n            }\n            oldImageData.release();\n        }\n    }\n\n    private _createTextureArrays(): void {\n        this._numberOfFramesToCompose = this._povEmulation ? 3 : 1;\n\n        if (this._textures) {\n            this._textures.forEach(t => t && this._gl.deleteTexture(t));\n        }\n\n        if (this._imageData) {\n            this._imageData.forEach(i => i && i.release());\n        }\n\n        this._textures = new Array<WebGLTexture>(this._numberOfFramesToCompose);\n        this._imageData = new Array<PoolMemberInterface<ImageData>>(this._numberOfFramesToCompose);\n        this._imageDataGeneration = new Array<number>(this._numberOfFramesToCompose);\n        this._textureGeneration = new Array<number>(this._numberOfFramesToCompose);\n\n        for (let i = 0; i < this._numberOfFramesToCompose; i++) {\n            this._imageDataGeneration[i] = 0;\n            this._textureGeneration[i] = -1;\n        }\n    }\n\n    private _reinit(): void {\n        this._createTextureArrays();\n        this._createProgram();\n        this._allocateTextures();\n        this._configureTextures();\n        this._setupAttribs();\n\n        this._frameCount = 0;\n        this._currentFrameIndex = 0;\n    }\n\n    private _scheduleDraw(): void {\n        if (this._animationFrameHandle) {\n            return;\n        }\n\n        this._animationFrameHandle = requestAnimationFrame(() => (this._draw(), (this._animationFrameHandle = 0)));\n    }\n\n    private _cancelDraw(): void {\n        if (this._animationFrameHandle === 0) {\n            return;\n        }\n\n        cancelAnimationFrame(this._animationFrameHandle);\n        this._animationFrameHandle = 0;\n    }\n\n    private _draw(): void {\n        if (this._frameCount < this._numberOfFramesToCompose) {\n            return;\n        }\n\n        const gl = this._gl;\n\n        for (let i = 0; i < this._numberOfFramesToCompose; i++) {\n            const frameIndex =\n                (this._currentFrameIndex - i - 1 + this._numberOfFramesToCompose) % this._numberOfFramesToCompose;\n\n            if (this._textureGeneration[frameIndex] !== this._imageDataGeneration[frameIndex]) {\n                gl.activeTexture((gl as any)[`TEXTURE${frameIndex}`]);\n                gl.bindTexture(gl.TEXTURE_2D, this._textures[frameIndex]);\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._imageData[frameIndex].get());\n\n                this._textureGeneration[frameIndex] = this._imageDataGeneration[frameIndex];\n            }\n        }\n\n        for (let i = 0; i < this._numberOfFramesToCompose; i++) {\n            gl.uniform1i(\n                this._getUniformLocation(`u_Sampler${i}`),\n                (this._currentFrameIndex + this._numberOfFramesToCompose - i - 1) % this._numberOfFramesToCompose\n            );\n        }\n\n        gl.uniform1f(this._getUniformLocation('u_Gamma'), this._gamma);\n\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n    }\n\n    private _createProgram(): void {\n        const gl = this._gl,\n            vertexShader = gl.createShader(gl.VERTEX_SHADER),\n            fragmentShader = gl.createShader(gl.FRAGMENT_SHADER),\n            program = gl.createProgram();\n\n        gl.shaderSource(vertexShader, vertexShaderSource);\n        gl.compileShader(vertexShader);\n\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            throw new Error(`failed to compile vertex shader: ${gl.getShaderInfoLog(vertexShader)}`);\n        }\n\n        gl.shaderSource(fragmentShader, this._povEmulation ? fragmentShaderPovSource : fragmentShaderPlainSource);\n        gl.compileShader(fragmentShader);\n\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            throw new Error(`failed to compile fragment shader: ${gl.getShaderInfoLog(fragmentShader)}`);\n        }\n\n        gl.attachShader(program, vertexShader);\n        gl.attachShader(program, fragmentShader);\n        gl.linkProgram(program);\n\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            throw new Error(`failed to link program: ${gl.getProgramInfoLog(program)}`);\n        }\n\n        gl.useProgram(program);\n\n        if (this._program) {\n            gl.deleteProgram(this._program);\n        }\n\n        if (this._vertexShader) {\n            gl.deleteShader(this._vertexShader);\n        }\n\n        if (this._fragmentShader) {\n            gl.deleteShader(this._fragmentShader);\n        }\n\n        this._program = program;\n        this._vertexShader = vertexShader;\n        this._fragmentShader = fragmentShader;\n    }\n\n    private _allocateTextures(): void {\n        for (let i = 0; i < this._numberOfFramesToCompose; i++) {\n            this._allocateTexture(i);\n        }\n    }\n\n    private _configureTextures(): void {\n        for (let i = 0; i < this._numberOfFramesToCompose; i++) {\n            this._configureTexture(i);\n        }\n    }\n\n    private _allocateTexture(index: number): void {\n        const gl = this._gl,\n            texture = gl.createTexture();\n\n        gl.activeTexture((gl as any)[`TEXTURE${index}`]);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        this._textures[index] = texture;\n    }\n\n    private _configureTexture(index: number): void {\n        const gl = this._gl;\n\n        gl.activeTexture((gl as any)[`TEXTURE${index}`]);\n        gl.bindTexture(gl.TEXTURE_2D, this._textures[index]);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, this._interpolation ? gl.LINEAR : gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, this._interpolation ? gl.LINEAR : gl.NEAREST);\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n    }\n\n    private _createBuffers(): void {\n        const gl = this._gl,\n            vertexBuffer = gl.createBuffer(),\n            textureCoordinateBuffer = gl.createBuffer();\n\n        const textureCoordinateData = [1, 1, 0, 1, 1, 0, 0, 0];\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, textureCoordinateBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textureCoordinateData), gl.STATIC_DRAW);\n\n        this._vertexBuffer = vertexBuffer;\n        this._textureCoordinateBuffer = textureCoordinateBuffer;\n    }\n\n    private _recalculateVertexBuffer(): void {\n        const gl = this._gl,\n            targetWidth = this._canvas.width,\n            targetHeight = this._canvas.height,\n            scaleX = targetWidth > 0 ? 2 / targetWidth : 1,\n            scaleY = targetHeight > 0 ? 2 / targetHeight : 1;\n\n        let width: number, height: number, west: number, north: number;\n\n        if (this._aspect * targetHeight <= targetWidth) {\n            height = 2;\n            width = this._aspect * targetHeight * scaleX;\n            north = 1;\n            west = Math.floor(-this._aspect * targetHeight) / 2 * scaleX;\n        } else {\n            height = targetWidth / this._aspect * scaleY;\n            width = 2;\n            north = Math.floor(targetWidth / this._aspect) / 2 * scaleY;\n            west = -1;\n        }\n\n        const vertexData = [west + width, north, west, north, west + width, north - height, west, north - height];\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertexData), gl.STATIC_DRAW);\n    }\n\n    private _getAttribLocation(name: string): number {\n        const gl = this._gl,\n            location = gl.getAttribLocation(this._program, name);\n\n        if (location < 0) {\n            throw new Error(`unable to locate attribute ${name}`);\n        }\n\n        return location;\n    }\n\n    private _getUniformLocation(name: string): WebGLUniformLocation {\n        const gl = this._gl,\n            location = gl.getUniformLocation(this._program, name);\n\n        if (location < 0) {\n            throw new Error(`unable to locate uniform ${name}`);\n        }\n\n        return location;\n    }\n\n    private _setupAttribs(): void {\n        const gl = this._gl;\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n        gl.enableVertexAttribArray(this._getAttribLocation('a_VertexPosition'));\n        gl.vertexAttribPointer(this._getAttribLocation('a_VertexPosition'), 2, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._textureCoordinateBuffer);\n        gl.enableVertexAttribArray(this._getAttribLocation('a_TextureCoordinate'));\n        gl.vertexAttribPointer(this._getAttribLocation('a_TextureCoordinate'), 2, gl.FLOAT, false, 0, 0);\n    }\n\n    private _gl: WebGLRenderingContext = null;\n\n    private _vertexShader: WebGLShader;\n    private _fragmentShader: WebGLShader;\n    private _program: WebGLProgram = null;\n    private _vertexBuffer: WebGLBuffer = null;\n    private _textureCoordinateBuffer: WebGLBuffer = null;\n\n    private _numberOfFramesToCompose: number;\n    private _textures: Array<WebGLTexture>;\n    private _imageData: Array<PoolMemberInterface<ImageData>>;\n    private _imageDataGeneration: Array<number>;\n    private _textureGeneration: Array<number>;\n    private _currentFrameIndex = 0;\n    private _frameCount = 0;\n\n    private _gamma = 1;\n    private _aspect = 4 / 3;\n    private _povEmulation = true;\n\n    private _animationFrameHandle = 0;\n    private _syncRendering = true;\n\n    private _video: VideoEndpointInterface = null;\n\n    private _interpolation = true;\n}\n\nnamespace WebglVideoDriver {\n    export interface Config {\n        povEmulation?: boolean;\n        gamma?: number;\n        aspect?: number;\n    }\n}\n\nexport { WebglVideoDriver as default };\n",
    "export const vertexShader = `\n    attribute vec2 a_VertexPosition;\n    attribute vec2 a_TextureCoordinate;\n\n    varying vec2 v_TextureCoordinate;\n\n    void main() {\n        v_TextureCoordinate = a_TextureCoordinate;\n        gl_Position = vec4(a_VertexPosition, 0, 1);\n    }\n`;\n\nexport const fragmentShaderPlain = `\n    precision mediump float;\n\n    varying vec2 v_TextureCoordinate;\n\n    uniform sampler2D u_Sampler0;\n    uniform float u_Gamma;\n\n    void main() {\n        vec4 texel = texture2D(u_Sampler0, v_TextureCoordinate);\n\n        gl_FragColor = vec4(pow(texel.rgb, vec3(u_Gamma)), 1.);\n    }\n`;\n\nexport const fragmentShaderPov = `\n    precision mediump float;\n\n    varying vec2 v_TextureCoordinate;\n\n    uniform sampler2D u_Sampler0, u_Sampler1, u_Sampler2;\n    uniform float u_Gamma;\n\n    void main() {\n        vec4 compositedTexel =\n            0.4 * texture2D(u_Sampler0, v_TextureCoordinate) +\n            0.4 * texture2D(u_Sampler1, v_TextureCoordinate) +\n            0.2 * texture2D(u_Sampler2, v_TextureCoordinate);\n\n        gl_FragColor = vec4(pow(compositedTexel.rgb, vec3(u_Gamma)), 1.);\n    }\n`;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Switch from './Switch';\nimport SwitchProxy from './SwitchProxy';\nimport ControlPanel from './ControlPanel';\nimport StellaControlPanel from '../../../machine/stella/ControlPanelInterface';\n\nclass ControlPanelProxy implements ControlPanel {\n    bind(controlPanel: StellaControlPanel): void {\n        this.unbind();\n\n        this._boundControlPanel = controlPanel;\n\n        this._reset.bind(this._boundControlPanel.getResetButton());\n        this._select.bind(this._boundControlPanel.getSelectSwitch());\n        this._difficultyPlayer1.bind(this._boundControlPanel.getDifficultySwitchP0());\n        this._difficultyPlayer2.bind(this._boundControlPanel.getDifficultySwitchP1());\n        this._color.bind(this._boundControlPanel.getColorSwitch());\n\n        this._difficultyPlayer1.toggle(true);\n        this._difficultyPlayer2.toggle(true);\n    }\n\n    unbind(): void {\n        if (!this._boundControlPanel) {\n            return;\n        }\n\n        this._reset.unbind();\n        this._select.unbind();\n        this._difficultyPlayer1.unbind();\n        this._difficultyPlayer2.unbind();\n        this._color.unbind();\n\n        this._boundControlPanel = null;\n    }\n\n    reset(): Switch {\n        return this._reset;\n    }\n\n    select(): Switch {\n        return this._select;\n    }\n\n    difficultyPlayer1(): Switch {\n        return this._difficultyPlayer1;\n    }\n\n    difficultyPlayer2(): Switch {\n        return this._difficultyPlayer2;\n    }\n\n    color(): Switch {\n        return this._color;\n    }\n\n    private _reset = new SwitchProxy();\n    private _select = new SwitchProxy();\n    private _difficultyPlayer1 = new SwitchProxy();\n    private _difficultyPlayer2 = new SwitchProxy();\n    private _color = new SwitchProxy();\n\n    private _boundControlPanel: StellaControlPanel = null;\n}\n\nexport { ControlPanelProxy as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Mutex } from 'async-mutex';\nimport { EventInterface as Event, Event as EventImplementation } from 'microevent.ts';\n\nimport EmulationServiceInterface from '../../stella/service/EmulationServiceInterface';\nimport EmulationService from '../../stella/service/worker/EmulationService';\nimport DriverManager from '../../stella/service/DriverManager';\n\nimport VideoDriverInterface from '../../driver/VideoDriverInterface';\nimport CanvasVideo from '../../driver/SimpleCanvasVideo';\nimport WebglVideo from '../../driver/webgl/WebglVideo';\n\nimport AudioDriver from '../../stella/driver/WebAudio';\nimport KeyboardIO from '../../stella/driver/KeyboardIO';\nimport TouchIO from '../../stella/driver/TouchIO';\nimport Paddle from '../../driver/MouseAsPaddle';\nimport Gamepad from '../../driver/Gamepad';\nimport FullscreenDriver from '../../driver/FullscreenVideo';\n\nimport CartridgeInfo from '../../../machine/stella/cartridge/CartridgeInfo';\nimport StellaConfig from '../../../machine/stella/Config';\n\nimport { decode as decodeBase64 } from '../../../tools/base64';\n\nimport ControlPanel from './ControlPanel';\nimport ControlPanelProxy from './ControlPanelProxy';\n\n/**\n * The stellerator class and namespace. In a typical application, a single instance is\n * created and bound to a canvas element. This instance can than be used to run many\n * different ROMs during its lifetime.\n *\n * Notes on reading this documentation:\n * * All code examples are ES6\n * * The actual emulation runs on a web worker, and all methods that control emulation\n *   are asynchronous and return [ES6 Promises](http://exploringjs.com/es6/ch_promises.html)\n * * Check out the [microevent.ts](https://github.com/DirtyHairy/microevent) documentation\n *   for the event API\n *\n * Basic example:\n * ```typescript\n *     const stellerator = new Stellerator(\n *         document.getElementById('stellerator-canvas'),\n *         'js/stellerator_worker.js'\n *     );\n *\n *     stellerator.run(rom, Stellerator.TvMode.ntsc);\n * ```\n */\nclass Stellerator {\n    /**\n     * Creates an instance of Stellerator.\n     * @param canvasElt The canvas element that is used to display the TIA image.\n     * The `height` and `width` attributes of the canvas will be automatically\n     * maintained by Stellerator, so there is not requirement to set those to\n     * specific values.\n     *\n     * @param workerUrl The URL from which the web worker will be loaded.\n     * In order to avoid cross domain issues, the worker should be hosted on the same\n     * domain as the stellerator build, and this parameter should read e.g.\n     * `js/stellerator_worker.js`\n     *\n     * @param config Optional configuration to\n     * customize emulator behavior. See [[Config]] for a full explanation of the values\n     * and their default.\n     */\n    constructor(canvasElt: HTMLCanvasElement, workerUrl: string, config: Partial<Stellerator.Config> = {}) {\n        this._canvasElt = canvasElt;\n\n        this._config = {\n            smoothScaling: true,\n            simulatePov: true,\n            gamma: 1,\n            audio: true,\n            volume: 0.5,\n            enableKeyboard: true,\n            enableTouch: true,\n            touchLeftHanded: false,\n            touchJoystickSensitivity: 15,\n            keyboardTarget: document,\n            fullscreenViaKeyboard: true,\n            paddleViaMouse: true,\n            pauseViaKeyboard: true,\n            pauseViaTouch: true,\n            fullscreenViaTouch: true,\n            enableGamepad: true,\n            resetViaKeyboard: true,\n\n            ...config\n        };\n\n        this._emulationService = new EmulationService(workerUrl);\n\n        this.frequencyUpdate = this._emulationService.frequencyUpdate;\n\n        const stateChange = new EventImplementation<Stellerator.State>();\n        this._emulationService.stateChanged.addHandler(newState => stateChange.dispatch(this._mapState(newState)));\n        this.stateChange = stateChange;\n\n        this._createDrivers();\n\n        this._driverManager.addDriver(this._controlPanel, context =>\n            this._controlPanel.bind(context.getControlPanel())\n        );\n        this._driverManager.bind(this._emulationService);\n\n        this._serviceInitialized = this._emulationService.init().then(undefined, e => {\n            console.log(e);\n            throw e;\n        });\n    }\n\n    /**\n     * Set the gamma correction factor. Will take effect **only** if WebGL is available.\n     *\n     * @param gamma\n     */\n    setGamma(gamma: number): this {\n        if (this._webglVideo) {\n            this._webglVideo.setGamma(gamma);\n        }\n\n        return this;\n    }\n\n    /**\n     * Query the current gamme correction factor.\n     *\n     * @returns {number}\n     */\n    getGamma(): number {\n        return this._webglVideo ? this._webglVideo.getGamma() : 1;\n    }\n\n    /**\n     * Enable / disable persistence of vision / phosphor simulation. POV is simulated\n     * by blending several frames and will work **only** if WebGL is available.\n     *\n     * @param povEnabled\n     * @returns {this}\n     */\n    enablePovSimulation(povEnabled: boolean): this {\n        if (this._webglVideo) {\n            this._webglVideo.enablePovEmulation(povEnabled);\n        }\n\n        return this;\n    }\n\n    /**\n     * Query the state of persistence of vision / phosphor emulation.\n     *\n     * @returns {boolean}\n     */\n    isPovSimulationEnabled(): boolean {\n        return this._webglVideo ? this._webglVideo.povEmulationEnabled() : false;\n    }\n\n    /**\n     * Enable / disable smooth scaling of the TIA image.\n     *\n     * @param smoothScalingEnabled\n     * @returns {this}\n     */\n    enableSmoothScaling(smoothScalingEnabled: boolean): this {\n        this._videoDriver.enableInterpolation(smoothScalingEnabled);\n\n        return this;\n    }\n\n    /**\n     * Query whether smooth scaling of the TIA image is enabled.\n     *\n     * @returns {boolean}\n     */\n    smoothScalingEnabled(): boolean {\n        return this._videoDriver.interpolationEnabled();\n    }\n\n    /**\n     * Enable / disable fullscreen mode.\n     *\n     * @param fullscreen\n     * @returns {this}\n     */\n    toggleFullscreen(fullscreen?: boolean): this {\n        if (typeof fullscreen === 'undefined') {\n            this._fullscreenVideo.toggle();\n        } else {\n            fullscreen ? this._fullscreenVideo.engage() : this._fullscreenVideo.disengage();\n        }\n\n        return this;\n    }\n\n    /**\n     * Query if emulator is running fullscreen.\n     *\n     * @returns {boolean}\n     */\n    isFullscreen(): boolean {\n        return this._fullscreenVideo.isEngaged();\n    }\n\n    /**\n     * Change the master volume.\n     *\n     * @param volume Will be clipped to the range 0 .. 1\n     * @returns {this}\n     */\n    setVolume(volume: number): this {\n        if (this._audioDriver) {\n            this._audioDriver.setMasterVolume(Math.max(Math.min(volume, 1), 0));\n        }\n\n        return this;\n    }\n\n    /**\n     * Query whether audio has been enabled on this instance.\n     *\n     * @returns {boolean}\n     */\n    audioEnabled(): boolean {\n        return !!this._audioDriver;\n    }\n\n    /**\n     * Query the master volume.\n     *\n     * @returns {number}\n     */\n    getVolume(): number {\n        return this._audioDriver ? this._audioDriver.getMasterVolume() : 0;\n    }\n\n    /**\n     * Notify the video driver of a change of the visible dimensions (client size) of\n     * the canvas element. This will cause the driver to adjust the resolution to match.\n     */\n    resize(): this {\n        this._videoDriver.resize();\n\n        return this;\n    }\n\n    /**\n     * Query the current state of the emulation.\n     *\n     * @returns {Stellerator.State}\n     */\n    getState(): Stellerator.State {\n        return this._state;\n    }\n\n    /**\n     * Get the console control panel. This allows you to monitor and control\n     * the console switches (select, reset, difficulty P1 / P2, color / BW).\n     */\n    getControlPanel(): ControlPanel {\n        return this._controlPanel;\n    }\n\n    /**\n     * Start emulation of a cartridge image. This method is **async** and returns\n     * a promise for the resulting emulation state.\n     *\n     * **IMPORTANT:** The emulator will start up in [[State.paused]] mode. Use the `run` method\n     * below in order to start and run the emulation immediatelly.\n     *\n     * @param cartridge The cartridge image. Can be either\n     * an array / typed array of byte values or a base64 encoded string.\n     *\n     * @param tvMode The TV mode (NTSC / PAL / SECAM)\n     *\n     * @param config Optional configuration\n     * values to customize emulation behavior. See [[CartridgeConfig]] for a full list of supported\n     * settings and their defaults.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    start(\n        cartridge: ArrayLike<number> | string,\n        tvMode: Stellerator.TvMode,\n        config: Partial<Stellerator.CartridgeConfig> = {}\n    ): Promise<Stellerator.State> {\n        return this._mutex.runExclusive(async () => {\n            if (typeof cartridge === 'string') {\n                cartridge = decodeBase64(cartridge);\n            }\n\n            const stellaConfig = StellaConfig.create({\n                tvMode: this._convertTvMode(tvMode),\n                pcmAudio: true\n            });\n\n            if (typeof config.randomSeed !== 'undefined' && config.randomSeed > 0) {\n                stellaConfig.randomSeed = config.randomSeed;\n            }\n\n            if (typeof config.emulatePaddles !== 'undefined') {\n                stellaConfig.emulatePaddles = config.emulatePaddles;\n            }\n\n            if (typeof config.frameStart !== 'undefined') {\n                stellaConfig.frameStart = config.frameStart;\n            }\n\n            await this._serviceInitialized;\n\n            return (this._state = this._mapState(\n                await this._emulationService.start(cartridge, stellaConfig, config.cartridgeType)\n            ));\n        });\n    }\n\n    /**\n     * Like [[start]], but run the emulator immediatelly instead of starting\n     * in paused mode.\n     *\n     * Just like its counterpart, this method is **async** and returns a promise\n     * for the resulting emualtion state.\n     *\n     * @param cartridge The cartridge image. Can be either\n     * an array / typed array of byte values or a base64 encoded string.\n     *\n     * @param tvMode The TV mode (NTSC / PAL / SECAM)\n     *\n     * @param config Optional configuration\n     * values to customize emulation behavior. See [[CartridgeConfig]] for a full list of supported\n     * settings and their defaults.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async run(\n        cartridge: ArrayLike<number> | string,\n        tvMode: Stellerator.TvMode,\n        config: Partial<Stellerator.CartridgeConfig> = {}\n    ): Promise<Stellerator.State> {\n        if ((await this.start(cartridge, tvMode, config)) === Stellerator.State.paused) {\n            return this.resume();\n        }\n    }\n\n    /**\n     * Pause a running emulation session. This method is **async** and returns a\n     * promise for the resulting emulation state.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async pause(): Promise<Stellerator.State> {\n        await this._serviceInitialized;\n\n        return this._mutex.runExclusive(\n            async () => (this._state = this._mapState(await this._emulationService.pause()))\n        );\n    }\n\n    /**\n     * Resume a paused emulation session. This method is **async** and returns a\n     * promise for the resulting emulation state.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async resume(): Promise<Stellerator.State> {\n        await this._serviceInitialized;\n\n        return this._mutex.runExclusive(\n            async () => (this._state = this._mapState(await this._emulationService.resume()))\n        );\n    }\n\n    /**\n     * Stop a running or paused emulation session. This method is **async** and returns a\n     * promise for the resulting emulation state.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async stop(): Promise<Stellerator.State> {\n        await this._serviceInitialized;\n\n        return this._mutex.runExclusive(\n            async () => (this._state = this._mapState(await this._emulationService.stop()))\n        );\n    }\n\n    /**\n     * Reset a running emulation session. This method is **async** and returns a\n     * promise for the resulting emulation state.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async reset(): Promise<Stellerator.State> {\n        await this._serviceInitialized;\n\n        return this._mutex.runExclusive(\n            async () => (this._state = this._mapState(await this._emulationService.reset()))\n        );\n    }\n\n    /**\n     * Retrieve the last emulation error.\n     *\n     * **IMPORTANT:** Don't use this to check whether an error occurred; use [[getState]]\n     * and check for [[State.error]] instead.\n     *\n     * @returns {Error}\n     */\n    lastError(): Error {\n        return this._emulationService.getLastError();\n    }\n\n    private _convertTvMode(tvMode: Stellerator.TvMode): StellaConfig.TvMode {\n        switch (tvMode) {\n            case Stellerator.TvMode.ntsc:\n                return StellaConfig.TvMode.ntsc;\n\n            case Stellerator.TvMode.pal:\n                return StellaConfig.TvMode.pal;\n\n            case Stellerator.TvMode.secam:\n                return StellaConfig.TvMode.secam;\n\n            default:\n                throw new Error(`invalid TV mode '${tvMode}'`);\n        }\n    }\n\n    private _createDrivers(): void {\n        try {\n            this._webglVideo = this._videoDriver = new WebglVideo(this._canvasElt, {\n                povEmulation: this._config.simulatePov,\n                gamma: this._config.gamma\n            }).init();\n        } catch (e) {\n            this._webglVideo = null;\n            this._videoDriver = new CanvasVideo(this._canvasElt).init();\n        }\n\n        this._videoDriver.enableInterpolation(this._config.smoothScaling);\n\n        this._driverManager.addDriver(this._videoDriver, context => this._videoDriver.bind(context.getVideo()));\n\n        this._fullscreenVideo = new FullscreenDriver(this._videoDriver);\n\n        if (this._config.audio) {\n            try {\n                this._audioDriver = new AudioDriver();\n                this._audioDriver.init();\n                this._audioDriver.setMasterVolume(this._config.volume);\n\n                this._driverManager.addDriver(this._audioDriver, context =>\n                    this._audioDriver.bind(true, [context.getPCMChannel()])\n                );\n            } catch (e) {\n                console.error(`failed to initialize audio: ${e && e.message}`);\n            }\n        }\n\n        const pauseHandler = () => {\n            switch (this._emulationService.getState()) {\n                case EmulationServiceInterface.State.paused:\n                    this.resume();\n                    break;\n\n                case EmulationServiceInterface.State.running:\n                    this.pause();\n                    break;\n            }\n        };\n\n        if (this._config.enableKeyboard) {\n            this._keyboardIO = new KeyboardIO(this._config.keyboardTarget);\n\n            this._driverManager.addDriver(this._keyboardIO, context =>\n                this._keyboardIO.bind(context.getJoystick(0), context.getJoystick(1), context.getControlPanel())\n            );\n\n            if (this._config.fullscreenViaKeyboard) {\n                this._keyboardIO.toggleFullscreen.addHandler(() => this._fullscreenVideo.toggle());\n            }\n\n            if (this._config.pauseViaKeyboard) {\n                this._keyboardIO.togglePause.addHandler(pauseHandler);\n            }\n        }\n\n        if (this._config.resetViaKeyboard) {\n            this._keyboardIO.hardReset.addHandler(() => this.reset());\n        }\n\n        if (this._config.enableTouch) {\n            this._touchIO = new TouchIO(\n                this._canvasElt,\n                this._config.touchJoystickSensitivity,\n                this._config.touchLeftHanded\n            );\n\n            this._driverManager.addDriver(this._touchIO, context =>\n                this._touchIO.bind(context.getJoystick(0), context.getControlPanel())\n            );\n\n            if (this._config.pauseViaTouch) {\n                this._touchIO.togglePause.addHandler(pauseHandler);\n            }\n\n            if (this._config.fullscreenViaTouch) {\n                this._touchIO.toggleFullscreen.addHandler(() => this._fullscreenVideo.toggle());\n            }\n        }\n\n        if (this._config.enableGamepad) {\n            this._gamepad = new Gamepad();\n            this._gamepad.init();\n\n            this._driverManager.addDriver(this._gamepad, context =>\n                this._gamepad.bind({\n                    joysticks: [context.getJoystick(0), context.getJoystick(1)],\n                    start: context.getControlPanel().getResetButton(),\n                    select: context.getControlPanel().getSelectSwitch()\n                })\n            );\n        }\n\n        if (this._config.paddleViaMouse) {\n            this._paddle = new Paddle();\n\n            this._driverManager.addDriver(this._paddle, context => this._paddle.bind(context.getPaddle(0)));\n        }\n    }\n\n    private _mapState(state: EmulationServiceInterface.State): Stellerator.State {\n        switch (state) {\n            case EmulationServiceInterface.State.stopped:\n                return Stellerator.State.stopped;\n\n            case EmulationServiceInterface.State.running:\n                return Stellerator.State.running;\n\n            case EmulationServiceInterface.State.paused:\n                return Stellerator.State.paused;\n\n            case EmulationServiceInterface.State.error:\n                return Stellerator.State.error;\n\n            default:\n                throw new Error('cannot happen');\n        }\n    }\n\n    /**\n     * Subscribe to this event to receive periodic updates on the frequency of the\n     * emulated system. The unit is Hz. Check out the\n     * [microevent.ts](https://github.com/DirtyHairy/microevent)\n     * documentation on the event API.\n     *\n     * Example (using JQuery to display emulation speed):\n     * ```typescript\n     *     stellerator.frequencyUpdate.addHandler(\n     *         frequency => $('emulation-speed').text(`System speed: ${(frequency / 1e6).toFixed(2)} MHz`)\n     *     );\n     * ```\n     */\n    frequencyUpdate: Event<number>;\n\n    /**\n     * This event is dispatched whenever emulation state changes. Check out the\n     * [microevent.ts](https://github.com/DirtyHairy/microevent)\n     * documentation on the event API.\n     *\n     * Example (using JQuery to display an error message):\n     * ```typescript\n     *     stellerator.stateChange.addHandler(\n     *         state => {\n     *             if (state === Stellerator.State.error) {\n     *                  $('error-message').text(stellerator.lastError().message);\n     *             }\n     *         }\n     *     );\n     * ```\n     */\n    stateChange: Event<Stellerator.State>;\n\n    private _canvasElt: HTMLCanvasElement;\n    private _config: Stellerator.Config = null;\n    private _emulationService: EmulationServiceInterface = null;\n    private _serviceInitialized: Promise<void> = null;\n\n    private _videoDriver: VideoDriverInterface = null;\n    private _webglVideo: WebglVideo = null;\n    private _fullscreenVideo: FullscreenDriver = null;\n    private _audioDriver: AudioDriver = null;\n    private _keyboardIO: KeyboardIO = null;\n    private _touchIO: TouchIO = null;\n    private _paddle: Paddle = null;\n    private _gamepad: Gamepad = null;\n\n    private _controlPanel = new ControlPanelProxy();\n\n    private _state = Stellerator.State.stopped;\n\n    private _driverManager = new DriverManager();\n\n    private _mutex = new Mutex();\n}\n\nnamespace Stellerator {\n    /**\n     * General emulator configuration. The configuration is set on construction of the\n     * stellerator instance. Each setting is strictly optional and has a default\n     * value.\n     */\n    export interface Config {\n        /**\n         * Perform smooth scaling of the output image.\n         *\n         * Default: true\n         */\n        smoothScaling: boolean;\n\n        /**\n         * Simulate persistence of vision / phosphor by blending several frames. This will\n         * take effect **only** if WebGL is available.\n         *\n         * Default: true\n         */\n        simulatePov: boolean;\n\n        /**\n         * Gamma correction. Will take effect **only** if WebGL is available.\n         *\n         * Default: true\n         */\n        gamma: number;\n\n        /**\n         * Enable audio.\n         *\n         * Default: true\n         */\n        audio: boolean;\n\n        /**\n         * Master volume.\n         *\n         * Default: 0.5\n         */\n        volume: number;\n\n        /**\n         * Enable keyboard for joysticks and reset / resume.\n         *\n         * Default: true\n         *\n         */\n        enableKeyboard: boolean;\n\n        /**\n         * Enable touch controls for left joystick and reset / resume.\n         *\n         * Default: true\n         */\n        enableTouch: boolean;\n\n        /**\n         * Mirror touch controls for left handed users.\n         *\n         * Default: false\n         */\n        touchLeftHanded: boolean;\n\n        /**\n         * Touch control joystick emulation sensitivity (in pixels).\n         *\n         * Default: 15\n         */\n        touchJoystickSensitivity: number;\n\n        /**\n         * Specify an HTML element on which the driver listens for keyboard\n         * events.\n         *\n         * Default: document\n         */\n        keyboardTarget: HTMLElement | HTMLDocument;\n\n        /**\n         * Toggle fullscreen with \"enter\". Applicable **only** if `enableKeyboard`\n         * is set.\n         *\n         * Default: true\n         */\n        fullscreenViaKeyboard: boolean;\n\n        /**\n         * Toggle pause with \"p\". Applicable **only** if `enableKeyboard` is set.\n         *\n         * Default: true\n         */\n        pauseViaKeyboard: boolean;\n\n        /**\n         * Reset emulation with \"shift-r\".\n         *\n         * Default: true\n         */\n        resetViaKeyboard: boolean;\n\n        /**\n         * Toggle pause via touch controls. Applicable **only** if `enableTouch` is set.\n         *\n         * Default: true\n         */\n        pauseViaTouch: boolean;\n\n        /**\n         * Toggle fullscreen via touch controls. Applicable **only** if `enableTouch` is set.\n         */\n        fullscreenViaTouch: boolean;\n\n        /**\n         * Emulate the first paddlewith the horizontal movement of the mouse.\n         *\n         * Default: true\n         *\n         */\n        paddleViaMouse: boolean;\n\n        /**\n         * Enable gamepad support.\n         *\n         * Default: true\n         */\n        enableGamepad: boolean;\n    }\n\n    /**\n     * TV mode constants\n     */\n    export enum TvMode {\n        /**\n         * NTSC\n         */\n        ntsc = 'ntsc',\n        /**\n         * PAL\n         */\n        pal = 'pal',\n        /**\n         * SECAM\n         */\n        secam = 'secam'\n    }\n\n    /**\n     * Optional configuration for a specific cartridge. This configuration is passed to\n     * the emulator together with a cartridge image for emulation. Each setting\n     * is strictly optional and has a default value.\n     */\n    export interface CartridgeConfig {\n        /**\n         * Specify the cartridge type. The default is autodetection which should\n         * work fine in almost all cases.\n         *\n         * Default: undefined [autodetect]\n         */\n        cartridgeType: CartridgeInfo.CartridgeType;\n\n        /**\n         * Random number generator seed. This is used to initialize the initial\n         * hardware state. The default is automatic, which uses a random seed.\n         *\n         * Default: undefined [automatic]\n         */\n        randomSeed: number;\n\n        /**\n         * Emulate paddles.\n         *\n         * Default: true\n         */\n        emulatePaddles: boolean;\n\n        /**\n         * The first visible scanline of the frame. The default is autodetection, which\n         * should work fine for most cases.\n         *\n         * Default: undefined [autodetect]\n         */\n        frameStart: number;\n    }\n\n    /**\n     * The CartridgeType enum. Reexported from the `CartridgeInfo` module. Please check the\n     * [source](https://github.com/6502ts/6502.ts/blob/master/src/machine/stella/cartridge/CartridgeInfo.ts)\n     * for the various possible values if you really need this setting.\n     *\n     * Example:\n     * ```typescript\n     *     stellerator.run(cartridgeImage, Stellerator.TvMode.ntsc, {\n     *         cartridgeType: Stellerator.CartridgeType.bankswitch_DPC\n     *     });\n     * ```\n     */\n    export const CartridgeType = CartridgeInfo.CartridgeType;\n\n    /**\n     * This function takes a cartridge type and returns a human readable\n     * description suitable for building an UI. Reexported from the `CartridgeInfo` module.\n     *\n     * Example:\n     * ```typescript\n     *     const description = Stellerator.describeCartridgeType(\n     *         Stellerator.CartridgeType.bankswitch_DPC\n     *     );\n     * ```\n     */\n    export const describeCartridgeType: (cartridgeType: CartridgeInfo.CartridgeType) => string =\n        CartridgeInfo.describeCartridgeType;\n\n    /**\n     * This function returns an array of all possible cartridge types suitable for building an UI.\n     * Reexported from the `CartridgeInfo` module.\n     */\n    export const allCartridgeTypes: () => Array<CartridgeInfo.CartridgeType> = CartridgeInfo.getAllTypes;\n\n    /**\n     * The different possible states of the emulation.\n     */\n    export enum State {\n        running = 'running',\n        /**\n         * Emulation has been paused and can be stopped or continued.\n         */\n        paused = 'paused',\n        /**\n         * Emulation has been stopped regularily.\n         */\n        stopped = 'stopped',\n        /**\n         * Emulation has been stopped by an error.\n         */\n        error = 'error'\n    }\n}\n\nexport { Stellerator as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport Switch from './Switch';\nimport SwitchIO from '../../../machine/io/SwitchInterface';\n\nclass SwitchProxy implements Switch {\n    bind(swtch: SwitchIO): void {\n        this.unbind();\n\n        this._boundSwitch = swtch;\n        this._boundSwitch.toggle(this._state);\n\n        this._boundSwitch.stateChanged.addHandler(SwitchProxy._onBoundStateChange, this);\n        this._setState(this._boundSwitch.read());\n    }\n\n    unbind(): void {\n        if (!this._boundSwitch) {\n            return;\n        }\n\n        this._boundSwitch.stateChanged.removeHandler(SwitchProxy._onBoundStateChange, this);\n        this._boundSwitch = null;\n    }\n\n    toggle(state: boolean): this {\n        if (this._boundSwitch) {\n            this._boundSwitch.toggle(state);\n        } else {\n            this._setState(state);\n        }\n\n        return this;\n    }\n\n    read(): boolean {\n        return this._state;\n    }\n\n    private static _onBoundStateChange(newState: boolean, self: SwitchProxy) {\n        self._setState(newState);\n    }\n\n    private _setState(newState: boolean) {\n        if (newState !== this._state) {\n            this._state = newState;\n            this.stateChange.dispatch(this._state);\n        }\n    }\n\n    stateChange = new Event<boolean>();\n\n    private _state = false;\n    private _boundSwitch: SwitchIO = null;\n}\n\nexport { SwitchProxy as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Stellerator from './Stellerator';\n\nexport = {\n    Stellerator\n};\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport SwitchInterface from '../../../machine/io/SwitchInterface';\nimport JoystickInterface from '../../../machine/io/DigitalJoystickInterface';\nimport ControlPanelInterface from '../../../machine/stella/ControlPanelInterface';\n\nconst enum DispatchType {\n    swtch,\n    triggerDown\n}\n\ninterface SwitchDispatch {\n    type: DispatchType.swtch;\n    swtch: SwitchInterface;\n}\n\ninterface TriggerDispatch {\n    type: DispatchType.triggerDown;\n    trigger: Event<void>;\n}\n\ntype Dispatch = SwitchDispatch | TriggerDispatch;\n\nfunction mkSwitch(swtch: SwitchInterface): SwitchDispatch {\n    return {\n        type: DispatchType.swtch,\n        swtch\n    };\n}\n\nfunction mkTrigger(event: Event<void>): TriggerDispatch {\n    return {\n        type: DispatchType.triggerDown,\n        trigger: event\n    };\n}\n\nclass KeyboardIO {\n    constructor(\n        private _target: HTMLElement | HTMLDocument,\n        // tslint:disable-next-line\n        mappings: Array<KeyboardIO.Mapping> = KeyboardIO.defaultMappings\n    ) {\n        this._compileMappings(mappings);\n    }\n\n    bind(joystick0: JoystickInterface, joystick1: JoystickInterface, controlPanel: ControlPanelInterface): void {\n        if (this._joystick0) {\n            return;\n        }\n\n        this._joystick0 = joystick0;\n        this._joystick1 = joystick1;\n        this._controlPanel = controlPanel;\n\n        this._updateActionTable();\n\n        this._keydownListener = e => {\n            if (!this._compiledMappings.has(e.keyCode)) {\n                return;\n            }\n\n            const modifiers =\n                (e.shiftKey ? KeyboardIO.Modifier.shift : 0) |\n                (e.ctrlKey ? KeyboardIO.Modifier.ctrl : 0) |\n                (e.altKey ? KeyboardIO.Modifier.alt : 0);\n\n            if (!this._compiledMappings.get(e.keyCode).has(modifiers)) {\n                return;\n            }\n\n            const action = this._compiledMappings.get(e.keyCode).get(modifiers);\n\n            if (typeof action !== 'undefined') {\n                e.preventDefault();\n\n                const dispatch = this._dispatchTable[action];\n                switch (dispatch.type) {\n                    case DispatchType.swtch:\n                        dispatch.swtch.toggle(true);\n                        break;\n\n                    case DispatchType.triggerDown:\n                        dispatch.trigger.dispatch(undefined);\n                        break;\n\n                    default:\n                }\n            }\n        };\n\n        this._keyupListener = e => {\n            if (!this._compiledMappings.has(e.keyCode)) {\n                return;\n            }\n\n            for (const action of this._compiledMappings.get(e.keyCode).values()) {\n                e.preventDefault();\n\n                const dispatch = this._dispatchTable[action];\n\n                switch (dispatch.type) {\n                    case DispatchType.swtch:\n                        dispatch.swtch.toggle(false);\n                        break;\n\n                    default:\n                }\n            }\n        };\n\n        this._target.addEventListener('keydown', this._keydownListener);\n        this._target.addEventListener('keyup', this._keyupListener);\n    }\n\n    unbind(): void {\n        if (!this._joystick0) {\n            return;\n        }\n\n        this._target.removeEventListener('keydown', this._keydownListener);\n        this._target.removeEventListener('keyup', this._keyupListener);\n\n        this._joystick0 = this._joystick1 = this._controlPanel = null;\n        this._keydownListener = this._keyupListener = null;\n    }\n\n    private _updateActionTable(): void {\n        this._dispatchTable[KeyboardIO.Action.fullscreen] = mkTrigger(this.toggleFullscreen);\n        this._dispatchTable[KeyboardIO.Action.hardReset] = mkTrigger(this.hardReset);\n        this._dispatchTable[KeyboardIO.Action.togglePause] = mkTrigger(this.togglePause);\n        this._dispatchTable[KeyboardIO.Action.select] = mkSwitch(this._controlPanel.getSelectSwitch());\n        this._dispatchTable[KeyboardIO.Action.reset] = mkSwitch(this._controlPanel.getResetButton());\n        this._dispatchTable[KeyboardIO.Action.left0] = mkSwitch(this._joystick0.getLeft());\n        this._dispatchTable[KeyboardIO.Action.right0] = mkSwitch(this._joystick0.getRight());\n        this._dispatchTable[KeyboardIO.Action.up0] = mkSwitch(this._joystick0.getUp());\n        this._dispatchTable[KeyboardIO.Action.down0] = mkSwitch(this._joystick0.getDown());\n        this._dispatchTable[KeyboardIO.Action.fire0] = mkSwitch(this._joystick0.getFire());\n        this._dispatchTable[KeyboardIO.Action.left1] = mkSwitch(this._joystick1.getLeft());\n        this._dispatchTable[KeyboardIO.Action.right1] = mkSwitch(this._joystick1.getRight());\n        this._dispatchTable[KeyboardIO.Action.up1] = mkSwitch(this._joystick1.getUp());\n        this._dispatchTable[KeyboardIO.Action.down1] = mkSwitch(this._joystick1.getDown());\n        this._dispatchTable[KeyboardIO.Action.fire1] = mkSwitch(this._joystick1.getFire());\n    }\n\n    private _compileMappings(mappings: Array<KeyboardIO.Mapping>): void {\n        const compileMapping = (action: KeyboardIO.Action, keycode: number, modifiers: number) => {\n            if ((modifiers & ~(KeyboardIO.Modifier.shift | KeyboardIO.Modifier.ctrl | KeyboardIO.Modifier.alt)) !== 0) {\n                throw new Error(`invalid modifier set ${modifiers}`);\n            }\n\n            if (!this._compiledMappings.has(keycode)) {\n                this._compiledMappings.set(keycode, new Map<number, KeyboardIO.Action>());\n            }\n\n            this._compiledMappings.get(keycode).set(modifiers, action);\n        };\n\n        mappings.forEach(mapping => {\n            const action = mapping.action,\n                specs = Array.isArray(mapping.spec) ? mapping.spec : [mapping.spec];\n\n            specs.forEach(spec =>\n                compileMapping(\n                    action,\n                    typeof spec === 'object' ? spec.keycode : spec,\n                    typeof spec === 'object' ? spec.modifiers : 0\n                )\n            );\n        });\n    }\n\n    toggleFullscreen = new Event<void>();\n    hardReset = new Event<void>();\n    togglePause = new Event<void>();\n\n    private _keydownListener: (e: KeyboardEvent) => void = null;\n    private _keyupListener: (e: KeyboardEvent) => void = null;\n\n    private _joystick0: JoystickInterface = null;\n    private _joystick1: JoystickInterface = null;\n    private _controlPanel: ControlPanelInterface = null;\n\n    private _dispatchTable: { [action: number]: Dispatch } = {};\n    private _compiledMappings = new Map<number, Map<number, KeyboardIO.Action>>();\n}\n\nnamespace KeyboardIO {\n    export const enum Action {\n        select,\n        reset,\n        left0,\n        right0,\n        up0,\n        down0,\n        left1,\n        right1,\n        up1,\n        down1,\n        fire0,\n        fire1,\n\n        fullscreen,\n        hardReset,\n        togglePause\n    }\n\n    export const enum Modifier {\n        ctrl = 1,\n        alt = 2,\n        shift = 4\n    }\n\n    export interface ComplexKeySpec {\n        keycode: number;\n        modifiers: number;\n    }\n\n    export type keySpec = number | ComplexKeySpec;\n\n    export interface Mapping {\n        action: Action;\n        spec: keySpec | Array<keySpec>;\n    }\n\n    export const defaultMappings: Array<Mapping> = [\n        {\n            action: Action.select,\n            spec: {\n                keycode: 32, // space\n                modifiers: Modifier.shift\n            }\n        },\n        {\n            action: Action.reset,\n            spec: {\n                keycode: 13, // enter\n                modifiers: Modifier.shift\n            }\n        },\n        {\n            action: Action.left0,\n            spec: [\n                65, // w\n                37 // left\n            ]\n        },\n        {\n            action: Action.right0,\n            spec: [\n                68, // d\n                39 // right\n            ]\n        },\n        {\n            action: Action.up0,\n            spec: [\n                87, // w\n                38 // up\n            ]\n        },\n        {\n            action: Action.down0,\n            spec: [\n                83, // s\n                40 // down\n            ]\n        },\n        {\n            action: Action.fire0,\n            spec: [\n                32, // space\n                86 // v\n            ]\n        },\n        {\n            action: Action.left1,\n            spec: 74 // j\n        },\n        {\n            action: Action.right1,\n            spec: 76 // l\n        },\n        {\n            action: Action.up1,\n            spec: 73 // i\n        },\n        {\n            action: Action.down1,\n            spec: 75 // k\n        },\n        {\n            action: Action.fire1,\n            spec: 66 // b\n        },\n        {\n            action: Action.fullscreen,\n            spec: 13 // enter\n        },\n        {\n            action: Action.hardReset,\n            spec: {\n                keycode: 82, // r\n                modifiers: Modifier.shift\n            }\n        },\n        {\n            action: Action.togglePause,\n            spec: 80 // p\n        }\n    ];\n}\n\nexport { KeyboardIO as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport DoubleTapDetector from './touch/DoubleTapDetector';\nimport DigitalJoystickInterface from '../../../machine/io/DigitalJoystickInterface';\nimport SwitchInterface from '../../../machine/io/SwitchInterface';\nimport ControlPanelInterface from '../../../machine/stella/ControlPanelInterface';\n\nconst enum TouchType {\n    alt = 'alt',\n    fire = 'fire',\n    joystick = 'joystick',\n    select = 'select',\n    reset = 'reset',\n    pause = 'pause',\n    unknown = 'unknown'\n}\n\nclass TouchIO {\n    constructor(private _canvas: HTMLCanvasElement, private _joystickSensitivity = 15, private _leftHanded = false) {\n        this.toggleFullscreen = this._fullscreenDoubleTapDetector.trigger;\n    }\n\n    bind(joystick: DigitalJoystickInterface, controlPanel: ControlPanelInterface): void {\n        if (this._bound) {\n            return;\n        }\n\n        this._bound = true;\n\n        this._joystick = joystick;\n        this._select = controlPanel.getSelectSwitch();\n        this._reset = controlPanel.getResetButton();\n\n        this._bindListeners();\n    }\n\n    unbind(): void {\n        if (!this._bound) {\n            return;\n        }\n\n        this._unbindListeners();\n\n        (this._bound = false), (this._joystick = this._reset = this._select = null);\n    }\n\n    private _bindListeners(): void {\n        this._canvas.addEventListener('touchstart', this._onTouchStart);\n        this._canvas.addEventListener('touchend', this._onTouchEnd);\n        this._canvas.addEventListener('touchmove', this._onTouchMove);\n    }\n\n    private _unbindListeners(): void {\n        this._canvas.removeEventListener('touchstart', this._onTouchStart);\n        this._canvas.removeEventListener('touchend', this._onTouchEnd);\n        this._canvas.removeEventListener('touchmove', this._onTouchMove);\n    }\n\n    private _cancelEvent(touch: NormalizedTouch): boolean {\n        return touch.type !== TouchType.alt;\n    }\n\n    private _onTouchStart = (e: TouchEvent): void => {\n        let cancel = false;\n\n        for (let i = 0; i < e.changedTouches.length; i++) {\n            const normalizedTouch = new NormalizedTouch(e.changedTouches.item(i), this._canvas),\n                id = normalizedTouch.touch.identifier;\n\n            if (this._leftHanded ? normalizedTouch.x > 0.5 : normalizedTouch.x <= 0.5) {\n                if (normalizedTouch.y <= 0.5) {\n                    // NW\n                    normalizedTouch.type = TouchType.alt;\n                } else {\n                    // SW\n                    normalizedTouch.type = this._isAlt ? TouchType.pause : TouchType.fire;\n                }\n            } else {\n                if (normalizedTouch.y <= 0.5) {\n                    // NE\n                    normalizedTouch.type = this._isAlt ? TouchType.select : TouchType.joystick;\n                } else {\n                    // SE\n                    normalizedTouch.type = this._isAlt ? TouchType.reset : TouchType.joystick;\n                }\n            }\n\n            if (this._pendingTouches.has(id) || this._pendingTouches.has(normalizedTouch.type)) {\n                continue;\n            }\n\n            this._pendingTouches.set(id, normalizedTouch);\n            this._pendingTouches.set(normalizedTouch.type, normalizedTouch);\n\n            switch (normalizedTouch.type) {\n                case TouchType.alt:\n                    this._isAlt = true;\n                    this._fullscreenDoubleTapDetector.startTouch();\n                    break;\n\n                case TouchType.fire:\n                    this._joystick.getFire().toggle(true);\n                    break;\n\n                case TouchType.pause:\n                    this.togglePause.dispatch(undefined);\n                    this._fullscreenDoubleTapDetector.cancelTouch();\n                    break;\n\n                case TouchType.select:\n                    this._select.toggle(true);\n                    this._fullscreenDoubleTapDetector.cancelTouch();\n                    break;\n\n                case TouchType.reset:\n                    this._reset.toggle(true);\n                    this._fullscreenDoubleTapDetector.cancelTouch();\n                    break;\n\n                case TouchType.joystick:\n                    break;\n\n                default:\n                    throw new Error('invalid touch type');\n            }\n\n            if (this._cancelEvent(normalizedTouch) || this._fullscreenDoubleTapDetector.isDispatching()) {\n                cancel = true;\n            }\n        }\n\n        if (cancel) {\n            e.preventDefault();\n        }\n    };\n\n    private _onTouchEnd = (e: TouchEvent): void => {\n        let cancel = false;\n\n        for (let i = 0; i < e.changedTouches.length; i++) {\n            const normalizedTouch = this._pendingTouches.get(e.changedTouches.item(i).identifier);\n\n            if (!normalizedTouch) {\n                continue;\n            }\n\n            if (this._cancelEvent(normalizedTouch) || this._fullscreenDoubleTapDetector.isDispatching()) {\n                cancel = true;\n            }\n\n            switch (normalizedTouch.type) {\n                case TouchType.alt:\n                    this._isAlt = false;\n                    this._fullscreenDoubleTapDetector.endTouch();\n                    break;\n\n                case TouchType.fire:\n                    this._joystick.getFire().toggle(false);\n                    break;\n\n                case TouchType.select:\n                    this._select.toggle(false);\n                    break;\n\n                case TouchType.reset:\n                    this._reset.toggle(false);\n                    break;\n\n                case TouchType.joystick:\n                    this._joystick.getDown().toggle(false);\n                    this._joystick.getUp().toggle(false);\n                    this._joystick.getLeft().toggle(false);\n                    this._joystick.getRight().toggle(false);\n                    break;\n\n                case TouchType.pause:\n                    break;\n\n                default:\n                    throw new Error('invalid touch type');\n            }\n\n            this._pendingTouches.delete(normalizedTouch.type);\n            this._pendingTouches.delete(normalizedTouch.touch.identifier);\n        }\n\n        if (cancel) {\n            e.preventDefault();\n        }\n    };\n\n    private _onTouchMove = (e: TouchEvent): void => {\n        let cancel = false;\n\n        for (let i = 0; i < e.changedTouches.length; i++) {\n            const touch = e.changedTouches.item(i),\n                normalizedTouch = this._pendingTouches.get(touch.identifier);\n\n            if (!normalizedTouch) {\n                continue;\n            }\n\n            if (this._cancelEvent(normalizedTouch)) {\n                cancel = true;\n            }\n\n            if (normalizedTouch.type !== TouchType.joystick) {\n                continue;\n            }\n\n            const deltaX = touch.clientX - normalizedTouch.touch.clientX,\n                deltaY = touch.clientY - normalizedTouch.touch.clientY,\n                abs = Math.sqrt(deltaX * deltaX + deltaY * deltaY),\n                sin = Math.abs(deltaY / abs),\n                cos = Math.abs(deltaX / abs),\n                trigger = abs > this._joystickSensitivity;\n\n            this._joystick.getLeft().toggle(trigger && deltaX < 0 && cos > 0.5);\n            this._joystick.getRight().toggle(trigger && deltaX > 0 && cos > 0.5);\n            this._joystick.getUp().toggle(trigger && deltaY < 0 && sin > 0.5);\n            this._joystick.getDown().toggle(trigger && deltaY > 0 && sin > 0.5);\n        }\n\n        if (cancel) {\n            e.preventDefault();\n        }\n    };\n\n    toggleFullscreen: Event<void>;\n    togglePause = new Event<void>();\n\n    private _fullscreenDoubleTapDetector = new DoubleTapDetector();\n\n    private _bound = false;\n\n    private _joystick: DigitalJoystickInterface = null;\n    private _select: SwitchInterface = null;\n    private _reset: SwitchInterface = null;\n\n    private _isAlt = false;\n\n    private _pendingTouches = new Map<number | TouchType, NormalizedTouch>();\n}\n\nclass NormalizedTouch {\n    constructor(public touch: Touch, canvas: HTMLCanvasElement) {\n        const boundingRect = canvas.getBoundingClientRect();\n\n        this.x = (touch.clientX - boundingRect.left) / boundingRect.width;\n        this.y = (touch.clientY - boundingRect.top) / boundingRect.height;\n    }\n\n    x: number;\n    y: number;\n    type = TouchType.unknown;\n}\n\nexport default TouchIO;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport VanillaDriver from '../../driver/WebAudio';\nimport WaveformAudioOutputInterface from '../../../machine/io/WaveformAudioOutputInterface';\nimport PCMAudioEndpointInterface from '../../driver/PCMAudioEndpointInterface';\n\nclass WebAudioDriver {\n    constructor(private _fragmentSize?: number) {}\n\n    init(): void {}\n\n    bind(pcmAudio: boolean, channels: WebAudioDriver.Channels): void {\n        if (this._channels) {\n            return;\n        }\n        this._channels = [...channels] as any;\n\n        if (!this._driver || this._pcmAudio !== pcmAudio) {\n            if (this._driver) {\n                this._driver.close();\n            }\n\n            this._driver = pcmAudio\n                ? new VanillaDriver(0, this._channels.length, this._fragmentSize)\n                : new VanillaDriver(this._channels.length, 0, this._fragmentSize);\n            this._driver.init();\n        }\n\n        if (pcmAudio) {\n            this._driver.bind([], this._channels as Array<PCMAudioEndpointInterface>);\n        } else {\n            this._driver.bind(this._channels as Array<WaveformAudioOutputInterface>, []);\n        }\n\n        for (let i = 0; i < this._channels.length; i++) {\n            this._driver.setMasterVolume(i, this._volume);\n        }\n\n        this._pcmAudio = pcmAudio;\n    }\n\n    unbind(): void {\n        if (!this._channels) {\n            return;\n        }\n\n        this._driver.unbind();\n\n        this._channels = null;\n    }\n\n    setMasterVolume(volume: number): void {\n        this._volume = volume;\n\n        if (this._channels) {\n            for (let i = 0; i < this._channels.length; i++) {\n                this._driver.setMasterVolume(i, this._volume);\n            }\n        }\n    }\n\n    getMasterVolume(): number {\n        return this._volume;\n    }\n\n    async pause(): Promise<void> {\n        if (this._driver) {\n            await this._driver.pause();\n        }\n    }\n\n    async resume(): Promise<void> {\n        if (this._driver) {\n            await this._driver.resume();\n        }\n    }\n\n    private _driver: VanillaDriver;\n    private _pcmAudio = false;\n    private _volume = 1;\n    private _channels: WebAudioDriver.Channels;\n}\n\nnamespace WebAudioDriver {\n    export type Channels = Array<WaveformAudioOutputInterface> | Array<PCMAudioEndpointInterface>;\n}\n\nexport { WebAudioDriver as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nclass DoubleTapDetector {\n    constructor(private _maxTapLength = 500, private _timeout = 200) {}\n\n    startTouch(): void {\n        this._lastTouchStart = Date.now();\n\n        if (this._touching) {\n            return;\n        }\n\n        this._touching = true;\n\n        this._dispatch = this._lastTouchEligible && this._lastTouchStart - this._lastTouchEnd < this._timeout;\n    }\n\n    endTouch(): void {\n        this._lastTouchEnd = Date.now();\n\n        // We need to dispatch on touchend in order to enable the fullscreen API in chrome. wtf.\n        if (this._dispatch) {\n            this._dispatch = false;\n            this.trigger.dispatch(undefined);\n        }\n\n        if (!this._touching) {\n            return;\n        }\n\n        this._touching = false;\n\n        this._lastTouchEligible = this._lastTouchStart - this._lastTouchEnd < this._maxTapLength;\n    }\n\n    cancelTouch(): void {\n        this.endTouch();\n        this._lastTouchEligible = false;\n    }\n\n    isDispatching(): boolean {\n        return this._dispatch;\n    }\n\n    trigger = new Event<void>();\n\n    private _dispatch = false;\n    private _touching = false;\n    private _lastTouchEligible = false;\n    private _lastTouchStart = 0;\n    private _lastTouchEnd = 0;\n}\n\nexport default DoubleTapDetector;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport EmulationServiceInterface from './EmulationServiceInterface';\nimport EmulationContextInterface from './EmulationContextInterface';\n\nclass DriverManager {\n    bind(emulationService: EmulationServiceInterface): this {\n        if (this._driversBound) {\n            return this;\n        }\n\n        this._emulationService = emulationService;\n\n        if (this._shouldBindDrivers()) {\n            this._bindDrivers();\n        }\n\n        this._emulationService.stateChanged.addHandler(DriverManager._onEmuStateChange, this);\n\n        return this;\n    }\n\n    unbind(): this {\n        if (!this._emulationService) {\n            return this;\n        }\n\n        this._unbindDrivers();\n\n        this._emulationService.stateChanged.removeHandler(DriverManager._onEmuStateChange, this);\n\n        this._emulationService = null;\n\n        return this;\n    }\n\n    addDriver(driver: DriverManager.Driver, binder: DriverManager.Binder): this {\n        this._drivers.set(driver, new DriverManager.DriverContext(driver, binder));\n\n        if (this._driversBound) {\n            binder(this._emulationService.getEmulationContext(), driver);\n        }\n\n        return this;\n    }\n\n    removeDriver(driver: DriverManager.Driver): this {\n        if (!this._drivers.get(driver)) {\n            return this;\n        }\n\n        driver.unbind();\n\n        this._drivers.delete(driver);\n\n        return this;\n    }\n\n    private static _onEmuStateChange(newState: EmulationServiceInterface.State, self: DriverManager): void {\n        if (self._shouldBindDrivers(newState)) {\n            self._bindDrivers();\n        } else {\n            self._unbindDrivers();\n        }\n    }\n\n    private _shouldBindDrivers(\n        state = this._emulationService ? this._emulationService.getState() : undefined\n    ): boolean {\n        return (\n            this._emulationService &&\n            (state === EmulationServiceInterface.State.running || state === EmulationServiceInterface.State.paused)\n        );\n    }\n\n    private _bindDrivers(): void {\n        if (this._driversBound) {\n            return;\n        }\n\n        this._drivers.forEach(driverContext =>\n            driverContext.binder(this._emulationService.getEmulationContext(), driverContext.driver)\n        );\n\n        this._driversBound = true;\n    }\n\n    private _unbindDrivers(): void {\n        if (!this._driversBound) {\n            return;\n        }\n\n        this._drivers.forEach(driverContext => driverContext.driver.unbind());\n\n        this._driversBound = false;\n    }\n\n    private _emulationService: EmulationServiceInterface;\n    private _drivers = new Map<DriverManager.Driver, DriverManager.DriverContext>();\n    private _driversBound = false;\n}\n\nnamespace DriverManager {\n    export interface Driver {\n        unbind(): void;\n    }\n\n    export interface Binder {\n        (context: EmulationContextInterface, driver: Driver): void;\n    }\n\n    export class DriverContext {\n        constructor(public driver: Driver, public binder: Binder) {}\n    }\n}\n\nexport { DriverManager as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { EventInterface } from 'microevent.ts';\n\nimport StellaConfig from '../../../machine/stella/Config';\nimport CartridgeInfo from '../../../machine/stella/cartridge/CartridgeInfo';\nimport EmulationContextInterface from './EmulationContextInterface';\nimport { ProcessorConfig as VideoProcessorConfig } from '../../../video/processing/config';\n\ninterface EmulationServiceInterface {\n    init(): Promise<void>;\n\n    start(\n        buffer: { [i: number]: number; length: number },\n        config: StellaConfig,\n        cartridgeType?: CartridgeInfo.CartridgeType,\n        videoProcessing?: Array<VideoProcessorConfig>\n    ): Promise<EmulationServiceInterface.State>;\n\n    stop(): Promise<EmulationServiceInterface.State>;\n\n    pause(): Promise<EmulationServiceInterface.State>;\n\n    resume(): Promise<EmulationServiceInterface.State>;\n\n    reset(): Promise<EmulationServiceInterface.State>;\n\n    setRateLimit(enforce: boolean): Promise<void>;\n\n    getRateLimit(): boolean;\n\n    getState(): EmulationServiceInterface.State;\n\n    getLastError(): Error;\n\n    getEmulationContext(): EmulationContextInterface;\n\n    getFrequency(): number;\n\n    stateChanged: EventInterface<EmulationServiceInterface.State>;\n\n    frequencyUpdate: EventInterface<number>;\n}\n\nnamespace EmulationServiceInterface {\n    export enum State {\n        stopped,\n        running,\n        paused,\n        error\n    }\n}\n\nexport { EmulationServiceInterface as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Joystick from '../../../../machine/io/DigitalJoystick';\nimport ControlPanel from '../../../../machine/stella/ControlPanel';\nimport Paddle from '../../../../machine/io/Paddle';\nimport ControlState from './ControlState';\nimport { RpcProviderInterface } from 'worker-rpc';\n\nimport { SIGNAL_TYPE } from './messages';\n\nclass ControlProxy {\n    constructor(private _rpc: RpcProviderInterface) {\n        for (let i = 0; i < 2; i++) {\n            this._joysticks[i] = new Joystick();\n        }\n\n        for (let i = 0; i < 4; i++) {\n            this._paddles[i] = new Paddle();\n        }\n    }\n\n    sendUpdate(): void {\n        this._rpc.signal<ControlState>(SIGNAL_TYPE.controlStateUpdate, {\n            joystickState: this._joysticks.map(ControlProxy._joystickState),\n            paddleState: this._paddles.map(ControlProxy._paddleState),\n            controlPanelState: ControlProxy._controlPanelState(this._controlPanel)\n        });\n    }\n\n    getJoystick(i: number): Joystick {\n        if (i < 0 || i > 1) {\n            throw new Error(`invalid joystick index ${i}`);\n        }\n\n        return this._joysticks[i];\n    }\n\n    getControlPanel(): ControlPanel {\n        return this._controlPanel;\n    }\n\n    getPaddle(i: number): Paddle {\n        if (i < 0 || i > 3) {\n            throw new Error(`invalid paddle index ${i}`);\n        }\n\n        return this._paddles[i];\n    }\n\n    private static _joystickState(joystick: Joystick): ControlState.JoystickState {\n        return {\n            up: joystick.getUp().read(),\n            down: joystick.getDown().read(),\n            left: joystick.getLeft().read(),\n            right: joystick.getRight().read(),\n            fire: joystick.getFire().read()\n        };\n    }\n\n    private static _paddleState(paddle: Paddle): ControlState.PaddleState {\n        return {\n            value: paddle.getValue(),\n            fire: paddle.getFire().read()\n        };\n    }\n\n    private static _controlPanelState(controlPanel: ControlPanel): ControlState.ControlPanelState {\n        return {\n            difficulty0: controlPanel.getDifficultySwitchP0().read(),\n            difficulty1: controlPanel.getDifficultySwitchP1().read(),\n            select: controlPanel.getSelectSwitch().read(),\n            reset: controlPanel.getResetButton().read(),\n            color: controlPanel.getColorSwitch().read()\n        };\n    }\n\n    private _joysticks = new Array<Joystick>(2);\n    private _paddles = new Array<Paddle>(4);\n    private _controlPanel = new ControlPanel();\n}\n\nexport { ControlProxy as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport VideoEndpointInterface from '../../../driver/VideoEndpointInterface';\nimport JoystickInterface from '../../../../machine/io/DigitalJoystickInterface';\nimport ControlPanelInterface from '../../../../machine/stella/ControlPanelInterface';\nimport PaddleInterface from '../../../../machine/io/PaddleInterface';\nimport WaveformAudioOutputInterface from '../../../../machine/io/WaveformAudioOutputInterface';\nimport PCMAudioEndpointInterface from '../../../driver/PCMAudioEndpointInterface';\nimport Config from '../../../../machine/stella/Config';\n\nimport EmulationContextInterface from '../EmulationContextInterface';\nimport VideoProxy from './VideoProxy';\nimport ControlProxy from './ControlProxy';\nimport WaveformAudioProxy from './WaveformAudioProxy';\nimport PCMAudioProxy from './PCMAudioProxy';\n\nclass EmulationContext implements EmulationContextInterface {\n    constructor(\n        private _videoProxy: VideoProxy,\n        private _controlProxy: ControlProxy,\n        private _waveformChannels: Array<WaveformAudioProxy>,\n        private _pcmChannel: PCMAudioProxy\n    ) {\n        if (this._waveformChannels.length !== 2) {\n            throw new Error(`invalid channel count ${this._waveformChannels.length}`);\n        }\n    }\n\n    setConfig(config: Config): void {\n        this._config = config;\n    }\n\n    getConfig(): Config {\n        return this._config;\n    }\n\n    getVideo(): VideoEndpointInterface {\n        return this._videoProxy;\n    }\n\n    getJoystick(i: number): JoystickInterface {\n        return this._controlProxy.getJoystick(i);\n    }\n\n    getControlPanel(): ControlPanelInterface {\n        return this._controlProxy.getControlPanel();\n    }\n\n    getPaddle(i: number): PaddleInterface {\n        return this._controlProxy.getPaddle(i);\n    }\n\n    getWaveformChannels(): Array<WaveformAudioOutputInterface> {\n        return this._waveformChannels;\n    }\n\n    getPCMChannel(): PCMAudioEndpointInterface {\n        return this._pcmChannel;\n    }\n\n    getVideoProxy(): VideoProxy {\n        return this._videoProxy;\n    }\n\n    private _config: Config = null;\n}\n\nexport { EmulationContext as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\nimport { RpcProvider } from 'worker-rpc';\n\nimport EmulationServiceInterface from '../EmulationServiceInterface';\nimport EmulationContext from './EmulationContext';\nimport EmulationContextInterface from '../EmulationContextInterface';\nimport { ProcessorConfig as VideoProcessorConfig } from '../../../../video/processing/config';\nimport VideoProxy from './VideoProxy';\nimport ControlProxy from './ControlProxy';\nimport WaveformAudioProxy from './WaveformAudioProxy';\nimport PCMAudioProxy from './PCMAudioProxy';\n\nimport StellaConfig from '../../../../machine/stella/Config';\nimport CartridgeInfo from '../../../../machine/stella/cartridge/CartridgeInfo';\n\nimport { Mutex } from 'async-mutex';\n\nimport { RPC_TYPE, SIGNAL_TYPE, EmulationStartMessage, SetupMessage } from './messages';\n\nconst CONTROL_PROXY_UPDATE_INTERVAL = 25;\n\nconst enum ProxyState {\n    stopped,\n    running,\n    paused\n}\n\nclass EmulationService implements EmulationServiceInterface {\n    constructor(private _stellaWorkerUri: string, private _videoWorkerUri?: string) {}\n\n    init(): Promise<void> {\n        this._worker = new Worker(this._stellaWorkerUri);\n        this._rpc = new RpcProvider((message, transfer?) => this._worker.postMessage(message, transfer));\n\n        this._pcmChannel = new PCMAudioProxy(0, this._rpc).init();\n\n        for (let i = 0; i < 2; i++) {\n            this._waveformChannels[i] = new WaveformAudioProxy(i, this._rpc).init();\n        }\n\n        const videoProxy = new VideoProxy(this._rpc),\n            controlProxy = new ControlProxy(this._rpc);\n\n        videoProxy.init();\n\n        this._emulationContext = new EmulationContext(\n            videoProxy,\n            controlProxy,\n            this._waveformChannels,\n            this._pcmChannel\n        );\n\n        this._worker.onmessage = messageEvent => this._rpc.dispatch(messageEvent.data);\n\n        this._rpc\n            .registerSignalHandler<number>(SIGNAL_TYPE.emulationFrequencyUpdate, this._onFrequencyUpdate.bind(this))\n            .registerSignalHandler<string>(SIGNAL_TYPE.emulationError, this._onEmulationError.bind(this));\n\n        this._controlProxy = controlProxy;\n\n        return this._startVideoProcessingPipeline().then(() => this.setRateLimit(this._rateLimitEnforced));\n    }\n\n    async start(\n        buffer: { [i: number]: number; length: number },\n        config: StellaConfig,\n        cartridgeType?: CartridgeInfo.CartridgeType,\n        videoProcessing?: Array<VideoProcessorConfig>\n    ): Promise<EmulationServiceInterface.State> {\n        await this.stop();\n\n        return this._mutex.runExclusive(async () => {\n            const state = await this._rpc.rpc<EmulationStartMessage, EmulationServiceInterface.State>(\n                RPC_TYPE.emulationStart,\n                {\n                    buffer,\n                    config,\n                    cartridgeType,\n                    videoProcessing\n                }\n            );\n\n            if (state === EmulationServiceInterface.State.paused) {\n                this._saveConfig = config;\n                this._emulationContext.setConfig(config);\n\n                await this._startProxies(config);\n            } else {\n                this._saveConfig = null;\n            }\n\n            return this._applyState(state);\n        });\n    }\n\n    pause(): Promise<EmulationServiceInterface.State> {\n        return this._mutex.runExclusive(() =>\n            this._rpc.rpc<void, EmulationServiceInterface.State>(RPC_TYPE.emulationPause).then(state => {\n                this._pauseProxies();\n                return this._applyState(state);\n            })\n        );\n    }\n\n    stop(): Promise<EmulationServiceInterface.State> {\n        return this._mutex.runExclusive(() =>\n            this._rpc.rpc<void, EmulationServiceInterface.State>(RPC_TYPE.emulationStop).then(state => {\n                this._stopProxies();\n                return this._applyState(state);\n            })\n        );\n    }\n\n    reset(): Promise<EmulationServiceInterface.State> {\n        return this._mutex.runExclusive(async () => {\n            const state = await this._rpc.rpc<void, EmulationServiceInterface.State>(RPC_TYPE.emulationReset);\n\n            // Try to restart the proxies if the reset recovered from an an error\n            if (\n                this._state === EmulationServiceInterface.State.error &&\n                (state === EmulationServiceInterface.State.running ||\n                    state === EmulationServiceInterface.State.paused) &&\n                this._saveConfig\n            ) {\n                await this._startProxies(this._saveConfig);\n            }\n\n            return this._applyState(state);\n        });\n    }\n\n    resume(): Promise<EmulationServiceInterface.State> {\n        return this._mutex.runExclusive(() =>\n            this._rpc.rpc<void, EmulationServiceInterface.State>(RPC_TYPE.emulationResume).then(state => {\n                this._resumeProxies();\n                return this._applyState(state);\n            })\n        );\n    }\n\n    setRateLimit(enforce: boolean): Promise<void> {\n        this._rateLimitEnforced = enforce;\n\n        return this._rpc.rpc<boolean, void>(RPC_TYPE.emulationSetRateLimit, enforce);\n    }\n\n    getFrequency(): number {\n        return this._frequency;\n    }\n\n    getRateLimit(): boolean {\n        return this._rateLimitEnforced;\n    }\n\n    getState(): EmulationServiceInterface.State {\n        return this._state;\n    }\n\n    getLastError(): Error {\n        return this._lastError;\n    }\n\n    getEmulationContext(): EmulationContextInterface {\n        switch (this._state) {\n            case EmulationServiceInterface.State.running:\n            case EmulationServiceInterface.State.paused:\n                return this._emulationContext;\n\n            default:\n                return null;\n        }\n    }\n\n    private _fetchLastError(): Promise<Error> {\n        return this._rpc\n            .rpc<void, string>(RPC_TYPE.emulationFetchLastError)\n            .then(message => (message ? new Error(message) : null));\n    }\n\n    private _applyState(\n        state: EmulationServiceInterface.State\n    ): Promise<EmulationServiceInterface.State> | EmulationServiceInterface.State {\n        if (state === EmulationServiceInterface.State.error) {\n            return this._fetchLastError().then(error => {\n                this._state = state;\n                this._lastError = error;\n\n                this._stopProxies();\n\n                this.stateChanged.dispatch(state);\n\n                return state;\n            });\n        } else {\n            this._state = state;\n            this.stateChanged.dispatch(state);\n\n            return state;\n        }\n    }\n\n    private _onFrequencyUpdate(message: number): void {\n        this._frequency = message;\n        this.frequencyUpdate.dispatch(this._frequency);\n    }\n\n    private _onEmulationError(message: string): void {\n        this._lastError = new Error(message || '');\n\n        this._stopProxies();\n        this._state = EmulationServiceInterface.State.error;\n        this.stateChanged.dispatch(this._state);\n    }\n\n    private async _startProxies(config: StellaConfig): Promise<void> {\n        await this._emulationContext.getVideoProxy().start();\n\n        for (let i = 0; i < this._waveformChannels.length; i++) {\n            await this._waveformChannels[i].start(config);\n        }\n        await this._pcmChannel.start();\n\n        this._startControlUpdates();\n\n        this._proxyState = ProxyState.running;\n    }\n\n    private _stopProxies(): void {\n        if (this._proxyState === ProxyState.stopped) {\n            return;\n        }\n\n        this._emulationContext.getVideoProxy().stop();\n        this._pcmChannel.stop();\n        this._stopControlUpdates();\n\n        this._proxyState = ProxyState.stopped;\n    }\n\n    private _pauseProxies(): void {\n        if (this._proxyState !== ProxyState.running) {\n            return;\n        }\n\n        this._stopControlUpdates();\n\n        this._proxyState = ProxyState.paused;\n    }\n\n    private _resumeProxies(): void {\n        if (this._proxyState !== ProxyState.paused) {\n            return;\n        }\n\n        this._startControlUpdates();\n\n        this._proxyState = ProxyState.running;\n    }\n\n    private _startControlUpdates(): void {\n        if (this._controlProxyUpdateHandle === null) {\n            this._controlProxyUpdateHandle = setInterval(\n                () => this._controlProxy.sendUpdate(),\n                CONTROL_PROXY_UPDATE_INTERVAL\n            );\n        }\n    }\n\n    private _stopControlUpdates(): void {\n        if (this._controlProxyUpdateHandle !== null) {\n            clearInterval(this._controlProxyUpdateHandle);\n            this._controlProxyUpdateHandle = null;\n        }\n    }\n\n    private async _startVideoProcessingPipeline(): Promise<void> {\n        let channel: MessageChannel = null;\n\n        if (this._videoWorkerUri) {\n            channel = new MessageChannel();\n\n            const worker = new Worker(this._videoWorkerUri),\n                rpc = new RpcProvider((payload: any, transfer?: any) => worker.postMessage(payload, transfer));\n\n            worker.onmessage = (e: MessageEvent) => rpc.dispatch(e.data);\n\n            await rpc.rpc('/use-port', channel.port1, [channel.port1]);\n        }\n\n        await this._rpc.rpc<SetupMessage, any>(\n            RPC_TYPE.setup,\n            {\n                videoProcessorPort: channel && channel.port2\n            },\n            channel ? [channel.port2] : []\n        );\n    }\n\n    stateChanged = new Event<EmulationServiceInterface.State>();\n    frequencyUpdate = new Event<number>();\n\n    private _rateLimitEnforced = true;\n\n    private _mutex = new Mutex();\n    private _worker: Worker = null;\n    private _rpc: RpcProvider = null;\n\n    private _state = EmulationServiceInterface.State.stopped;\n    private _lastError: Error = null;\n\n    private _emulationContext: EmulationContext = null;\n    private _frequency = 0;\n\n    private _waveformChannels = new Array<WaveformAudioProxy>(2);\n    private _pcmChannel: PCMAudioProxy = null;\n\n    private _controlProxy: ControlProxy = null;\n    private _controlProxyUpdateHandle: any = null;\n    private _proxyState = ProxyState.stopped;\n\n    private _saveConfig: StellaConfig = null;\n}\n\nexport { EmulationService as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { RpcProviderInterface } from 'worker-rpc';\nimport { Event } from 'microevent.ts';\n\nimport Pool from '../../../../tools/pool/Pool';\nimport PoolMemberInterface from '../../../../tools/pool/PoolMemberInterface';\nimport PCMAudioEndpointInterface from '../../../driver/PCMAudioEndpointInterface';\nimport {\n    SIGNAL_TYPE,\n    RPC_TYPE,\n    PCMAudioReturnFrameMessage,\n    PCMAudioNewFrameMessage,\n    PCMAudioTogglePauseMessage,\n    PCMAudioParametersResponse\n} from './messages';\n\nclass PCMAudioProxy implements PCMAudioEndpointInterface {\n    constructor(private _index: number, private _rpc: RpcProviderInterface) {\n        this._framePool.event.release.addHandler(PCMAudioProxy._onReleaseFragment, this);\n\n        this._signalReturnFrame = SIGNAL_TYPE.pcmAudioReturnFrame(this._index);\n    }\n\n    init(): this {\n        this._rpc\n            .registerSignalHandler(SIGNAL_TYPE.pcmAudioNewFrame(this._index), this._onNewFrame.bind(this))\n            .registerSignalHandler(SIGNAL_TYPE.pcmAudioTogglePause(this._index), this._onTogglePause.bind(this));\n\n        return this;\n    }\n\n    async start(): Promise<void> {\n        if (this._enabled) {\n            return;\n        }\n\n        const params = await this._rpc.rpc<void, PCMAudioParametersResponse>(\n            RPC_TYPE.getPCMAudioParameters(this._index)\n        );\n\n        this._sampleRate = params.sampleRate;\n        this._frameSize = params.frameSize;\n        this._paused = params.paused;\n\n        this._enabled = true;\n    }\n\n    stop(): void {\n        this._enabled = false;\n    }\n\n    isPaused(): boolean {\n        return this._paused;\n    }\n\n    getSampleRate(): number {\n        return this._sampleRate;\n    }\n\n    getFrameSize(): number {\n        return this._frameSize;\n    }\n\n    private static _onReleaseFragment(frame: Float32Array, self: PCMAudioProxy): void {\n        if (!self._frameMap.has(frame)) {\n            return;\n        }\n\n        self._rpc.signal<PCMAudioReturnFrameMessage>(\n            self._signalReturnFrame,\n            {\n                id: self._frameMap.get(frame),\n                buffer: frame.buffer\n            },\n            [frame.buffer]\n        );\n    }\n\n    private _onNewFrame(msg: PCMAudioNewFrameMessage): void {\n        if (!this._enabled) {\n            return;\n        }\n\n        const frame = this._framePool.get(),\n            data = new Float32Array(msg.buffer);\n\n        frame.adopt(data);\n        this._frameMap.set(data, msg.id);\n\n        this.newFrame.dispatch(frame);\n    }\n\n    private _onTogglePause(msg: PCMAudioTogglePauseMessage): void {\n        if (msg.paused === this._paused) {\n            return;\n        }\n\n        this._paused = msg.paused;\n        this.togglePause.dispatch(this._paused);\n    }\n\n    newFrame = new Event<PoolMemberInterface<Float32Array>>();\n\n    togglePause = new Event<boolean>();\n\n    private _sampleRate = 0;\n    private _frameSize = 0;\n    private _paused = false;\n\n    private _framePool = new Pool<Float32Array>(() => null);\n    private _frameMap = new WeakMap<Float32Array, number>();\n\n    private _enabled = false;\n\n    private _signalReturnFrame = '';\n}\n\nexport { PCMAudioProxy as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport VideoEndpointInterface from '../../../driver/VideoEndpointInterface';\nimport { RpcProviderInterface } from 'worker-rpc';\nimport PoolMemberInterface from '../../../../tools/pool/PoolMemberInterface';\n\nimport {\n    SIGNAL_TYPE,\n    RPC_TYPE,\n    VideoNewFrameMessage,\n    VideoReturnSurfaceMessage,\n    VideoParametersResponse\n} from './messages';\n\nclass VideoProxy implements VideoEndpointInterface {\n    constructor(private _rpc: RpcProviderInterface) {}\n\n    init(): void {\n        this._rpc.registerSignalHandler(SIGNAL_TYPE.videoNewFrame, this._onNewFrame.bind(this));\n    }\n\n    async start(): Promise<void> {\n        if (this._active) {\n            this.stop();\n        }\n\n        const videoParameters = await this._rpc.rpc<void, VideoParametersResponse>(RPC_TYPE.getVideoParameters);\n\n        this._active = true;\n        this._width = videoParameters.width;\n        this._height = videoParameters.height;\n        this._ids = new Set<number>();\n    }\n\n    stop(): void {\n        this._active = false;\n        this._ids = null;\n    }\n\n    getWidth(): number {\n        return this._width;\n    }\n\n    getHeight(): number {\n        return this._height;\n    }\n\n    private _onNewFrame(message: VideoNewFrameMessage): void {\n        if (!this._active) {\n            console.warn('video proxy deactivated: ignoring frame');\n            return;\n        }\n\n        if (this._width !== message.width || this._height !== message.height) {\n            console.warn(`surface dimensions do not match; ignoring frame`);\n            return;\n        }\n\n        this._ids.add(message.id);\n\n        const imageData = new ImageData(new Uint8ClampedArray(message.buffer), message.width, message.height);\n\n        this.newFrame.dispatch({\n            get: () => imageData,\n\n            release: () => {\n                if (this._active && this._ids.has(message.id)) {\n                    this._rpc.signal<VideoReturnSurfaceMessage>(\n                        SIGNAL_TYPE.videoReturnSurface,\n                        {\n                            id: message.id,\n                            buffer: message.buffer\n                        },\n                        [message.buffer]\n                    );\n                }\n            },\n\n            dispose: () => undefined,\n\n            adopt: () => {\n                throw new Error('adopt is not implemented');\n            }\n        });\n    }\n\n    newFrame = new Event<PoolMemberInterface<ImageData>>();\n\n    private _active = false;\n    private _width = 0;\n    private _height = 0;\n    private _ids: Set<number> = null;\n}\n\nexport { VideoProxy as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport { RpcProviderInterface } from 'worker-rpc';\nimport WaveformAudioOutputInterface from '../../../../machine/io/WaveformAudioOutputInterface';\nimport ToneGenerator from '../../../../machine/stella/tia/ToneGenerator';\nimport StellaConfig from '../../../../machine/stella/Config';\nimport AudioOutputBuffer from '../../../../tools/AudioOutputBuffer';\n\nimport {\n    SIGNAL_TYPE,\n    RPC_TYPE,\n    WaveformAudioBufferChangeMessage,\n    WaveformAudioVolumeChangeMessage,\n    WaveformAudioParametersResponse\n} from './messages';\n\nclass WaveformAudioProxy implements WaveformAudioOutputInterface {\n    constructor(private _index: number, private _rpc: RpcProviderInterface) {}\n\n    init(): this {\n        this._rpc\n            .registerSignalHandler(SIGNAL_TYPE.waveformAudioBufferChange, this._onBufferChangeSignal.bind(this))\n            .registerSignalHandler(SIGNAL_TYPE.waveformAudioVolumeChange, this._onVolumeChangeSignal.bind(this))\n            .registerSignalHandler(SIGNAL_TYPE.audioStop, this._onStopSignal.bind(this));\n\n        return this;\n    }\n\n    async start(config: StellaConfig): Promise<void> {\n        const parameters = await this._rpc.rpc<void, WaveformAudioParametersResponse>(\n            RPC_TYPE.getWaveformAudioParameters(this._index)\n        );\n\n        this._toneGenerator.setConfig(config);\n        this.setVolume(parameters.volume);\n    }\n\n    setVolume(value: number): this {\n        this._volume = value;\n\n        return this;\n    }\n\n    getVolume(): number {\n        return this._volume;\n    }\n\n    getBuffer(key: number): AudioOutputBuffer {\n        return this._toneGenerator.getBuffer(key);\n    }\n\n    private _onVolumeChangeSignal(message: WaveformAudioVolumeChangeMessage): void {\n        if (message.index === this._index) {\n            this._volume = message.value;\n            this.volumeChanged.dispatch(this._volume);\n        }\n    }\n\n    private _onBufferChangeSignal(message: WaveformAudioBufferChangeMessage): void {\n        if (message.index === this._index) {\n            this.bufferChanged.dispatch(message.key);\n        }\n    }\n\n    private _onStopSignal(index: number): void {\n        if (index === this._index) {\n            this.stop.dispatch(undefined);\n        }\n    }\n\n    bufferChanged = new Event<number>();\n    volumeChanged = new Event<number>();\n    stop = new Event<void>();\n\n    private _toneGenerator = new ToneGenerator();\n    private _volume = 0;\n}\n\nexport { WaveformAudioProxy as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport StellaConfig from '../../../../machine/stella/Config';\nimport CartridgeInfo from '../../../../machine/stella/cartridge/CartridgeInfo';\nimport { ProcessorConfig as VideoProcessorConfig } from '../../../../video/processing/config';\n\nexport const RPC_TYPE = {\n    emulationPause: 'emulation/pause',\n    emulationReset: 'emulation/reset',\n    emulationResume: 'emulation/resume',\n    emulationSetRateLimit: 'emulation/setRateLimit',\n    emulationStart: 'emulation/start',\n    emulationStop: 'emulation/stop',\n    emulationFetchLastError: 'emulation/fetchLastError',\n    getVideoParameters: 'video/getParameters',\n    getWaveformAudioParameters: (index: number) => `audio/waveform/getParameters/${index}`,\n    getPCMAudioParameters: (index: number) => `audio/pcm/getParameters/${index}`,\n    setup: '/setup'\n};\nObject.freeze(RPC_TYPE);\n\nexport const SIGNAL_TYPE = {\n    emulationError: 'emulation/error',\n    emulationFrequencyUpdate: 'emulation/frequencyUpdate',\n    videoNewFrame: 'video/newFrame',\n    videoReturnSurface: 'video/returnSurface',\n    controlStateUpdate: 'control/stateUpdate',\n    waveformAudioVolumeChange: 'audio/waveform/volumeChange',\n    waveformAudioBufferChange: 'audio/waveform/bufferChange',\n    pcmAudioNewFrame: (index: number) => `audio/pcm/newFrame/${index}`,\n    pcmAudioTogglePause: (index: number) => `audio/pcm/togglePause/${index}`,\n    pcmAudioReturnFrame: (index: number) => `audio/pcm/returnFrame/${index}`,\n    audioStop: 'audio/stop'\n};\nObject.freeze(SIGNAL_TYPE);\n\nexport interface SetupMessage {\n    videoProcessorPort: MessagePort;\n}\n\nexport interface EmulationStartMessage {\n    buffer: { [i: number]: number; length: number };\n    config: StellaConfig;\n    cartridgeType?: CartridgeInfo.CartridgeType;\n    videoProcessing?: Array<VideoProcessorConfig>;\n}\n\nexport interface VideoParametersResponse {\n    width: number;\n    height: number;\n}\n\nexport interface WaveformAudioParametersResponse {\n    volume: number;\n}\n\nexport interface VideoNewFrameMessage {\n    id: number;\n    width: number;\n    height: number;\n    buffer: ArrayBuffer;\n}\n\nexport interface VideoReturnSurfaceMessage {\n    id: number;\n    buffer: ArrayBuffer;\n}\n\nexport interface WaveformAudioVolumeChangeMessage {\n    index: number;\n    value: number;\n}\n\nexport interface WaveformAudioBufferChangeMessage {\n    index: number;\n    key: number;\n}\n\nexport interface PCMAudioParametersResponse {\n    sampleRate: number;\n    frameSize: number;\n    paused: boolean;\n}\n\nexport interface PCMAudioNewFrameMessage {\n    buffer: ArrayBuffer;\n    id: number;\n}\n\nexport interface PCMAudioTogglePauseMessage {\n    paused: boolean;\n}\n\nexport interface PCMAudioReturnFrameMessage {\n    id: number;\n    buffer: ArrayBuffer;\n}\n"
  ]
}