{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "node_modules/async-mutex/lib/Mutex.js",
    "node_modules/async-mutex/lib/index.js",
    "node_modules/microevent.ts/lib/Event.js",
    "node_modules/microevent.ts/lib/index.js",
    "node_modules/screenfull/dist/screenfull.js",
    "node_modules/tslib/tslib.js",
    "node_modules/worker-rpc/lib/RpcProvider.js",
    "node_modules/worker-rpc/lib/index.js",
    "src/machine/io/DigitalJoystick.ts",
    "src/machine/io/Paddle.ts",
    "src/machine/io/Switch.ts",
    "src/machine/stella/Config.ts",
    "src/machine/stella/ControlPanel.ts",
    "src/machine/stella/cartridge/CartridgeInfo.ts",
    "src/machine/stella/tia/ToneGenerator.ts",
    "src/tools/AudioOutputBuffer.ts",
    "src/tools/RingBuffer.ts",
    "src/tools/base64.ts",
    "src/tools/pool/Pool.ts",
    "src/tools/pool/PoolMember.ts",
    "src/web/driver/FullscreenVideo.ts",
    "src/web/driver/Gamepad.ts",
    "src/web/driver/MouseAsPaddle.ts",
    "src/web/driver/SimpleCanvasVideo.ts",
    "src/web/driver/WebAudio.ts",
    "src/web/driver/audio/LinearResampler.ts",
    "src/web/driver/audio/PCMChannel.ts",
    "src/web/driver/audio/WaveformChannel.ts",
    "src/web/driver/webgl/WebglVideo.ts",
    "src/web/driver/webgl/shader.ts",
    "src/web/embedded/stellerator/ControlPanelProxy.ts",
    "src/web/embedded/stellerator/Stellerator.ts",
    "src/web/embedded/stellerator/SwitchProxy.ts",
    "src/web/embedded/stellerator/index.ts",
    "src/web/stella/driver/KeyboardIO.ts",
    "src/web/stella/driver/WebAudio.ts",
    "src/web/stella/service/DriverManager.ts",
    "src/web/stella/service/EmulationServiceInterface.ts",
    "src/web/stella/service/worker/ControlProxy.ts",
    "src/web/stella/service/worker/EmulationContext.ts",
    "src/web/stella/service/worker/EmulationService.ts",
    "src/web/stella/service/worker/PCMAudioProxy.ts",
    "src/web/stella/service/worker/VideoProxy.ts",
    "src/web/stella/service/worker/WaveformAudioProxy.ts",
    "src/web/stella/service/worker/messages.ts"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5EA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Mutex = /** @class */ (function () {\n    function Mutex() {\n        this._queue = [];\n        this._pending = false;\n    }\n    Mutex.prototype.isLocked = function () {\n        return this._pending;\n    };\n    Mutex.prototype.acquire = function () {\n        var _this = this;\n        var ticket = new Promise(function (resolve) { return _this._queue.push(resolve); });\n        if (!this._pending) {\n            this._dispatchNext();\n        }\n        return ticket;\n    };\n    Mutex.prototype.runExclusive = function (callback) {\n        return this\n            .acquire()\n            .then(function (release) {\n            var result;\n            try {\n                result = callback();\n            }\n            catch (e) {\n                release();\n                throw (e);\n            }\n            return Promise\n                .resolve(result)\n                .then(function (x) { return (release(), x); }, function (e) {\n                release();\n                throw e;\n            });\n        });\n    };\n    Mutex.prototype._dispatchNext = function () {\n        if (this._queue.length > 0) {\n            this._pending = true;\n            this._queue.shift()(this._dispatchNext.bind(this));\n        }\n        else {\n            this._pending = false;\n        }\n    };\n    return Mutex;\n}());\nexports.default = Mutex;\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Mutex_1 = require(\"./Mutex\");\nexports.Mutex = Mutex_1.default;\n",
    "\"use strict\";\nvar factories = [];\nfactories[0] = function () {\n    return function dispatcher0() { };\n};\nfactories[1] = function (callback, context) {\n    if (typeof (context) === 'undefined')\n        return callback;\n    return function dispatcher1(payload) {\n        callback(payload, context);\n    };\n};\nfunction getFactory(handlerCount) {\n    if (!factories[handlerCount])\n        factories[handlerCount] = compileFactory(handlerCount);\n    return factories[handlerCount];\n}\nfunction compileFactory(handlerCount) {\n    var src = 'return function dispatcher' + handlerCount + '(payload) {\\n';\n    var argsHandlers = [], argsContexts = [];\n    for (var i = 0; i < handlerCount; i++) {\n        argsHandlers.push('cb' + i);\n        argsContexts.push('ctx' + i);\n        src += '    cb' + i + '(payload, ctx' + i + ');\\n';\n    }\n    src += '};';\n    return new (Function.bind.apply(Function, [void 0].concat(argsHandlers.concat(argsContexts), [src])))();\n}\nvar Event = (function () {\n    function Event() {\n        this.hasHandlers = false;\n        this._handlers = [];\n        this._contexts = [];\n        this._createDispatcher();\n    }\n    Event.prototype.addHandler = function (handler, context) {\n        if (!this.isHandlerAttached(handler, context)) {\n            this._handlers.push(handler);\n            this._contexts.push(context);\n            this._createDispatcher();\n            this._updateHasHandlers();\n        }\n        return this;\n    };\n    Event.prototype.removeHandler = function (handler, context) {\n        var idx = this._getHandlerIndex(handler, context);\n        if (typeof (idx) !== 'undefined') {\n            this._handlers.splice(idx, 1);\n            this._contexts.splice(idx, 1);\n            this._createDispatcher();\n            this._updateHasHandlers();\n        }\n        return this;\n    };\n    Event.prototype.isHandlerAttached = function (handler, context) {\n        return typeof (this._getHandlerIndex(handler, context)) !== 'undefined';\n    };\n    Event.prototype._updateHasHandlers = function () {\n        this.hasHandlers = !!this._handlers.length;\n    };\n    Event.prototype._getHandlerIndex = function (handler, context) {\n        var handlerCount = this._handlers.length;\n        var idx;\n        for (idx = 0; idx < handlerCount; idx++) {\n            if (this._handlers[idx] === handler && this._contexts[idx] === context)\n                break;\n        }\n        return idx < handlerCount ? idx : undefined;\n    };\n    Event.prototype._createDispatcher = function () {\n        this.dispatch = getFactory(this._handlers.length).apply(this, this._handlers.concat(this._contexts));\n    };\n    return Event;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Event;\n",
    "\"use strict\";\nvar Event_1 = require('./Event');\nexports.Event = Event_1.default;\n",
    "/*!\n* screenfull\n* v3.3.2 - 2017-10-27\n* (c) Sindre Sorhus; MIT License\n*/\n(function () {\n\t'use strict';\n\n\tvar document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\tvar isCommonjs = typeof module !== 'undefined' && module.exports;\n\tvar keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\n\n\tvar fn = (function () {\n\t\tvar val;\n\n\t\tvar fnMap = [\n\t\t\t[\n\t\t\t\t'requestFullscreen',\n\t\t\t\t'exitFullscreen',\n\t\t\t\t'fullscreenElement',\n\t\t\t\t'fullscreenEnabled',\n\t\t\t\t'fullscreenchange',\n\t\t\t\t'fullscreenerror'\n\t\t\t],\n\t\t\t// New WebKit\n\t\t\t[\n\t\t\t\t'webkitRequestFullscreen',\n\t\t\t\t'webkitExitFullscreen',\n\t\t\t\t'webkitFullscreenElement',\n\t\t\t\t'webkitFullscreenEnabled',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t// Old WebKit (Safari 5.1)\n\t\t\t[\n\t\t\t\t'webkitRequestFullScreen',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitCurrentFullScreenElement',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t[\n\t\t\t\t'mozRequestFullScreen',\n\t\t\t\t'mozCancelFullScreen',\n\t\t\t\t'mozFullScreenElement',\n\t\t\t\t'mozFullScreenEnabled',\n\t\t\t\t'mozfullscreenchange',\n\t\t\t\t'mozfullscreenerror'\n\t\t\t],\n\t\t\t[\n\t\t\t\t'msRequestFullscreen',\n\t\t\t\t'msExitFullscreen',\n\t\t\t\t'msFullscreenElement',\n\t\t\t\t'msFullscreenEnabled',\n\t\t\t\t'MSFullscreenChange',\n\t\t\t\t'MSFullscreenError'\n\t\t\t]\n\t\t];\n\n\t\tvar i = 0;\n\t\tvar l = fnMap.length;\n\t\tvar ret = {};\n\n\t\tfor (; i < l; i++) {\n\t\t\tval = fnMap[i];\n\t\t\tif (val && val[1] in document) {\n\t\t\t\tfor (i = 0; i < val.length; i++) {\n\t\t\t\t\tret[fnMap[0][i]] = val[i];\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t})();\n\n\tvar eventNameMap = {\n\t\tchange: fn.fullscreenchange,\n\t\terror: fn.fullscreenerror\n\t};\n\n\tvar screenfull = {\n\t\trequest: function (elem) {\n\t\t\tvar request = fn.requestFullscreen;\n\n\t\t\telem = elem || document.documentElement;\n\n\t\t\t// Work around Safari 5.1 bug: reports support for\n\t\t\t// keyboard in fullscreen even though it doesn't.\n\t\t\t// Browser sniffing, since the alternative with\n\t\t\t// setTimeout is even worse.\n\t\t\tif (/ Version\\/5\\.1(?:\\.\\d+)? Safari\\//.test(navigator.userAgent)) {\n\t\t\t\telem[request]();\n\t\t\t} else {\n\t\t\t\telem[request](keyboardAllowed && Element.ALLOW_KEYBOARD_INPUT);\n\t\t\t}\n\t\t},\n\t\texit: function () {\n\t\t\tdocument[fn.exitFullscreen]();\n\t\t},\n\t\ttoggle: function (elem) {\n\t\t\tif (this.isFullscreen) {\n\t\t\t\tthis.exit();\n\t\t\t} else {\n\t\t\t\tthis.request(elem);\n\t\t\t}\n\t\t},\n\t\tonchange: function (callback) {\n\t\t\tthis.on('change', callback);\n\t\t},\n\t\tonerror: function (callback) {\n\t\t\tthis.on('error', callback);\n\t\t},\n\t\ton: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.addEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\toff: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.removeEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\traw: fn\n\t};\n\n\tif (!fn) {\n\t\tif (isCommonjs) {\n\t\t\tmodule.exports = false;\n\t\t} else {\n\t\t\twindow.screenfull = false;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tObject.defineProperties(screenfull, {\n\t\tisFullscreen: {\n\t\t\tget: function () {\n\t\t\t\treturn Boolean(document[fn.fullscreenElement]);\n\t\t\t}\n\t\t},\n\t\telement: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn document[fn.fullscreenElement];\n\t\t\t}\n\t\t},\n\t\tenabled: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\t// Coerce to boolean in case of old WebKit\n\t\t\t\treturn Boolean(document[fn.fullscreenEnabled]);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (isCommonjs) {\n\t\tmodule.exports = screenfull;\n\t} else {\n\t\twindow.screenfull = screenfull;\n\t}\n})();\n",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [0, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator];\r\n        return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n});\r\n",
    "\"use strict\";\nvar microevent_ts_1 = require('microevent.ts');\nvar MSG_RESOLVE_TRANSACTION = \"resolve_transaction\", MSG_REJECT_TRANSACTION = \"reject_transaction\", MSG_ERROR = \"error\";\nvar RpcProvider = (function () {\n    function RpcProvider(_dispatch, _rpcTimeout) {\n        if (_rpcTimeout === void 0) { _rpcTimeout = 0; }\n        this._dispatch = _dispatch;\n        this._rpcTimeout = _rpcTimeout;\n        this.error = new microevent_ts_1.Event();\n        this._rpcHandlers = {};\n        this._signalHandlers = {};\n        this._pendingTransactions = {};\n        this._nextTransactionId = 0;\n    }\n    RpcProvider.prototype.dispatch = function (payload) {\n        var message = payload;\n        switch (message.type) {\n            case RpcProvider.MessageType.signal:\n                return this._handleSignal(message);\n            case RpcProvider.MessageType.rpc:\n                return this._handeRpc(message);\n            case RpcProvider.MessageType.internal:\n                return this._handleInternal(message);\n            default:\n                this._raiseError(\"invalid message type \" + message.type);\n        }\n    };\n    RpcProvider.prototype.rpc = function (id, payload, transfer) {\n        var _this = this;\n        var transactionId = this._nextTransactionId++;\n        this._dispatch({\n            type: RpcProvider.MessageType.rpc,\n            transactionId: transactionId,\n            id: id,\n            payload: payload\n        }, transfer ? transfer : undefined);\n        return new Promise(function (resolve, reject) {\n            var transaction = _this._pendingTransactions[transactionId] = {\n                id: transactionId,\n                resolve: resolve,\n                reject: reject\n            };\n            if (_this._rpcTimeout > 0) {\n                _this._pendingTransactions[transactionId].timeoutHandle =\n                    setTimeout(function () { return _this._transactionTimeout(transaction); }, _this._rpcTimeout);\n            }\n        });\n    };\n    ;\n    RpcProvider.prototype.signal = function (id, payload, transfer) {\n        this._dispatch({\n            type: RpcProvider.MessageType.signal,\n            id: id,\n            payload: payload,\n        }, transfer ? transfer : undefined);\n        return this;\n    };\n    RpcProvider.prototype.registerRpcHandler = function (id, handler) {\n        if (this._rpcHandlers[id]) {\n            throw new Error(\"rpc handler for \" + id + \" already registered\");\n        }\n        this._rpcHandlers[id] = handler;\n        return this;\n    };\n    ;\n    RpcProvider.prototype.registerSignalHandler = function (id, handler) {\n        if (!this._signalHandlers[id]) {\n            this._signalHandlers[id] = [];\n        }\n        this._signalHandlers[id].push(handler);\n        return this;\n    };\n    RpcProvider.prototype.deregisterRpcHandler = function (id, handler) {\n        if (this._rpcHandlers[id]) {\n            delete this._rpcHandlers[id];\n        }\n        return this;\n    };\n    ;\n    RpcProvider.prototype.deregisterSignalHandler = function (id, handler) {\n        if (this._signalHandlers[id]) {\n            this._signalHandlers[id] = this._signalHandlers[id].filter(function (h) { return handler !== h; });\n        }\n        return this;\n    };\n    RpcProvider.prototype._raiseError = function (error) {\n        this.error.dispatch(new Error(error));\n        this._dispatch({\n            type: RpcProvider.MessageType.internal,\n            id: MSG_ERROR,\n            payload: error\n        });\n    };\n    RpcProvider.prototype._handleSignal = function (message) {\n        if (!this._signalHandlers[message.id]) {\n            return this._raiseError(\"invalid signal \" + message.id);\n        }\n        this._signalHandlers[message.id].forEach(function (handler) { return handler(message.payload); });\n    };\n    RpcProvider.prototype._handeRpc = function (message) {\n        var _this = this;\n        if (!this._rpcHandlers[message.id]) {\n            return this._raiseError(\"invalid rpc \" + message.id);\n        }\n        Promise.resolve(this._rpcHandlers[message.id](message.payload))\n            .then(function (result) { return _this._dispatch({\n            type: RpcProvider.MessageType.internal,\n            id: MSG_RESOLVE_TRANSACTION,\n            transactionId: message.transactionId,\n            payload: result\n        }); }, function (reason) { return _this._dispatch({\n            type: RpcProvider.MessageType.internal,\n            id: MSG_REJECT_TRANSACTION,\n            transactionId: message.transactionId,\n            payload: reason\n        }); });\n    };\n    RpcProvider.prototype._handleInternal = function (message) {\n        switch (message.id) {\n            case MSG_RESOLVE_TRANSACTION:\n                if (!this._pendingTransactions[message.transactionId]) {\n                    return this._raiseError(\"no pending transaction with id \" + message.transactionId);\n                }\n                this._pendingTransactions[message.transactionId].resolve(message.payload);\n                this._clearTransaction(this._pendingTransactions[message.transactionId]);\n                break;\n            case MSG_REJECT_TRANSACTION:\n                if (!this._pendingTransactions[message.transactionId]) {\n                    return this._raiseError(\"no pending transaction with id \" + message.transactionId);\n                }\n                this._pendingTransactions[message.transactionId].reject(message.payload);\n                this._clearTransaction(this._pendingTransactions[message.transactionId]);\n                break;\n            case MSG_ERROR:\n                this.error.dispatch(new Error(\"remote error: \" + message.payload));\n                break;\n            default:\n                this._raiseError(\"unhandled internal message \" + message.id);\n                break;\n        }\n    };\n    RpcProvider.prototype._transactionTimeout = function (transaction) {\n        transaction.reject('transaction timed out');\n        this._raiseError(\"transaction \" + transaction.id + \" timed out\");\n        delete this._pendingTransactions[transaction.id];\n        return;\n    };\n    RpcProvider.prototype._clearTransaction = function (transaction) {\n        if (typeof (transaction.timeoutHandle) !== 'undefined') {\n            clearTimeout(transaction.timeoutHandle);\n        }\n        delete this._pendingTransactions[transaction.id];\n    };\n    return RpcProvider;\n}());\nvar RpcProvider;\n(function (RpcProvider) {\n    (function (MessageType) {\n        MessageType[MessageType[\"signal\"] = 0] = \"signal\";\n        MessageType[MessageType[\"rpc\"] = 1] = \"rpc\";\n        MessageType[MessageType[\"internal\"] = 2] = \"internal\";\n    })(RpcProvider.MessageType || (RpcProvider.MessageType = {}));\n    var MessageType = RpcProvider.MessageType;\n    ;\n})(RpcProvider || (RpcProvider = {}));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RpcProvider;\n",
    "\"use strict\";\nvar RpcProvider_1 = require('./RpcProvider');\nexports.RpcProvider = RpcProvider_1.default;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport DigitalJoystickInterface from './DigitalJoystickInterface';\nimport Switch from './Switch';\nimport SwitchInterface from './SwitchInterface';\n\nexport default class DigitalJoystick implements DigitalJoystickInterface {\n    getLeft(): SwitchInterface {\n        return this._left;\n    }\n\n    getRight(): SwitchInterface {\n        return this._right;\n    }\n\n    getUp(): SwitchInterface {\n        return this._up;\n    }\n\n    getDown(): SwitchInterface {\n        return this._down;\n    }\n\n    getFire(): SwitchInterface {\n        return this._fire;\n    }\n\n    private _left = new Switch();\n    private _right = new Switch();\n    private _up = new Switch();\n    private _down = new Switch();\n\n    private _fire = new Switch();\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport Switch from './Switch';\nimport PaddleInterface from './PaddleInterface';\n\nexport default class Paddle implements PaddleInterface {\n    setValue(value: number): void {\n        this._value = value;\n        this.valueChanged.dispatch(value);\n    }\n\n    getValue(): number {\n        return this._value;\n    }\n\n    getFire(): Switch {\n        return this._fireSwitch;\n    }\n\n    valueChanged = new Event<number>();\n\n    protected _fireSwitch = new Switch();\n    protected _value = 0.5;\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport SwitchInterface from './SwitchInterface';\n\nexport default class Switch implements SwitchInterface {\n    constructor(private _state: boolean = false) {}\n\n    read(): boolean {\n        this.beforeRead.dispatch(this);\n        return this._state;\n    }\n\n    peek(): boolean {\n        return this._state;\n    }\n\n    toggle(state: boolean): void {\n        if (this._state === state) {\n            return;\n        }\n\n        this._state = state;\n        this.stateChanged.dispatch(state);\n    }\n\n    stateChanged = new Event<boolean>();\n    beforeRead = new Event<this>();\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\ninterface Config {\n    tvMode: Config.TvMode;\n    enableAudio: boolean;\n    randomSeed: number;\n    emulatePaddles: boolean;\n    frameStart: number;\n    pcmAudio: boolean;\n}\n\nnamespace Config {\n    export const enum TvMode {\n        ntsc,\n        pal,\n        secam\n    }\n\n    export function create(config: Partial<Config> = {}): Config {\n        return {\n            tvMode: TvMode.ntsc,\n            enableAudio: true,\n            randomSeed: -1,\n            emulatePaddles: true,\n            frameStart: -1,\n            pcmAudio: false,\n\n            ...config\n        };\n    }\n\n    export function getClockHz(config: Config): number {\n        switch (config.tvMode) {\n            case Config.TvMode.ntsc:\n                return 262 * 228 * 60;\n\n            case Config.TvMode.pal:\n            case Config.TvMode.secam:\n                return 312 * 228 * 50;\n        }\n    }\n}\n\nexport { Config as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Switch from '../io/Switch';\nimport SwitchInterface from '../io/SwitchInterface';\nimport ControlPanelInterface from './ControlPanelInterface';\n\nclass ControlPanel implements ControlPanelInterface {\n    getSelectSwitch(): SwitchInterface {\n        return this._selectSwitch;\n    }\n\n    getResetButton(): SwitchInterface {\n        return this._resetButton;\n    }\n\n    getColorSwitch(): SwitchInterface {\n        return this._colorSwitch;\n    }\n\n    getDifficultySwitchP0(): SwitchInterface {\n        return this._difficutlyP0;\n    }\n\n    getDifficultySwitchP1(): SwitchInterface {\n        return this._difficutlyP1;\n    }\n\n    private _selectSwitch = new Switch();\n    private _resetButton = new Switch();\n    private _colorSwitch = new Switch();\n    private _difficutlyP0 = new Switch();\n    private _difficutlyP1 = new Switch();\n}\n\nexport { ControlPanel as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nnamespace CartridgeInfo {\n    export enum CartridgeType {\n        vanilla_2k = 'vanilla_2k',\n        vanilla_4k = 'vanilla_4k',\n\n        bankswitch_8k_F8 = 'bankswitch_8k_F8',\n        bankswitch_8k_E0 = 'bankswitch_8k_E0',\n        bankswitch_8k_3F = 'bankswitch_8k_3F',\n        bankswitch_8k_FE = 'bankswitch_8k_FE',\n        bankswitch_8k_UA = 'bankswitch_8k_UA',\n        bankswitch_8k_DPC = 'bankswitch_8k_DPC',\n        bankswitch_8k_econobanking = 'bankswitch_8k_econobanking',\n\n        bankswitch_12k_FA = 'bankswitch_12k_FA',\n\n        bankswitch_16k_F6 = 'bankswitch_16k_F6',\n        bankswitch_16k_E7 = 'bankswitch_16k_E7',\n\n        bankswitch_FA2 = 'bankswitch_FA2',\n\n        bankswitch_32k_F4 = 'bankswitch_32k_F4',\n\n        bankswitch_64k_F0 = 'bankswitch_64k_F0',\n        bankswitch_64k_EF = 'bankswitch_64k_EF',\n\n        bankswitch_3E = 'bankswitch_3E',\n        bankswitch_supercharger = 'bankswitch_supercharger',\n        bankswitch_dpc_plus = 'bankswitch_dpc_plus',\n        bankswitch_cdf = 'bankswitch_cdf',\n\n        unknown = 'unknown'\n    }\n\n    export function getAllTypes(): Array<CartridgeType> {\n        return [\n            CartridgeType.vanilla_2k,\n            CartridgeType.vanilla_4k,\n            CartridgeType.bankswitch_8k_F8,\n            CartridgeType.bankswitch_8k_E0,\n            CartridgeType.bankswitch_8k_3F,\n            CartridgeType.bankswitch_8k_FE,\n            CartridgeType.bankswitch_8k_UA,\n            CartridgeType.bankswitch_8k_econobanking,\n            CartridgeType.bankswitch_12k_FA,\n            CartridgeType.bankswitch_8k_DPC,\n            CartridgeType.bankswitch_16k_F6,\n            CartridgeType.bankswitch_16k_E7,\n            CartridgeType.bankswitch_FA2,\n            CartridgeType.bankswitch_32k_F4,\n            CartridgeType.bankswitch_3E,\n            CartridgeType.bankswitch_64k_F0,\n            CartridgeType.bankswitch_64k_EF,\n            CartridgeType.bankswitch_supercharger,\n            CartridgeType.bankswitch_dpc_plus,\n            CartridgeType.bankswitch_cdf,\n            CartridgeType.unknown\n        ];\n    }\n\n    export function describeCartridgeType(cartridgeType: CartridgeType): string {\n        switch (cartridgeType) {\n            case CartridgeType.vanilla_2k:\n                return 'plain 2k';\n\n            case CartridgeType.vanilla_4k:\n                return 'plain 4k';\n\n            case CartridgeType.bankswitch_8k_F8:\n                return 'bankswitched 8k, F8 (Atari) scheme';\n\n            case CartridgeType.bankswitch_8k_E0:\n                return 'bankswitched 8k, E0 (Parker Bros.) scheme';\n\n            case CartridgeType.bankswitch_8k_3F:\n                return 'bankswitched 8k, 3F (Tigervision) scheme';\n\n            case CartridgeType.bankswitch_8k_FE:\n                return 'bankswitched 8k, FE (Activision) scheme';\n\n            case CartridgeType.bankswitch_8k_UA:\n                return 'bankswitched 8k, UA (Pleiades) scheme';\n\n            case CartridgeType.bankswitch_12k_FA:\n                return 'bankswitched 12k, FA (CBS) scheme';\n\n            case CartridgeType.bankswitch_8k_DPC:\n                return 'bankswitched 8k + DPC';\n\n            case CartridgeType.bankswitch_8k_econobanking:\n                return 'bankswitched 8k, econobanking scheme';\n\n            case CartridgeType.bankswitch_16k_F6:\n                return 'bankswitched 16k, F6 (Atari) scheme';\n\n            case CartridgeType.bankswitch_16k_E7:\n                return 'bankswitched 16k, E7 (M-Network) scheme';\n\n            case CartridgeType.bankswitch_FA2:\n                return 'bankswitched 28k/29k, FA2 (modified CBS) scheme';\n\n            case CartridgeType.bankswitch_32k_F4:\n                return 'bankswitched 32k, F4 (Atari) scheme';\n\n            case CartridgeType.bankswitch_3E:\n                return 'bankswitched 3E (Tigervision + RAM) scheme';\n\n            case CartridgeType.bankswitch_64k_F0:\n                return 'bankswitched 64k, F0 (Megaboy) scheme';\n\n            case CartridgeType.bankswitch_64k_EF:\n                return 'bankswitched 64k, EFSC (Homestar Runner) scheme';\n\n            case CartridgeType.bankswitch_supercharger:\n                return 'bankswitched supercharger';\n\n            case CartridgeType.bankswitch_dpc_plus:\n                return 'bankswitched DPC+';\n\n            case CartridgeType.bankswitch_cdf:\n                return 'bankswitched CDF';\n\n            case CartridgeType.unknown:\n                return 'unknown';\n        }\n    }\n}\n\nexport { CartridgeInfo as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\n/*\n * The tone generator has been heavily influenced by the code found at\n * http://www.biglist.com/lists/stella/archives/200311/msg00156.html with following licence:\n *\n * sound.c\n * version 0.2\n *\n * Copyright (c) 2003 Adam Wozniak (adam@wozniakconsulting.com)\n * All Rights Reserved\n *\n * Permission granted to freely copy and use for any purpose, provided\n * this copyright header remains intact.\n */\nimport Config from '../Config';\nimport AudioOutputBuffer from '../../../tools/AudioOutputBuffer';\nimport { decode as decodeBase64 } from '../../../tools/base64';\n\nconst FREQUENCY_DIVISIORS = decodeBase64('AQEPAQEBAQEBAQEBAwMDAQ==');\n\n// all ones\nconst POLY0 = new Int8Array([1]);\n\n// 50% duty cycle\nconst POLY1 = new Int8Array([1, 1]);\n\n// 16/31 duty cycle\nconst POLY2 = new Int8Array([16, 15]);\n\n// 4 bit LFSR\nconst POLY4 = decodeBase64('AQICAQEBBAM=');\n\n// 5 bit LFSR\nconst POLY5 = decodeBase64('AQIBAQICBQQCAQMBAQEBBA==');\n\n// 9 bit LFSR\nconst POLY9 = decodeBase64(\n    'AQQBAwIEAQIDAgEBAQEBAQIEAgEEAQECAgEDAgEDAQEBBAEBAQECAQECBgECAgECAQIBAQIBBg' +\n        'IBAgIBAQEBAgICAgcCAwICAQEBAwIBAQIBAQcBAQMBAQIDAwEBAQICAQECAgQDBQEDAQEFAgEB' +\n        'AQIBAgEDAQIFAQECAQEBBQEBAQEBAQEBBgEBAQIBAQEBBAIBAQMBAwYDAgMBAQIBAgQBAQEDAQ' +\n        'EBAQMBAgEEAgIDBAEBBAECAQICAgEBBAMBBAQJBQQBBQMBAQMCAgIBBQECAQEBAgMBAgEBAwQC' +\n        'BQICAQIDAQEBAQECAQMDAwIBAgEBAQEBAwMBAgIDAQMBCA=='\n);\n\n// used by mode 15\nconst POLY68 = decodeBase64('BQYEBQoFAwcECgYDBgQJBg==');\n\n// used by mode 3\nconst POLY465 = decodeBase64(\n    'AgMCAQQBBgoCBAIBAQQFCQMDBAEBAQgFBQUEAQEBCAQCCAMDAQEHBAIHBQEDAQcEAQQIAgEDBA' +\n        'cBAwcDAgEGBgICBAUDAgYGAQMDAgUDBwMEAwICAgUJAwEFAwECAgsFAQUDAQECDAUBAgUCAQEM' +\n        'BgECBQECAQoGAwICBAECBgo='\n);\n\nconst POLYS = [\n    POLY0,\n    POLY4,\n    POLY4,\n    POLY465,\n    POLY1,\n    POLY1,\n    POLY2,\n    POLY5,\n    POLY9,\n    POLY5,\n    POLY2,\n    POLY0,\n    POLY1,\n    POLY1,\n    POLY2,\n    POLY68\n];\n\nclass ToneGenerator {\n    constructor(private _config?: Config) {}\n\n    setConfig(config: Config) {\n        this._config = config;\n    }\n\n    getKey(tone: number, frequency: number): number {\n        // Hack: this is at the boundary of hearing anyway and causes nasty artifacts during\n        // resampling, so we kill it right away.\n        if (POLYS[tone] === POLY1 && FREQUENCY_DIVISIORS[tone] * (frequency + 1) === 1) {\n            return 0;\n        }\n\n        return (tone << 5) | frequency;\n    }\n\n    getBuffer(key: number): AudioOutputBuffer {\n        const tone = (key >>> 5) & 0x0f,\n            frequency = key & 0x1f;\n\n        const poly = POLYS[tone];\n\n        let length = 0;\n        for (let i = 0; i < poly.length; i++) {\n            length += poly[i];\n        }\n\n        length = length * FREQUENCY_DIVISIORS[tone] * (frequency + 1);\n\n        const content = new Float32Array(length);\n\n        const sampleRate = Config.getClockHz(this._config) / 114;\n\n        let f = 0;\n        let count = 0;\n        let offset = 0;\n        let state = true;\n\n        for (let i = 0; i < length; i++) {\n            f++;\n\n            if (f === FREQUENCY_DIVISIORS[tone] * (frequency + 1)) {\n                f = 0;\n                count++;\n\n                if (count === poly[offset]) {\n                    offset++;\n                    count = 0;\n\n                    if (poly.length === offset) {\n                        offset = 0;\n                    }\n                }\n\n                state = !(offset & 0x01);\n            }\n\n            content[i] = state ? 1 : -1;\n        }\n\n        return new AudioOutputBuffer(content, sampleRate);\n    }\n}\n\nexport { ToneGenerator as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nclass AudioOutputBuffer {\n    constructor(private _content: Float32Array, private _sampleRate: number) {}\n\n    getLength(): number {\n        return this._content.length;\n    }\n\n    getContent(): Float32Array {\n        return this._content;\n    }\n\n    getSampleRate(): number {\n        return this._sampleRate;\n    }\n\n    replaceUnderlyingBuffer(buffer: Float32Array): void {\n        this._content = buffer;\n    }\n}\n\nexport { AudioOutputBuffer as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nclass RingBuffer<T> {\n    constructor(private _capacity: number) {\n        this._buffer = new Array<T>(this._capacity);\n\n        for (let i = 0; i < this._capacity; i++) {\n            this._buffer[i] = null;\n        }\n    }\n\n    size(): number {\n        return this._size;\n    }\n\n    pop(): T {\n        if (this._size === 0) {\n            return undefined;\n        }\n\n        const item = this._buffer[this._index];\n        this._buffer[this._index] = null;\n\n        this._index = (this._index + 1) % this._capacity;\n        this._size--;\n\n        return item;\n    }\n\n    push(item: T): this {\n        if (this._size === this._capacity) {\n            this.pop();\n        }\n\n        this._buffer[(this._index + this._size++) % this._capacity] = item;\n\n        return this;\n    }\n\n    forEach(fn: (item: T) => void): this {\n        for (let i = 0; i < this._size; i++) {\n            fn(this._buffer[(this._index + i) % this._capacity]);\n        }\n\n        return this;\n    }\n\n    clear(): this {\n        for (let i = 0; i < this._capacity; i++) {\n            this._buffer[i] = null;\n        }\n\n        this._size = 0;\n        this._index = 0;\n\n        return this;\n    }\n\n    private _size = 0;\n    private _index = 0;\n    private _buffer: Array<T>;\n}\n\nexport { RingBuffer as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nconst encodingsString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n    encodings = new Uint8Array(256);\n\nexport namespace __init {\n    let i: number;\n\n    for (i = 0; i < 256; i++) {\n        encodings[i] = 255;\n    }\n    for (i = 0; i < 64; i++) {\n        encodings[encodingsString.charCodeAt(i)] = i;\n    }\n\n    encodings['='.charCodeAt(0)] = 0;\n}\n\nfunction decodeChar(data: string, idx: number): number {\n    const value = encodings[data.charCodeAt(idx)];\n\n    if (value > 63) {\n        throw new Error('invalid base64 character \"' + data[idx] + '\" at index ' + idx);\n    }\n\n    return value;\n}\n\nfunction decodeNibble(data: string, idx: number): number {\n    return (\n        (decodeChar(data, idx) << 18) +\n        (decodeChar(data, idx + 1) << 12) +\n        (decodeChar(data, idx + 2) << 6) +\n        decodeChar(data, idx + 3)\n    );\n}\n\nfunction getPadding(data: string): number {\n    let padding = 0,\n        idx = data.length - 1;\n\n    while (idx >= 0 && data[idx--] === '=') {\n        padding++;\n    }\n\n    return padding;\n}\n\nexport function decode(data: string): Uint8Array {\n    if (data.length % 4 !== 0) {\n        throw new Error('invalid base64 data --- char count mismatch');\n    }\n\n    const nibbles = data.length / 4,\n        decodedSize = nibbles * 3 - getPadding(data),\n        decoded = new Uint8Array(decodedSize);\n\n    let idx = 0;\n\n    for (let i = 0; i < nibbles; i++) {\n        const nibble = decodeNibble(data, i * 4);\n\n        for (let j = 0; j < 3 && idx < decodedSize; j++) {\n            decoded[idx++] = (nibble >>> (8 * (2 - j))) & 0xff;\n        }\n    }\n\n    return decoded;\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport PoolMember from './PoolMember';\nimport PoolInterface from './PoolInterface';\n\nclass Pool<T> implements PoolInterface<T> {\n    constructor(private _factory: Pool.FactoryInterface<T>) {}\n\n    get(): PoolMember<T> {\n        let member: PoolMember<T>;\n\n        if (this._poolSize === 0) {\n            const newItem = this._factory();\n\n            member = new PoolMember<T>(\n                newItem,\n                (victim: PoolMember<T>) => this._releaseMember(victim),\n                (victim: PoolMember<T>) => this._disposeMember(victim)\n            );\n        } else {\n            member = this._pool[--this._poolSize];\n            member._isAvailable = false;\n        }\n\n        return member;\n    }\n\n    private _releaseMember(victim: PoolMember<T>) {\n        if (victim._isAvailable) {\n            throw new Error('Trying to release an already released pool member');\n        }\n\n        if (victim._isDisposed) {\n            throw new Error('Trying to release an already disposed pool member');\n        }\n\n        const position = this._poolSize++;\n\n        this._pool[position] = victim;\n\n        victim._isAvailable = true;\n        victim._poolPosition = position;\n\n        this.event.release.dispatch(victim.get());\n    }\n\n    private _disposeMember(victim: PoolMember<T>) {\n        if (victim._isDisposed) {\n            throw new Error('Trying to dispose of an already disposed pool member');\n        }\n\n        if (victim._isAvailable) {\n            if (this._poolSize > 1) {\n                this._pool[victim._poolPosition] = this._pool[this._poolSize - 1];\n            }\n\n            this._poolSize--;\n        }\n\n        victim._isDisposed = true;\n\n        this.event.dispose.dispatch(victim.get());\n    }\n\n    event = {\n        release: new Event<T>(),\n        dispose: new Event<T>()\n    };\n\n    private _pool: Array<PoolMember<T>> = [];\n\n    private _poolSize = 0;\n}\n\nnamespace Pool {\n    export interface FactoryInterface<T> {\n        (): T;\n    }\n\n    export interface RecycleCallbackInterface<T> {\n        (value: T): void;\n    }\n\n    export interface DisposeCallbackInterface<T> {\n        (value: T): void;\n    }\n}\n\nexport { Pool as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport PoolMemberInterface from './PoolMemberInterface';\n\nclass PoolMember<T> implements PoolMemberInterface<T> {\n    constructor(\n        private _value: T,\n        private _releaseCB: (victim: PoolMember<T>) => void,\n        private _disposeCB: (victim: PoolMember<T>) => void\n    ) {}\n\n    adopt(target: T): void {\n        this._value = target;\n    }\n\n    get(): T {\n        return this._value;\n    }\n\n    release(): void {\n        this._releaseCB(this);\n    }\n\n    dispose(): void {\n        this._disposeCB(this);\n    }\n\n    public _isAvailable = false;\n    public _isDisposed = false;\n    public _poolPosition: number;\n}\n\nexport { PoolMember as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport * as screenfull from 'screenfull';\nimport VideoDriver from './VideoDriverInterface';\n\nexport default class FullscreenVideoDriver {\n    constructor(private _videoDriver: VideoDriver) {}\n\n    engage(): void {\n        if (this._engaged) {\n            return;\n        }\n\n        this._engaged = true;\n\n        screenfull.on('change', this._changeListener);\n        screenfull.request(this._videoDriver.getCanvas());\n    }\n\n    disengage(): void {\n        if (!this._engaged) {\n            return;\n        }\n\n        screenfull.exit();\n    }\n\n    toggle(): void {\n        if (this._engaged) {\n            this.disengage();\n        } else {\n            this.engage();\n        }\n    }\n\n    isEngaged(): boolean {\n        return this._engaged;\n    }\n\n    private _onChange(): void {\n        if (screenfull.isFullscreen) {\n            window.addEventListener('resize', this._resizeListener);\n            this._adjustSizeForFullscreen();\n        } else {\n            this._resetSize();\n            window.removeEventListener('resize', this._resizeListener);\n            screenfull.off('change', this._changeListener);\n\n            this._engaged = false;\n        }\n    }\n\n    private _resetSize() {\n        const element = this._videoDriver.getCanvas();\n\n        element.style.width = '';\n        element.style.height = '';\n        element.style.maxWidth = '';\n        element.style.maxHeight = '';\n\n        setTimeout(() => this._videoDriver.resize(), 0);\n    }\n\n    private _adjustSizeForFullscreen() {\n        const element = this._videoDriver.getCanvas();\n\n        this._videoDriver.resize(window.innerWidth, window.innerHeight);\n        element.style.width = window.innerWidth + 'px';\n        element.style.height = window.innerHeight + 'px';\n        element.style.maxWidth = window.innerWidth + 'px';\n        element.style.maxHeight = window.innerHeight + 'px';\n    }\n\n    private _resizeListener: () => void = this._adjustSizeForFullscreen.bind(this);\n\n    private _changeListener: () => void = this._onChange.bind(this);\n\n    private _engaged = false;\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport DigitalJoystickInterface from '../../machine/io/DigitalJoystickInterface';\nimport SwitchInterface from '../../machine/io/SwitchInterface';\n\nconst MIN_POLL_INTERVAL = 50;\n\nconst enum MappingButton {\n    left = 'left',\n    right = 'right',\n    up = 'up',\n    down = 'down',\n    fire = 'fire',\n    start = 'start',\n    select = 'select'\n}\n\nconst standardMappings: { [button: string]: Array<number> } = {\n    [MappingButton.up]: [12],\n    [MappingButton.down]: [13],\n    [MappingButton.left]: [14],\n    [MappingButton.right]: [15],\n    [MappingButton.fire]: [0, 1, 2, 3, 10, 11],\n    [MappingButton.select]: [8],\n    [MappingButton.start]: [9]\n};\n\nexport default class GamepadDriver {\n    init(): void {\n        if (!navigator.getGamepads) {\n            throw new Error(`gamepad API not available`);\n        }\n\n        this._probeGamepads();\n        window.addEventListener('gamepadconnected', this._onGamepadConnect);\n        window.addEventListener('gamepaddisconnected', this._onGamepadDisconnect);\n    }\n\n    deinit(): void {\n        this.unbind();\n\n        window.removeEventListener('gamepadconnected', this._onGamepadConnect);\n        window.removeEventListener('gamepaddisconnected', this._onGamepadDisconnect);\n    }\n\n    bind({\n        joysticks = null,\n        start = null,\n        select = null\n    }: {\n        joysticks?: Array<DigitalJoystickInterface>;\n        start?: SwitchInterface;\n        select?: SwitchInterface;\n    }): void {\n        if (this._bound) {\n            return;\n        }\n\n        this._joysticks = joysticks || [];\n        this._start = start;\n        this._select = select;\n        this._bound = true;\n\n        this._joysticksShadow = this._joysticks.map(x => createShadowJoystick());\n        this._startShadow = this._start ? new ShadowSwitch() : null;\n        this._selectShadow = this._select ? new ShadowSwitch() : null;\n\n        this._controlledSwitches().forEach(swtch =>\n            swtch.beforeRead.addHandler(GamepadDriver._onBeforeSwitchRead, this)\n        );\n\n        this._initShadows();\n    }\n\n    unbind(): void {\n        if (!this._bound) {\n            return;\n        }\n\n        this._controlledSwitches().forEach(swtch =>\n            swtch.beforeRead.removeHandler(GamepadDriver._onBeforeSwitchRead, this)\n        );\n\n        this._joysticks = this._start = this._select = null;\n        this._bound = false;\n    }\n\n    getGamepadCount(): number {\n        return this._gamepadCount;\n    }\n\n    private static _onBeforeSwitchRead(swtch: SwitchInterface, self: GamepadDriver) {\n        const now = Date.now();\n\n        if (self._gamepadCount === 0 || now - self._lastPoll < MIN_POLL_INTERVAL) {\n            return;\n        }\n\n        self._lastPoll = now;\n\n        let gamepadCount = 0,\n            joystickIndex = 0,\n            start = false,\n            select = false;\n\n        const gamepads = navigator.getGamepads();\n\n        for (let i = 0; i < gamepads.length; i++) {\n            const gamepad = gamepads[i];\n\n            if (!gamepad) {\n                continue;\n            }\n\n            gamepadCount++;\n\n            self._updateJoystickState(gamepad, joystickIndex++);\n\n            start = start || self._readState(standardMappings[MappingButton.start], gamepad);\n            select = select || self._readState(standardMappings[MappingButton.select], gamepad);\n        }\n\n        if (gamepadCount > 0) {\n            if (self._start) {\n                self._startShadow.toggle(start);\n            }\n\n            if (self._select) {\n                self._selectShadow.toggle(select);\n            }\n        }\n\n        self._syncShadows();\n    }\n\n    private _controlledSwitches(): Array<SwitchInterface> {\n        const switches: Array<SwitchInterface> = [];\n\n        for (const joystick of this._joysticks) {\n            switches.push(\n                joystick.getLeft(),\n                joystick.getRight(),\n                joystick.getUp(),\n                joystick.getDown(),\n                joystick.getFire()\n            );\n        }\n\n        if (this._select) {\n            switches.push(this._select);\n        }\n\n        if (this._start) {\n            switches.push(this._start);\n        }\n\n        return switches;\n    }\n\n    private _readState(mapping: Array<number>, gamepad: Gamepad): boolean {\n        let state = false;\n\n        for (let i = 0; i < mapping.length; i++) {\n            const button: GamepadButton | number = gamepad.buttons[mapping[i]];\n\n            state = state || (typeof button === 'object' ? button.pressed : button >= 0.5);\n        }\n\n        return state;\n    }\n\n    private _updateJoystickState(gamepad: Gamepad, joystickIndex: number): void {\n        if (!this._joysticks || joystickIndex >= this._joysticks.length) {\n            return;\n        }\n\n        const joystick = this._joysticksShadow[joystickIndex];\n\n        joystick[MappingButton.left].toggle(this._readState(standardMappings[MappingButton.left], gamepad));\n        joystick[MappingButton.right].toggle(this._readState(standardMappings[MappingButton.right], gamepad));\n        joystick[MappingButton.up].toggle(this._readState(standardMappings[MappingButton.up], gamepad));\n        joystick[MappingButton.down].toggle(this._readState(standardMappings[MappingButton.down], gamepad));\n        joystick[MappingButton.fire].toggle(this._readState(standardMappings[MappingButton.fire], gamepad));\n\n        if (gamepad.axes[0] < -0.5 || gamepad.axes[2] < -0.5) {\n            joystick[MappingButton.left].toggle(true);\n        }\n\n        if (gamepad.axes[0] > 0.5 || gamepad.axes[2] > 0.5) {\n            joystick[MappingButton.right].toggle(true);\n        }\n\n        if (gamepad.axes[1] < -0.5 || gamepad.axes[3] < -0.5) {\n            joystick[MappingButton.up].toggle(true);\n        }\n\n        if (gamepad.axes[1] > 0.5 || gamepad.axes[3] > 0.5) {\n            joystick[MappingButton.down].toggle(true);\n        }\n    }\n\n    private _initShadows(): void {\n        if (this._joysticks) {\n            for (let i = 0; i < this._joysticks.length; i++) {\n                const original = this._joysticks[i],\n                    shadow = this._joysticksShadow[i];\n\n                shadow[MappingButton.left].setState(original.getLeft().peek());\n                shadow[MappingButton.right].setState(original.getRight().peek());\n                shadow[MappingButton.up].setState(original.getUp().peek());\n                shadow[MappingButton.down].setState(original.getDown().peek());\n                shadow[MappingButton.fire].setState(original.getFire().peek());\n            }\n        }\n\n        if (this._start) {\n            this._startShadow.setState(this._start.peek());\n        }\n\n        if (this._select) {\n            this._selectShadow.setState(this._select.peek());\n        }\n    }\n\n    private _syncShadows(): void {\n        if (this._joysticks) {\n            for (let i = 0; i < this._joysticks.length; i++) {\n                const original = this._joysticks[i],\n                    shadow = this._joysticksShadow[i];\n\n                shadow[MappingButton.left].sync(original.getLeft());\n                shadow[MappingButton.right].sync(original.getRight());\n                shadow[MappingButton.up].sync(original.getUp());\n                shadow[MappingButton.down].sync(original.getDown());\n                shadow[MappingButton.fire].sync(original.getFire());\n            }\n        }\n\n        if (this._start) {\n            this._startShadow.sync(this._start);\n        }\n\n        if (this._select) {\n            this._selectShadow.sync(this._select);\n        }\n    }\n\n    private _probeGamepads(): void {\n        let cnt = 0;\n\n        const gamepads = navigator.getGamepads();\n\n        for (let i = 0; i < gamepads.length; i++) {\n            if (gamepads[i]) {\n                cnt++;\n            }\n        }\n\n        if (cnt !== this._gamepadCount) {\n            this._gamepadCount = cnt;\n            this.gamepadCountChanged.dispatch(this._gamepadCount);\n        }\n    }\n\n    private _onGamepadConnect = () => this._probeGamepads();\n    private _onGamepadDisconnect = () => this._probeGamepads();\n\n    gamepadCountChanged = new Event<number>();\n\n    private _bound = false;\n    private _gamepadCount = 0;\n    private _lastPoll = 0;\n\n    private _joysticks: Array<DigitalJoystickInterface> = null;\n    private _start: SwitchInterface = null;\n    private _select: SwitchInterface = null;\n\n    private _joysticksShadow: Array<ShadowJoystick> = null;\n    private _startShadow: ShadowSwitch = null;\n    private _selectShadow: ShadowSwitch = null;\n}\n\nclass ShadowSwitch {\n    toggle(state: boolean): void {\n        if (state === this._state) {\n            return;\n        }\n\n        this._state = state;\n        this._dirty = true;\n    }\n\n    setState(state: boolean): void {\n        this._state = state;\n        this._dirty = false;\n    }\n\n    sync(swtch: SwitchInterface): void {\n        if (this._dirty) {\n            swtch.toggle(this._state);\n            this._dirty = false;\n        }\n    }\n\n    private _state = false;\n    private _dirty = false;\n}\n\ninterface ShadowJoystick {\n    [button: string]: ShadowSwitch;\n}\n\nfunction createShadowJoystick(): ShadowJoystick {\n    return {\n        [MappingButton.left]: new ShadowSwitch(),\n        [MappingButton.right]: new ShadowSwitch(),\n        [MappingButton.up]: new ShadowSwitch(),\n        [MappingButton.down]: new ShadowSwitch(),\n        [MappingButton.fire]: new ShadowSwitch()\n    };\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport PaddleInterface from '../../machine/io/PaddleInterface';\n\nexport default class MouseAsPaddleDriver {\n    bind(paddle: PaddleInterface): void {\n        if (this._paddle) {\n            return;\n        }\n\n        this._paddle = paddle;\n        this._x = -1;\n\n        document.addEventListener('mousemove', this._listener);\n    }\n\n    unbind(): void {\n        if (!this._paddle) {\n            return;\n        }\n\n        document.removeEventListener('mousemove', this._listener);\n        this._paddle = null;\n    }\n\n    private _onDocumentMouseMove(e: MouseEvent) {\n        if (this._x >= 0) {\n            const dx = e.screenX - this._x;\n            let value = this._paddle.getValue();\n\n            value += -dx / window.innerWidth / 0.9;\n            if (value < 0) {\n                value = 0;\n            }\n            if (value > 1) {\n                value = 1;\n            }\n\n            this._paddle.setValue(value);\n        }\n\n        this._x = e.screenX;\n    }\n\n    private _paddle: PaddleInterface;\n    private _x = -1;\n    private _listener: (e: MouseEvent) => void = this._onDocumentMouseMove.bind(this);\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport VideoEndpointInterface from './VideoEndpointInterface';\nimport PoolMemberInterface from '../../tools/pool/PoolMemberInterface';\nimport VideoDriverInterface from './VideoDriverInterface';\n\nconst SMOOTHING_PROPS = [\n    'imageSmoothingEnabled',\n    'mozImageSmoothingEnabled',\n    'webkitImageSmoothingEnabled',\n    'msImageSmoothingEnabled'\n];\n\nconst INITIAL_RENDER_CANVAS_SIZE = 100;\n\nexport default class SimpleCanvasVideo implements VideoDriverInterface {\n    constructor(private _canvas: HTMLCanvasElement, private _aspect = 4 / 3) {\n        this._context = this._canvas.getContext('2d');\n\n        this._renderCanvas = document.createElement('canvas');\n        this._renderCanvas.width = this._renderCanvas.height = INITIAL_RENDER_CANVAS_SIZE;\n        this._renderContext = this._renderCanvas.getContext('2d');\n    }\n\n    resize(width?: number, height?: number): this {\n        if (typeof width === 'undefined' || typeof height === 'undefined') {\n            width = this._canvas.clientWidth;\n            height = this._canvas.clientHeight;\n        }\n\n        const pixelRatio = window.devicePixelRatio || 1;\n\n        this._canvas.width = width * pixelRatio;\n        this._canvas.height = height * pixelRatio;\n\n        this._clearCanvas();\n        this._recalculateBlittingMetrics();\n        this._applyInterpolationSettings();\n\n        if (this._video) {\n            this._blitToCanvas();\n        }\n\n        return this;\n    }\n\n    init(): this {\n        this.enableInterpolation(true);\n        this._clearRenderCanvas();\n        this.resize();\n\n        return this;\n    }\n\n    close(): this {\n        return this;\n    }\n\n    enableSyncRendering(syncRendering: boolean): this {\n        if (syncRendering === this._syncRendering) {\n            return this;\n        }\n\n        this._cancelPendingFrame();\n\n        this._syncRendering = syncRendering;\n\n        return this;\n    }\n\n    syncRenderingEnabled(): boolean {\n        return this._syncRendering;\n    }\n\n    bind(video: VideoEndpointInterface): this {\n        if (this._video) {\n            return this;\n        }\n\n        this._video = video;\n\n        this._videoWidth = this._renderCanvas.width = this._video.getWidth();\n        this._videoHeight = this._renderCanvas.height = this._video.getHeight();\n\n        this.resize();\n        this._clearRenderCanvas();\n\n        this._video.newFrame.addHandler(SimpleCanvasVideo._frameHandler, this);\n\n        return this;\n    }\n\n    unbind(): this {\n        if (!this._video) {\n            return this;\n        }\n\n        this._video.newFrame.removeHandler(SimpleCanvasVideo._frameHandler, this);\n        this._video = null;\n\n        this._cancelPendingFrame();\n        this._clearCanvas();\n\n        return this;\n    }\n\n    enableInterpolation(enable: boolean): this {\n        if (this._interpolate === enable) {\n            return this;\n        }\n\n        this._interpolate = enable;\n\n        this._applyInterpolationSettings();\n\n        return this;\n    }\n\n    interpolationEnabled(): boolean {\n        return this._interpolate;\n    }\n\n    getCanvas(): HTMLCanvasElement {\n        return this._canvas;\n    }\n\n    private static _frameHandler(imageDataPoolMember: PoolMemberInterface<ImageData>, self: SimpleCanvasVideo): void {\n        if (self._pendingFrame) {\n            self._pendingFrame.release();\n        }\n\n        self._pendingFrame = imageDataPoolMember;\n\n        if (self._syncRendering) {\n            if (!self._animationFrameHandle) {\n                self._scheduleDraw();\n            }\n        } else {\n            self._draw();\n        }\n    }\n\n    private _clearCanvas(): void {\n        this._context.fillStyle = 'solid black';\n        this._context.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n\n    private _clearRenderCanvas(): void {\n        this._renderContext.fillStyle = 'solid black';\n        this._renderContext.fillRect(0, 0, this._renderCanvas.width, this._renderCanvas.height);\n    }\n\n    private _draw(): void {\n        this._blitToRenderCanvas();\n        this._blitToCanvas();\n\n        this._pendingFrame.release();\n        this._pendingFrame = null;\n    }\n\n    private _blitToRenderCanvas(): void {\n        this._renderContext.putImageData(this._pendingFrame.get(), 0, 0);\n    }\n\n    private _blitToCanvas(): void {\n        this._context.drawImage(\n            this._renderCanvas,\n            0,\n            0,\n            this._videoWidth,\n            this._videoHeight,\n            this._renderX,\n            this._renderY,\n            this._renderWidth,\n            this._renderHeight\n        );\n    }\n\n    private _scheduleDraw(): void {\n        if (!this._animationFrameHandle) {\n            this._animationFrameHandle = requestAnimationFrame(() => {\n                this._draw();\n                this._animationFrameHandle = 0;\n            });\n        }\n    }\n\n    private _cancelPendingFrame(): void {\n        if (this._animationFrameHandle) {\n            cancelAnimationFrame(this._animationFrameHandle);\n            this._animationFrameHandle = 0;\n        }\n\n        if (this._pendingFrame) {\n            this._pendingFrame.release();\n            this._pendingFrame = null;\n        }\n    }\n\n    private _recalculateBlittingMetrics(): void {\n        const targetWidth = this._canvas.width,\n            targetHeight = this._canvas.height;\n\n        if (this._aspect * targetHeight <= targetWidth) {\n            this._renderHeight = targetHeight;\n            this._renderWidth = this._aspect * targetHeight;\n            this._renderY = 0;\n            this._renderX = Math.floor((targetWidth - this._renderWidth) / 2);\n        } else {\n            this._renderHeight = targetWidth / this._aspect;\n            this._renderWidth = targetWidth;\n            this._renderY = Math.floor((targetHeight - this._renderHeight) / 2);\n            this._renderX = 0;\n        }\n    }\n\n    private _applyInterpolationSettings(): void {\n        for (const prop of SMOOTHING_PROPS) {\n            (this._context as any)[prop] = this._interpolate;\n        }\n    }\n\n    private _syncRendering = true;\n    private _animationFrameHandle = 0;\n    private _pendingFrame: PoolMemberInterface<ImageData> = null;\n\n    private _context: CanvasRenderingContext2D;\n    private _video: VideoEndpointInterface = null;\n\n    private _renderCanvas: HTMLCanvasElement;\n    private _renderContext: CanvasRenderingContext2D;\n\n    private _interpolate = true;\n\n    private _renderX: number;\n    private _renderY: number;\n    private _renderWidth: number;\n    private _renderHeight: number;\n\n    private _videoWidth: number;\n    private _videoHeight: number;\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Mutex } from 'async-mutex';\n\nimport ChannelInterface from './audio/ChannelInterface';\nimport WaveformChannel from './audio/WaveformChannel';\nimport PCMChannel from './audio/PCMChannel';\n\nimport WaveformAudioOutputInterface from '../../machine/io/WaveformAudioOutputInterface';\nimport PCMAudioEndpointInterface from './PCMAudioEndpointInterface';\n\ntype AudioContextType = typeof AudioContext;\n\ndeclare namespace window {\n    const webkitAudioContext: AudioContextType;\n    // tslint:disable-next-line:variable-name\n    const AudioContext: AudioContextType;\n}\n\nclass WebAudioDriver {\n    constructor(waveformChannels = 0, pcmChannels = 0, fragmentSize?: number) {\n        this._waveformChannels = new Array<WaveformChannel>(waveformChannels);\n        this._pcmChannels = new Array<PCMChannel>(pcmChannels);\n\n        for (let i = 0; i < waveformChannels; i++) {\n            this._waveformChannels[i] = new WaveformChannel(this._cache);\n        }\n\n        for (let i = 0; i < pcmChannels; i++) {\n            this._pcmChannels[i] = new PCMChannel(fragmentSize);\n        }\n\n        this._channels = [...this._waveformChannels, ...this._pcmChannels];\n    }\n\n    init(): void {\n        const ctor = window.AudioContext || window.webkitAudioContext;\n\n        if (!ctor) {\n            throw new Error(`web audio is not supported by runtime`);\n        }\n\n        this._context = new ctor();\n\n        try {\n            this._context.destination.channelCount = 1;\n        } catch (e) {\n            console.warn('audio driver: failed to set channel count');\n        }\n\n        this._merger = this._context.createChannelMerger(this._channels.length);\n        this._merger.connect(this._context.destination);\n\n        this._channels.forEach(channel => channel.init(this._context, this._merger));\n    }\n\n    bind(\n        waveformSources: Array<WaveformAudioOutputInterface> = [],\n        pcmSources: Array<PCMAudioEndpointInterface> = []\n    ): void {\n        if (this._isBound) {\n            return;\n        }\n\n        if (waveformSources.length !== this._waveformChannels.length) {\n            throw new Error(\n                `invalid number of waveform sources: expected ${this._waveformChannels.length}, got ${\n                    waveformSources.length\n                }`\n            );\n        }\n\n        if (pcmSources.length !== this._pcmChannels.length) {\n            throw new Error(\n                `invalid number of waveform sources: expected ${this._pcmChannels.length}, got ${pcmSources.length}`\n            );\n        }\n\n        this._waveformChannels.forEach((channel, i) => channel.bind(waveformSources[i]));\n        this._pcmChannels.forEach((channel, i) => channel.bind(pcmSources[i]));\n\n        this._isBound = true;\n\n        this.resume();\n    }\n\n    unbind(): void {\n        if (!this._isBound) {\n            return;\n        }\n\n        this._channels.forEach(channel => channel.unbind());\n\n        this._isBound = false;\n\n        this.pause();\n    }\n\n    setMasterVolume(channel: number, volume: number): void {\n        this._channels[channel].setMasterVolume(volume);\n    }\n\n    pause(): Promise<void> {\n        return this._mutex.runExclusive(\n            () =>\n                new Promise(resolve => {\n                    this._context.suspend().then(resolve, resolve);\n                    setTimeout(resolve, 200);\n                })\n        );\n    }\n\n    resume(): Promise<void> {\n        return this._mutex.runExclusive(\n            () =>\n                new Promise(resolve => {\n                    this._context.resume().then(resolve, resolve);\n                    setTimeout(resolve, 200);\n                })\n        );\n    }\n\n    close(): void {\n        this._mutex.runExclusive(() => this._context.close());\n    }\n\n    private _context: AudioContext = null;\n    private _merger: ChannelMergerNode = null;\n    private _waveformChannels: Array<WaveformChannel> = null;\n    private _pcmChannels: Array<PCMChannel> = null;\n    private _channels: Array<ChannelInterface> = null;\n    private _cache = new Map<number, AudioBuffer>();\n    private _mutex = new Mutex();\n\n    private _isBound = false;\n}\n\nexport { WebAudioDriver as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport ResamplerInterface from './ResamplerInterface';\n\nclass LinearReasmpler implements ResamplerInterface {\n    constructor() {\n        this.reset(1, 1);\n    }\n\n    reset(sourceRate: number, targetRate: number) {\n        this._ratio = sourceRate / targetRate;\n        this._needsData = false;\n        this._fractionalIndex = 0;\n\n        for (let i = 0; i < 2; i++) {\n            this._buffer[i] = 0;\n        }\n    }\n\n    get(): number {\n        const x = (1 - this._fractionalIndex) * this._buffer[0] + this._fractionalIndex * this._buffer[1];\n\n        this._fractionalIndex += this._ratio;\n        if (this._fractionalIndex > 1) {\n            this._fractionalIndex -= 1;\n            this._needsData = true;\n        }\n\n        return x;\n    }\n\n    push(sample: number): void {\n        this._buffer[0] = this._buffer[1];\n        this._buffer[1] = sample;\n\n        this._needsData = false;\n    }\n\n    needsData(): boolean {\n        return this._needsData;\n    }\n\n    private _buffer = new Float32Array(2);\n    private _fractionalIndex = 0;\n    private _needsData = false;\n\n    private _ratio = 0;\n}\n\nexport { LinearReasmpler as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport ChannelInterface from './ChannelInterface';\nimport PCMAudioEndpointInterface from '../PCMAudioEndpointInterface';\nimport PoolMemberInterface from '../../../tools/pool/PoolMemberInterface';\nimport RingBuffer from '../../../tools/RingBuffer';\nimport ResamplerInterface from './ResamplerInterface';\nimport LinearReasmpler from './LinearResampler';\n\nclass PCMChannel implements ChannelInterface {\n    constructor(private _hostFragmentSize = 1024) {}\n\n    init(context: AudioContext, target: AudioNode) {\n        this._outputSampleRate = context.sampleRate;\n\n        this._gain = context.createGain();\n        this._gain.gain.value = this._volume;\n        this._gain.connect(target);\n\n        this._processor = context.createScriptProcessor(this._hostFragmentSize, 1, 1);\n        this._bufferSize = this._processor.bufferSize;\n\n        this._processor.connect(this._gain);\n        this._processor.onaudioprocess = e => this._processAudio(e);\n\n        const buffer = context.createBuffer(1, 1, context.sampleRate);\n        buffer.getChannelData(0).set([0]);\n    }\n\n    bind(audio: PCMAudioEndpointInterface): void {\n        this.unbind();\n\n        this._audio = audio;\n        this._fragmentSize = audio.getFrameSize();\n        this._inputSampleRate = audio.getSampleRate();\n        this._fragmentIndex = 0;\n        this._lastFragment = null;\n        this._bufferUnderrun = true;\n        this._fragmentRing = new RingBuffer<PoolMemberInterface<Float32Array>>(\n            Math.ceil(4 * this._bufferSize / this._outputSampleRate / this._fragmentSize * this._inputSampleRate)\n        );\n\n        this._audio.newFrame.addHandler(PCMChannel._onNewFragment, this);\n\n        this._resampler.reset(this._inputSampleRate, this._outputSampleRate);\n    }\n\n    unbind() {\n        if (!this._audio) {\n            return;\n        }\n\n        this._audio.newFrame.removeHandler(PCMChannel._onNewFragment, this);\n\n        if (this._lastFragment) {\n            this._lastFragment.release();\n            this._lastFragment = null;\n        }\n\n        if (this._currentFragment) {\n            this._currentFragment.release();\n            this._currentFragment = null;\n        }\n\n        if (this._fragmentRing) {\n            this._fragmentRing.forEach(b => b.release());\n            this._fragmentRing.clear();\n            this._fragmentRing = null;\n        }\n    }\n\n    setMasterVolume(volume: number): void {\n        this._volume = volume;\n    }\n\n    private static _onNewFragment(fragment: PoolMemberInterface<Float32Array>, self: PCMChannel): void {\n        self._fragmentRing.push(fragment);\n\n        if (!self._currentFragment) {\n            self._currentFragment = self._fragmentRing.pop();\n            self._fragmentIndex = 0;\n        }\n    }\n\n    private _processAudio(e: AudioProcessingEvent): void {\n        if (!this._audio) {\n            return;\n        }\n\n        const outputBuffer = e.outputBuffer.getChannelData(0);\n        let bufferIndex = 0;\n\n        const fillBuffer = (until: number) => {\n            const previousFragmentBuffer = this._lastFragment && this._lastFragment.get();\n\n            while (bufferIndex < until) {\n                if (this._resampler.needsData()) {\n                    this._resampler.push(\n                        (this._audio && this._audio.isPaused()) || !previousFragmentBuffer\n                            ? 0\n                            : previousFragmentBuffer[this._fragmentIndex++] * this._volume\n                    );\n\n                    if (this._fragmentIndex >= this._fragmentSize) {\n                        this._fragmentIndex = 0;\n                    }\n                }\n\n                outputBuffer[bufferIndex++] = this._resampler.get();\n            }\n        };\n\n        // Give the emulation half a fragment of head start when recovering from an underrun\n        if (this._currentFragment && this._bufferUnderrun) {\n            fillBuffer(this._bufferSize >>> 1);\n            this._bufferUnderrun = false;\n        }\n\n        let fragmentBuffer = this._currentFragment && this._currentFragment.get();\n\n        while (bufferIndex < this._bufferSize && this._currentFragment) {\n            if (this._resampler.needsData()) {\n                this._resampler.push(fragmentBuffer[this._fragmentIndex++] * this._volume);\n\n                if (this._fragmentIndex >= this._fragmentSize) {\n                    this._fragmentIndex = 0;\n\n                    if (this._lastFragment) {\n                        this._lastFragment.release();\n                    }\n\n                    this._lastFragment = this._currentFragment;\n                    this._currentFragment = this._fragmentRing.pop();\n\n                    fragmentBuffer = this._currentFragment && this._currentFragment.get();\n                }\n            }\n\n            outputBuffer[bufferIndex++] = this._resampler.get();\n        }\n\n        if (bufferIndex < this._bufferSize) {\n            this._bufferUnderrun = true;\n        }\n\n        fillBuffer(this._bufferSize);\n    }\n\n    private _outputSampleRate = 0;\n    private _bufferSize = 0;\n    private _volume = 1;\n\n    private _gain: GainNode = null;\n    private _processor: ScriptProcessorNode = null;\n    private _bufferUnderrun = false;\n\n    private _fragmentRing: RingBuffer<PoolMemberInterface<Float32Array>> = null;\n\n    private _fragmentSize = 0;\n    private _inputSampleRate = 0;\n    private _fragmentIndex = 0;\n    private _currentFragment: PoolMemberInterface<Float32Array> = null;\n    private _lastFragment: PoolMemberInterface<Float32Array> = null;\n\n    private _audio: PCMAudioEndpointInterface;\n\n    private _resampler: ResamplerInterface = new LinearReasmpler();\n}\n\nexport { PCMChannel as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport ChannelInterface from './ChannelInterface';\nimport WaveformAudioOutputInterface from '../../../machine/io/WaveformAudioOutputInterface';\n\nclass WaveformChannel implements ChannelInterface {\n    constructor(private _cache: Map<number, AudioBuffer>) {}\n\n    init(context: AudioContext, target: AudioNode): void {\n        this._context = context;\n\n        this._gain = this._context.createGain();\n        this._gain.connect(target);\n    }\n\n    bind(target: WaveformAudioOutputInterface): void {\n        if (this._audio) {\n            return;\n        }\n\n        this._audio = target;\n        this._volume = this._audio.getVolume();\n        this._updateGain();\n\n        this._audio.volumeChanged.addHandler(WaveformChannel._onVolumeChanged, this);\n        this._audio.bufferChanged.addHandler(WaveformChannel._onBufferChanged, this);\n        this._audio.stop.addHandler(WaveformChannel._onStop, this);\n    }\n\n    unbind(): void {\n        if (!this._audio) {\n            return;\n        }\n\n        this._audio.volumeChanged.removeHandler(WaveformChannel._onVolumeChanged, this);\n        this._audio.bufferChanged.removeHandler(WaveformChannel._onBufferChanged, this);\n        this._audio.stop.removeHandler(WaveformChannel._onStop, this);\n\n        if (this._source) {\n            this._source.stop();\n            this._source = null;\n        }\n\n        this._audio = null;\n    }\n\n    setMasterVolume(volume: number): void {\n        this._masterVolume = volume;\n        this._updateGain();\n    }\n\n    private static _onVolumeChanged(volume: number, self: WaveformChannel): void {\n        self._volume = volume;\n        self._updateGain();\n    }\n\n    private static _onBufferChanged(key: number, self: WaveformChannel): void {\n        if (!self._cache.has(key)) {\n            const sampleBuffer = self._audio.getBuffer(key),\n                audioBuffer = self._context.createBuffer(1, sampleBuffer.getLength(), sampleBuffer.getSampleRate());\n\n            audioBuffer.getChannelData(0).set(sampleBuffer.getContent());\n            self._cache.set(key, audioBuffer);\n        }\n\n        const buffer = self._cache.get(key),\n            source = self._context.createBufferSource();\n\n        if (self._source) {\n            self._source.stop();\n        }\n\n        source.loop = true;\n        source.buffer = buffer;\n        source.connect(self._gain);\n        source.start();\n\n        self._source = source;\n    }\n\n    private static _onStop(payload: void, self: WaveformChannel): void {\n        if (self._source) {\n            self._source.stop();\n            self._source = null;\n        }\n    }\n\n    private _updateGain(): void {\n        this._gain.gain.value = this._volume * this._masterVolume;\n    }\n\n    private _context: AudioContext = null;\n    private _source: AudioBufferSourceNode = null;\n    private _gain: GainNode = null;\n    private _audio: WaveformAudioOutputInterface = null;\n\n    private _volume = 0;\n    private _masterVolume = 1;\n}\n\nexport { WaveformChannel as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport PoolMemberInterface from '../../../tools/pool/PoolMemberInterface';\nimport VideoEndpointInterface from '../VideoEndpointInterface';\nimport VideoDriverInterface from '../VideoDriverInterface';\n\nimport {\n    vertexShader as vertexShaderSource,\n    fragmentShaderPlain as fragmentShaderPlainSource,\n    fragmentShaderPov as fragmentShaderPovSource\n} from './shader';\n\nconst CONTEXT_IDS = ['webgl', 'experimental-webgl'];\n\nclass WebglVideoDriver implements VideoDriverInterface {\n    constructor(private _canvas: HTMLCanvasElement, config: WebglVideoDriver.Config = {}) {\n        if (typeof config.aspect !== 'undefined') {\n            this._aspect = config.aspect;\n        }\n\n        if (typeof config.gamma !== 'undefined') {\n            this._gamma = config.gamma;\n        }\n\n        if (typeof config.povEmulation !== 'undefined') {\n            this._povEmulation = config.povEmulation;\n        }\n\n        for (const contextId of CONTEXT_IDS) {\n            if (this._gl) {\n                break;\n            }\n\n            this._gl = this._canvas.getContext(contextId, {\n                alpha: false\n            }) as WebGLRenderingContext;\n        }\n\n        if (!this._gl) {\n            throw new Error('unable to acquire WebGL context');\n        }\n\n        this._createTextureArrays();\n    }\n\n    init(): this {\n        this._gl.clearColor(0, 0, 0, 1);\n\n        this._createProgram();\n        this._createBuffers();\n        this.resize();\n        this._allocateTextures();\n        this._configureTextures();\n        this._setupAttribs();\n\n        this.enableInterpolation(true);\n\n        return this;\n    }\n\n    close(): this {\n        if (this._program) {\n            this._gl.deleteProgram(this._program);\n        }\n\n        if (this._vertexShader) {\n            this._gl.deleteShader(this._vertexShader);\n        }\n\n        if (this._fragmentShader) {\n            this._gl.deleteShader(this._fragmentShader);\n        }\n\n        if (this._textures) {\n            this._textures.forEach(t => t && this._gl.deleteTexture(t));\n        }\n\n        if (this._imageData) {\n            this._imageData.forEach(i => i && i.release());\n        }\n\n        if (this._vertexBuffer) {\n            this._gl.deleteBuffer(this._vertexBuffer);\n        }\n\n        if (this._textureCoordinateBuffer) {\n            this._gl.deleteBuffer(this._textureCoordinateBuffer);\n        }\n\n        return this;\n    }\n\n    resize(width?: number, height?: number): this {\n        if (typeof width === 'undefined' || typeof height === 'undefined') {\n            width = this._canvas.clientWidth;\n            height = this._canvas.clientHeight;\n        }\n\n        const pixelRatio = window.devicePixelRatio || 1;\n\n        this._canvas.width = width * pixelRatio;\n        this._canvas.height = height * pixelRatio;\n        this._gl.viewport(0, 0, width * pixelRatio, height * pixelRatio);\n        this._recalculateVertexBuffer();\n\n        if (this._video) {\n            this._draw();\n        }\n\n        return this;\n    }\n\n    getCanvas(): HTMLCanvasElement {\n        return this._canvas;\n    }\n\n    bind(video: VideoEndpointInterface): this {\n        if (this._video) {\n            return this;\n        }\n\n        this.resize();\n\n        this._video = video;\n        this._video.newFrame.addHandler(WebglVideoDriver._frameHandler, this);\n\n        return this;\n    }\n\n    unbind(): this {\n        this._cancelDraw();\n\n        if (!this._video) {\n            return this;\n        }\n\n        this._video.newFrame.removeHandler(WebglVideoDriver._frameHandler, this);\n        this._video = null;\n\n        return this;\n    }\n\n    enableInterpolation(enabled: boolean): this {\n        if (enabled === this._interpolation) {\n            return this;\n        }\n\n        this._interpolation = enabled;\n        this._configureTextures();\n\n        return this;\n    }\n\n    interpolationEnabled(): boolean {\n        return this._interpolation;\n    }\n\n    enableSyncRendering(syncRendering: boolean): this {\n        if (syncRendering === this._syncRendering) {\n            return this;\n        }\n\n        if (!syncRendering) {\n            this._cancelDraw();\n        }\n\n        this._syncRendering = syncRendering;\n\n        return this;\n    }\n\n    syncRenderingEnabled(): boolean {\n        return this._syncRendering;\n    }\n\n    setGamma(gamma: number): this {\n        this._gamma = gamma;\n\n        return this;\n    }\n\n    getGamma(): number {\n        return this._gamma;\n    }\n\n    enablePovEmulation(emulatePov: boolean): this {\n        if (emulatePov === this._povEmulation) {\n            return this;\n        }\n\n        this._povEmulation = emulatePov;\n        this._reinit();\n    }\n\n    povEmulationEnabled(): boolean {\n        return this._povEmulation;\n    }\n\n    private static _frameHandler(imageDataPoolMember: PoolMemberInterface<ImageData>, self: WebglVideoDriver): void {\n        const oldImageData = self._imageData[self._currentFrameIndex];\n\n        self._imageData[self._currentFrameIndex] = imageDataPoolMember;\n        self._imageDataGeneration[self._currentFrameIndex]++;\n        self._currentFrameIndex = (self._currentFrameIndex + 1) % self._numberOfFramesToCompose;\n\n        if (self._frameCount < self._numberOfFramesToCompose) {\n            self._frameCount++;\n        } else {\n            if (self._syncRendering) {\n                self._scheduleDraw();\n            } else {\n                self._draw();\n            }\n            oldImageData.release();\n        }\n    }\n\n    private _createTextureArrays(): void {\n        this._numberOfFramesToCompose = this._povEmulation ? 3 : 1;\n\n        if (this._textures) {\n            this._textures.forEach(t => t && this._gl.deleteTexture(t));\n        }\n\n        if (this._imageData) {\n            this._imageData.forEach(i => i && i.release());\n        }\n\n        this._textures = new Array<WebGLTexture>(this._numberOfFramesToCompose);\n        this._imageData = new Array<PoolMemberInterface<ImageData>>(this._numberOfFramesToCompose);\n        this._imageDataGeneration = new Array<number>(this._numberOfFramesToCompose);\n        this._textureGeneration = new Array<number>(this._numberOfFramesToCompose);\n\n        for (let i = 0; i < this._numberOfFramesToCompose; i++) {\n            this._imageDataGeneration[i] = 0;\n            this._textureGeneration[i] = -1;\n        }\n    }\n\n    private _reinit(): void {\n        this._createTextureArrays();\n        this._createProgram();\n        this._allocateTextures();\n        this._configureTextures();\n        this._setupAttribs();\n\n        this._frameCount = 0;\n        this._currentFrameIndex = 0;\n    }\n\n    private _scheduleDraw(): void {\n        if (this._animationFrameHandle) {\n            return;\n        }\n\n        this._animationFrameHandle = requestAnimationFrame(() => (this._draw(), (this._animationFrameHandle = 0)));\n    }\n\n    private _cancelDraw(): void {\n        if (this._animationFrameHandle === 0) {\n            return;\n        }\n\n        cancelAnimationFrame(this._animationFrameHandle);\n        this._animationFrameHandle = 0;\n    }\n\n    private _draw(): void {\n        if (this._frameCount < this._numberOfFramesToCompose) {\n            return;\n        }\n\n        const gl = this._gl;\n\n        for (let i = 0; i < this._numberOfFramesToCompose; i++) {\n            const frameIndex =\n                (this._currentFrameIndex - i - 1 + this._numberOfFramesToCompose) % this._numberOfFramesToCompose;\n\n            if (this._textureGeneration[frameIndex] !== this._imageDataGeneration[frameIndex]) {\n                gl.activeTexture((gl as any)[`TEXTURE${frameIndex}`]);\n                gl.bindTexture(gl.TEXTURE_2D, this._textures[frameIndex]);\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._imageData[frameIndex].get());\n\n                this._textureGeneration[frameIndex] = this._imageDataGeneration[frameIndex];\n            }\n        }\n\n        for (let i = 0; i < this._numberOfFramesToCompose; i++) {\n            gl.uniform1i(\n                this._getUniformLocation(`u_Sampler${i}`),\n                (this._currentFrameIndex + this._numberOfFramesToCompose - i - 1) % this._numberOfFramesToCompose\n            );\n        }\n\n        gl.uniform1f(this._getUniformLocation('u_Gamma'), this._gamma);\n\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n    }\n\n    private _createProgram(): void {\n        const gl = this._gl,\n            vertexShader = gl.createShader(gl.VERTEX_SHADER),\n            fragmentShader = gl.createShader(gl.FRAGMENT_SHADER),\n            program = gl.createProgram();\n\n        gl.shaderSource(vertexShader, vertexShaderSource);\n        gl.compileShader(vertexShader);\n\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            throw new Error(`failed to compile vertex shader: ${gl.getShaderInfoLog(vertexShader)}`);\n        }\n\n        gl.shaderSource(fragmentShader, this._povEmulation ? fragmentShaderPovSource : fragmentShaderPlainSource);\n        gl.compileShader(fragmentShader);\n\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            throw new Error(`failed to compile fragment shader: ${gl.getShaderInfoLog(fragmentShader)}`);\n        }\n\n        gl.attachShader(program, vertexShader);\n        gl.attachShader(program, fragmentShader);\n        gl.linkProgram(program);\n\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            throw new Error(`failed to link program: ${gl.getProgramInfoLog(program)}`);\n        }\n\n        gl.useProgram(program);\n\n        if (this._program) {\n            gl.deleteProgram(this._program);\n        }\n\n        if (this._vertexShader) {\n            gl.deleteShader(this._vertexShader);\n        }\n\n        if (this._fragmentShader) {\n            gl.deleteShader(this._fragmentShader);\n        }\n\n        this._program = program;\n        this._vertexShader = vertexShader;\n        this._fragmentShader = fragmentShader;\n    }\n\n    private _allocateTextures(): void {\n        for (let i = 0; i < this._numberOfFramesToCompose; i++) {\n            this._allocateTexture(i);\n        }\n    }\n\n    private _configureTextures(): void {\n        for (let i = 0; i < this._numberOfFramesToCompose; i++) {\n            this._configureTexture(i);\n        }\n    }\n\n    private _allocateTexture(index: number): void {\n        const gl = this._gl,\n            texture = gl.createTexture();\n\n        gl.activeTexture((gl as any)[`TEXTURE${index}`]);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        this._textures[index] = texture;\n    }\n\n    private _configureTexture(index: number): void {\n        const gl = this._gl;\n\n        gl.activeTexture((gl as any)[`TEXTURE${index}`]);\n        gl.bindTexture(gl.TEXTURE_2D, this._textures[index]);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, this._interpolation ? gl.LINEAR : gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, this._interpolation ? gl.LINEAR : gl.NEAREST);\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n    }\n\n    private _createBuffers(): void {\n        const gl = this._gl,\n            vertexBuffer = gl.createBuffer(),\n            textureCoordinateBuffer = gl.createBuffer();\n\n        const textureCoordinateData = [1, 1, 0, 1, 1, 0, 0, 0];\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, textureCoordinateBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textureCoordinateData), gl.STATIC_DRAW);\n\n        this._vertexBuffer = vertexBuffer;\n        this._textureCoordinateBuffer = textureCoordinateBuffer;\n    }\n\n    private _recalculateVertexBuffer(): void {\n        const gl = this._gl,\n            targetWidth = this._canvas.width,\n            targetHeight = this._canvas.height,\n            scaleX = targetWidth > 0 ? 2 / targetWidth : 1,\n            scaleY = targetHeight > 0 ? 2 / targetHeight : 1;\n\n        let width: number, height: number, west: number, north: number;\n\n        if (this._aspect * targetHeight <= targetWidth) {\n            height = 2;\n            width = this._aspect * targetHeight * scaleX;\n            north = 1;\n            west = Math.floor(-this._aspect * targetHeight) / 2 * scaleX;\n        } else {\n            height = targetWidth / this._aspect * scaleY;\n            width = 2;\n            north = Math.floor(targetWidth / this._aspect) / 2 * scaleY;\n            west = -1;\n        }\n\n        const vertexData = [west + width, north, west, north, west + width, north - height, west, north - height];\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertexData), gl.STATIC_DRAW);\n    }\n\n    private _getAttribLocation(name: string): number {\n        const gl = this._gl,\n            location = gl.getAttribLocation(this._program, name);\n\n        if (location < 0) {\n            throw new Error(`unable to locate attribute ${name}`);\n        }\n\n        return location;\n    }\n\n    private _getUniformLocation(name: string): WebGLUniformLocation {\n        const gl = this._gl,\n            location = gl.getUniformLocation(this._program, name);\n\n        if (location < 0) {\n            throw new Error(`unable to locate uniform ${name}`);\n        }\n\n        return location;\n    }\n\n    private _setupAttribs(): void {\n        const gl = this._gl;\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n        gl.enableVertexAttribArray(this._getAttribLocation('a_VertexPosition'));\n        gl.vertexAttribPointer(this._getAttribLocation('a_VertexPosition'), 2, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._textureCoordinateBuffer);\n        gl.enableVertexAttribArray(this._getAttribLocation('a_TextureCoordinate'));\n        gl.vertexAttribPointer(this._getAttribLocation('a_TextureCoordinate'), 2, gl.FLOAT, false, 0, 0);\n    }\n\n    private _gl: WebGLRenderingContext = null;\n\n    private _vertexShader: WebGLShader;\n    private _fragmentShader: WebGLShader;\n    private _program: WebGLProgram = null;\n    private _vertexBuffer: WebGLBuffer = null;\n    private _textureCoordinateBuffer: WebGLBuffer = null;\n\n    private _numberOfFramesToCompose: number;\n    private _textures: Array<WebGLTexture>;\n    private _imageData: Array<PoolMemberInterface<ImageData>>;\n    private _imageDataGeneration: Array<number>;\n    private _textureGeneration: Array<number>;\n    private _currentFrameIndex = 0;\n    private _frameCount = 0;\n\n    private _gamma = 1;\n    private _aspect = 4 / 3;\n    private _povEmulation = true;\n\n    private _animationFrameHandle = 0;\n    private _syncRendering = true;\n\n    private _video: VideoEndpointInterface = null;\n\n    private _interpolation = true;\n}\n\nnamespace WebglVideoDriver {\n    export interface Config {\n        povEmulation?: boolean;\n        gamma?: number;\n        aspect?: number;\n    }\n}\n\nexport { WebglVideoDriver as default };\n",
    "export const vertexShader = `\n    attribute vec2 a_VertexPosition;\n    attribute vec2 a_TextureCoordinate;\n\n    varying vec2 v_TextureCoordinate;\n\n    void main() {\n        v_TextureCoordinate = a_TextureCoordinate;\n        gl_Position = vec4(a_VertexPosition, 0, 1);\n    }\n`;\n\nexport const fragmentShaderPlain = `\n    precision mediump float;\n\n    varying vec2 v_TextureCoordinate;\n\n    uniform sampler2D u_Sampler0;\n    uniform float u_Gamma;\n\n    void main() {\n        vec4 texel = texture2D(u_Sampler0, v_TextureCoordinate);\n\n        gl_FragColor = vec4(pow(texel.rgb, vec3(u_Gamma)), 1.);\n    }\n`;\n\nexport const fragmentShaderPov = `\n    precision mediump float;\n\n    varying vec2 v_TextureCoordinate;\n\n    uniform sampler2D u_Sampler0, u_Sampler1, u_Sampler2;\n    uniform float u_Gamma;\n\n    void main() {\n        vec4 compositedTexel =\n            0.4 * texture2D(u_Sampler0, v_TextureCoordinate) +\n            0.4 * texture2D(u_Sampler1, v_TextureCoordinate) +\n            0.2 * texture2D(u_Sampler2, v_TextureCoordinate);\n\n        gl_FragColor = vec4(pow(compositedTexel.rgb, vec3(u_Gamma)), 1.);\n    }\n`;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Switch from './Switch';\nimport SwitchProxy from './SwitchProxy';\nimport ControlPanel from './ControlPanel';\nimport StellaControlPanel from '../../../machine/stella/ControlPanelInterface';\n\nclass ControlPanelProxy implements ControlPanel {\n    bind(controlPanel: StellaControlPanel): void {\n        this.unbind();\n\n        this._boundControlPanel = controlPanel;\n\n        this._reset.bind(this._boundControlPanel.getResetButton());\n        this._select.bind(this._boundControlPanel.getSelectSwitch());\n        this._difficultyPlayer1.bind(this._boundControlPanel.getDifficultySwitchP0());\n        this._difficultyPlayer2.bind(this._boundControlPanel.getDifficultySwitchP1());\n        this._color.bind(this._boundControlPanel.getColorSwitch());\n\n        this._difficultyPlayer1.toggle(true);\n        this._difficultyPlayer2.toggle(true);\n    }\n\n    unbind(): void {\n        if (!this._boundControlPanel) {\n            return;\n        }\n\n        this._reset.unbind();\n        this._select.unbind();\n        this._difficultyPlayer1.unbind();\n        this._difficultyPlayer2.unbind();\n        this._color.unbind();\n\n        this._boundControlPanel = null;\n    }\n\n    reset(): Switch {\n        return this._reset;\n    }\n\n    select(): Switch {\n        return this._select;\n    }\n\n    difficultyPlayer1(): Switch {\n        return this._difficultyPlayer1;\n    }\n\n    difficultyPlayer2(): Switch {\n        return this._difficultyPlayer2;\n    }\n\n    color(): Switch {\n        return this._color;\n    }\n\n    private _reset = new SwitchProxy();\n    private _select = new SwitchProxy();\n    private _difficultyPlayer1 = new SwitchProxy();\n    private _difficultyPlayer2 = new SwitchProxy();\n    private _color = new SwitchProxy();\n\n    private _boundControlPanel: StellaControlPanel = null;\n}\n\nexport { ControlPanelProxy as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Mutex } from 'async-mutex';\nimport { EventInterface as Event, Event as EventImplementation } from 'microevent.ts';\n\nimport EmulationServiceInterface from '../../stella/service/EmulationServiceInterface';\nimport EmulationService from '../../stella/service/worker/EmulationService';\nimport DriverManager from '../../stella/service/DriverManager';\n\nimport VideoDriverInterface from '../../driver/VideoDriverInterface';\nimport CanvasVideo from '../../driver/SimpleCanvasVideo';\nimport WebglVideo from '../../driver/webgl/WebglVideo';\n\nimport AudioDriver from '../../stella/driver/WebAudio';\nimport KeyboardIO from '../../stella/driver/KeyboardIO';\nimport Paddle from '../../driver/MouseAsPaddle';\nimport Gamepad from '../../driver/Gamepad';\nimport FullscreenDriver from '../../driver/FullscreenVideo';\n\nimport CartridgeInfo from '../../../machine/stella/cartridge/CartridgeInfo';\nimport StellaConfig from '../../../machine/stella/Config';\n\nimport { decode as decodeBase64 } from '../../../tools/base64';\n\nimport ControlPanel from './ControlPanel';\nimport ControlPanelProxy from './ControlPanelProxy';\n\n/**\n * The stellerator class and namespace. In a typical application, a single instance is\n * created and bound to a canvas element. This instance can than be used to run many\n * different ROMs during its lifetime.\n *\n * Notes on reading this documentation:\n * * All code examples are ES6\n * * The actual emulation runs on a web worker, and all methods that control emulation\n *   are asynchronous and return [ES6 Promises](http://exploringjs.com/es6/ch_promises.html)\n * * Check out the [microevent.ts](https://github.com/DirtyHairy/microevent) documentation\n *   for the event API\n *\n * Basic example:\n * ```typescript\n *     const stellerator = new Stellerator(\n *         document.getElementById('stellerator-canvas'),\n *         'js/stellerator_worker.js'\n *     );\n *\n *     stellerator.run(rom, Stellerator.TvMode.ntsc);\n * ```\n */\nclass Stellerator {\n    /**\n     * Creates an instance of Stellerator.\n     * @param canvasElt The canvas element that is used to display the TIA image.\n     * The `height` and `width` attributes of the canvas will be automatically\n     * maintained by Stellerator, so there is not requirement to set those to\n     * specific values.\n     *\n     * @param workerUrl The URL from which the web worker will be loaded.\n     * In order to avoid cross domain issues, the worker should be hosted on the same\n     * domain as the stellerator build, and this parameter should read e.g.\n     * `js/stellerator_worker.js`\n     *\n     * @param config Optional configuration to\n     * customize emulator behavior. See [[Config]] for a full explanation of the values\n     * and their default.\n     */\n    constructor(canvasElt: HTMLCanvasElement, workerUrl: string, config: Partial<Stellerator.Config> = {}) {\n        this._canvasElt = canvasElt;\n\n        this._config = {\n            smoothScaling: true,\n            simulatePov: true,\n            gamma: 1,\n            audio: true,\n            volume: 1,\n            enableKeyboard: true,\n            keyboardTarget: document,\n            fullscreenViaKeyboard: true,\n            paddleViaMouse: true,\n            pauseViaKeyboard: true,\n            enableGamepad: true,\n            resetViaKeyboard: true,\n\n            ...config\n        };\n\n        this._emulationService = new EmulationService(workerUrl);\n\n        this.frequencyUpdate = this._emulationService.frequencyUpdate;\n\n        const stateChange = new EventImplementation<Stellerator.State>();\n        this._emulationService.stateChanged.addHandler(newState => stateChange.dispatch(this._mapState(newState)));\n        this.stateChange = stateChange;\n\n        this._createDrivers();\n\n        this._driverManager.addDriver(this._controlPanel, context =>\n            this._controlPanel.bind(context.getControlPanel())\n        );\n        this._driverManager.bind(this._emulationService);\n\n        this._serviceInitialized = this._emulationService.init().then(undefined, e => {\n            console.log(e);\n            throw e;\n        });\n    }\n\n    /**\n     * Set the gamma correction factor. Will take effect **only** if WebGL is available.\n     *\n     * @param gamma\n     */\n    setGamma(gamma: number): this {\n        if (this._webglVideo) {\n            this._webglVideo.setGamma(gamma);\n        }\n\n        return this;\n    }\n\n    /**\n     * Query the current gamme correction factor.\n     *\n     * @returns {number}\n     */\n    getGamma(): number {\n        return this._webglVideo ? this._webglVideo.getGamma() : 1;\n    }\n\n    /**\n     * Enable / disable persistence of vision / phosphor simulation. POV is simulated\n     * by blending several frames and will work **only** if WebGL is available.\n     *\n     * @param povEnabled\n     * @returns {this}\n     */\n    enablePovSimulation(povEnabled: boolean): this {\n        if (this._webglVideo) {\n            this._webglVideo.enablePovEmulation(povEnabled);\n        }\n\n        return this;\n    }\n\n    /**\n     * Query the state of persistence of vision / phosphor emulation.\n     *\n     * @returns {boolean}\n     */\n    isPovSimulationEnabled(): boolean {\n        return this._webglVideo ? this._webglVideo.povEmulationEnabled() : false;\n    }\n\n    /**\n     * Enable / disable smooth scaling of the TIA image.\n     *\n     * @param smoothScalingEnabled\n     * @returns {this}\n     */\n    enableSmoothScaling(smoothScalingEnabled: boolean): this {\n        this._videoDriver.enableInterpolation(smoothScalingEnabled);\n\n        return this;\n    }\n\n    /**\n     * Query whether smooth scaling of the TIA image is enabled.\n     *\n     * @returns {boolean}\n     */\n    smoothScalingEnabled(): boolean {\n        return this._videoDriver.interpolationEnabled();\n    }\n\n    /**\n     * Enable / disable fullscreen mode.\n     *\n     * @param fullscreen\n     * @returns {this}\n     */\n    toggleFullscreen(fullscreen?: boolean): this {\n        if (typeof fullscreen === 'undefined') {\n            this._fullscreenVideo.toggle();\n        } else {\n            fullscreen ? this._fullscreenVideo.engage() : this._fullscreenVideo.disengage();\n        }\n\n        return this;\n    }\n\n    /**\n     * Query if emulator is running fullscreen.\n     *\n     * @returns {boolean}\n     */\n    isFullscreen(): boolean {\n        return this._fullscreenVideo.isEngaged();\n    }\n\n    /**\n     * Change the master volume.\n     *\n     * @param volume Will be clipped to the range 0 .. 1\n     * @returns {this}\n     */\n    setVolume(volume: number): this {\n        if (this._audioDriver) {\n            this._audioDriver.setMasterVolume(Math.max(Math.min(volume, 1), 0));\n        }\n\n        return this;\n    }\n\n    /**\n     * Query whether audio has been enabled on this instance.\n     *\n     * @returns {boolean}\n     */\n    audioEnabled(): boolean {\n        return !!this._audioDriver;\n    }\n\n    /**\n     * Query the master volume.\n     *\n     * @returns {number}\n     */\n    getVolume(): number {\n        return this._audioDriver ? this._audioDriver.getMasterVolume() : 0;\n    }\n\n    /**\n     * Notify the video driver of a change of the visible dimensions (client size) of\n     * the canvas element. This will cause the driver to adjust the resolution to match.\n     */\n    resize(): this {\n        this._videoDriver.resize();\n\n        return this;\n    }\n\n    /**\n     * Query the current state of the emulation.\n     *\n     * @returns {Stellerator.State}\n     */\n    getState(): Stellerator.State {\n        return this._state;\n    }\n\n    /**\n     * Get the console control panel. This allows you to monitor and control\n     * the console switches (select, reset, difficulty P1 / P2, color / BW).\n     */\n    getControlPanel(): ControlPanel {\n        return this._controlPanel;\n    }\n\n    /**\n     * Start emulation of a cartridge image. This method is **async** and returns\n     * a promise for the resulting emulation state.\n     *\n     * **IMPORTANT:** The emulator will start up in [[State.paused]] mode. Use the `run` method\n     * below in order to start and run the emulation immediatelly.\n     *\n     * @param cartridge The cartridge image. Can be either\n     * an array / typed array of byte values or a base64 encoded string.\n     *\n     * @param tvMode The TV mode (NTSC / PAL / SECAM)\n     *\n     * @param config Optional configuration\n     * values to customize emulation behavior. See [[CartridgeConfig]] for a full list of supported\n     * settings and their defaults.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    start(\n        cartridge: ArrayLike<number> | string,\n        tvMode: Stellerator.TvMode,\n        config: Partial<Stellerator.CartridgeConfig> = {}\n    ): Promise<Stellerator.State> {\n        return this._mutex.runExclusive(async () => {\n            if (typeof cartridge === 'string') {\n                cartridge = decodeBase64(cartridge);\n            }\n\n            const stellaConfig = StellaConfig.create({\n                tvMode: this._convertTvMode(tvMode),\n                pcmAudio: true\n            });\n\n            if (typeof config.randomSeed !== 'undefined' && config.randomSeed > 0) {\n                stellaConfig.randomSeed = config.randomSeed;\n            }\n\n            if (typeof config.emulatePaddles !== 'undefined') {\n                stellaConfig.emulatePaddles = config.emulatePaddles;\n            }\n\n            if (typeof config.frameStart !== 'undefined') {\n                stellaConfig.frameStart = config.frameStart;\n            }\n\n            await this._serviceInitialized;\n\n            return (this._state = this._mapState(\n                await this._emulationService.start(cartridge, stellaConfig, config.cartridgeType)\n            ));\n        });\n    }\n\n    /**\n     * Like [[start]], but run the emulator immediatelly instead of starting\n     * in paused mode.\n     *\n     * Just like its counterpart, this method is **async** and returns a promise\n     * for the resulting emualtion state.\n     *\n     * @param cartridge The cartridge image. Can be either\n     * an array / typed array of byte values or a base64 encoded string.\n     *\n     * @param tvMode The TV mode (NTSC / PAL / SECAM)\n     *\n     * @param config Optional configuration\n     * values to customize emulation behavior. See [[CartridgeConfig]] for a full list of supported\n     * settings and their defaults.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async run(\n        cartridge: ArrayLike<number> | string,\n        tvMode: Stellerator.TvMode,\n        config: Partial<Stellerator.CartridgeConfig> = {}\n    ): Promise<Stellerator.State> {\n        if ((await this.start(cartridge, tvMode, config)) === Stellerator.State.paused) {\n            return this.resume();\n        }\n    }\n\n    /**\n     * Pause a running emulation session. This method is **async** and returns a\n     * promise for the resulting emulation state.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async pause(): Promise<Stellerator.State> {\n        await this._serviceInitialized;\n\n        return this._mutex.runExclusive(\n            async () => (this._state = this._mapState(await this._emulationService.pause()))\n        );\n    }\n\n    /**\n     * Resume a paused emulation session. This method is **async** and returns a\n     * promise for the resulting emulation state.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async resume(): Promise<Stellerator.State> {\n        await this._serviceInitialized;\n\n        return this._mutex.runExclusive(\n            async () => (this._state = this._mapState(await this._emulationService.resume()))\n        );\n    }\n\n    /**\n     * Stop a running or paused emulation session. This method is **async** and returns a\n     * promise for the resulting emulation state.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async stop(): Promise<Stellerator.State> {\n        await this._serviceInitialized;\n\n        return this._mutex.runExclusive(\n            async () => (this._state = this._mapState(await this._emulationService.stop()))\n        );\n    }\n\n    /**\n     * Reset a running emulation session. This method is **async** and returns a\n     * promise for the resulting emulation state.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async reset(): Promise<Stellerator.State> {\n        await this._serviceInitialized;\n\n        return this._mutex.runExclusive(\n            async () => (this._state = this._mapState(await this._emulationService.reset()))\n        );\n    }\n\n    /**\n     * Retrieve the last emulation error.\n     *\n     * **IMPORTANT:** Don't use this to check whether an error occurred; use [[getState]]\n     * and check for [[State.error]] instead.\n     *\n     * @returns {Error}\n     */\n    lastError(): Error {\n        return this._emulationService.getLastError();\n    }\n\n    private _convertTvMode(tvMode: Stellerator.TvMode): StellaConfig.TvMode {\n        switch (tvMode) {\n            case Stellerator.TvMode.ntsc:\n                return StellaConfig.TvMode.ntsc;\n\n            case Stellerator.TvMode.pal:\n                return StellaConfig.TvMode.pal;\n\n            case Stellerator.TvMode.secam:\n                return StellaConfig.TvMode.secam;\n\n            default:\n                throw new Error(`invalid TV mode '${tvMode}'`);\n        }\n    }\n\n    private _createDrivers(): void {\n        try {\n            this._webglVideo = this._videoDriver = new WebglVideo(this._canvasElt, {\n                povEmulation: this._config.simulatePov,\n                gamma: this._config.gamma\n            }).init();\n        } catch (e) {\n            this._webglVideo = null;\n            this._videoDriver = new CanvasVideo(this._canvasElt).init();\n        }\n\n        this._videoDriver.enableInterpolation(this._config.smoothScaling);\n\n        this._driverManager.addDriver(this._videoDriver, context => this._videoDriver.bind(context.getVideo()));\n\n        this._fullscreenVideo = new FullscreenDriver(this._videoDriver);\n\n        if (this._config.audio) {\n            try {\n                this._audioDriver = new AudioDriver();\n                this._audioDriver.init();\n                this._audioDriver.setMasterVolume(this._config.volume);\n\n                this._driverManager.addDriver(this._audioDriver, context =>\n                    this._audioDriver.bind(true, [context.getPCMChannel()])\n                );\n            } catch (e) {\n                console.error(`failed to initialize audio: ${e && e.message}`);\n            }\n        }\n\n        if (this._config.enableKeyboard) {\n            this._keyboardIO = new KeyboardIO(this._config.keyboardTarget);\n\n            this._driverManager.addDriver(this._keyboardIO, context =>\n                this._keyboardIO.bind(context.getJoystick(0), context.getJoystick(1), context.getControlPanel())\n            );\n\n            if (this._config.fullscreenViaKeyboard) {\n                this._keyboardIO.toggleFullscreen.addHandler(() => this._fullscreenVideo.toggle());\n            }\n\n            if (this._config.pauseViaKeyboard) {\n                this._keyboardIO.togglePause.addHandler(() => {\n                    switch (this._emulationService.getState()) {\n                        case EmulationServiceInterface.State.paused:\n                            this.resume();\n                            break;\n\n                        case EmulationServiceInterface.State.running:\n                            this.pause();\n                            break;\n                    }\n                });\n            }\n        }\n\n        if (this._config.resetViaKeyboard) {\n            this._keyboardIO.hardReset.addHandler(() => this.reset());\n        }\n\n        if (this._config.enableGamepad) {\n            this._gamepad = new Gamepad();\n            this._gamepad.init();\n\n            this._driverManager.addDriver(this._gamepad, context =>\n                this._gamepad.bind({\n                    joysticks: [context.getJoystick(0), context.getJoystick(1)],\n                    start: context.getControlPanel().getResetButton(),\n                    select: context.getControlPanel().getSelectSwitch()\n                })\n            );\n        }\n\n        if (this._config.paddleViaMouse) {\n            this._paddle = new Paddle();\n\n            this._driverManager.addDriver(this._paddle, context => this._paddle.bind(context.getPaddle(0)));\n        }\n    }\n\n    private _mapState(state: EmulationServiceInterface.State): Stellerator.State {\n        switch (state) {\n            case EmulationServiceInterface.State.stopped:\n                return Stellerator.State.stopped;\n\n            case EmulationServiceInterface.State.running:\n                return Stellerator.State.running;\n\n            case EmulationServiceInterface.State.paused:\n                return Stellerator.State.paused;\n\n            case EmulationServiceInterface.State.error:\n                return Stellerator.State.error;\n\n            default:\n                throw new Error('cannot happen');\n        }\n    }\n\n    /**\n     * Subscribe to this event to receive periodic updates on the frequency of the\n     * emulated system. The unit is Hz. Check out the\n     * [microevent.ts](https://github.com/DirtyHairy/microevent)\n     * documentation on the event API.\n     *\n     * Example (using JQuery to display emulation speed):\n     * ```typescript\n     *     stellerator.frequencyUpdate.addHandler(\n     *         frequency => $('emulation-speed').text(`System speed: ${(frequency / 1e6).toFixed(2)} MHz`)\n     *     );\n     * ```\n     */\n    frequencyUpdate: Event<number>;\n\n    /**\n     * This event is dispatched whenever emulation state changes. Check out the\n     * [microevent.ts](https://github.com/DirtyHairy/microevent)\n     * documentation on the event API.\n     *\n     * Example (using JQuery to display an error message):\n     * ```typescript\n     *     stellerator.stateChange.addHandler(\n     *         state => {\n     *             if (state === Stellerator.State.error) {\n     *                  $('error-message').text(stellerator.lastError().message);\n     *             }\n     *         }\n     *     );\n     * ```\n     */\n    stateChange: Event<Stellerator.State>;\n\n    private _canvasElt: HTMLCanvasElement;\n    private _config: Stellerator.Config = null;\n    private _emulationService: EmulationServiceInterface = null;\n    private _serviceInitialized: Promise<void> = null;\n\n    private _videoDriver: VideoDriverInterface = null;\n    private _webglVideo: WebglVideo = null;\n    private _fullscreenVideo: FullscreenDriver = null;\n    private _audioDriver: AudioDriver = null;\n    private _keyboardIO: KeyboardIO = null;\n    private _paddle: Paddle = null;\n    private _gamepad: Gamepad = null;\n\n    private _controlPanel = new ControlPanelProxy();\n\n    private _state = Stellerator.State.stopped;\n\n    private _driverManager = new DriverManager();\n\n    private _mutex = new Mutex();\n}\n\nnamespace Stellerator {\n    /**\n     * General emulator configuration. The configuration is set on construction of the\n     * stellerator instance. Each setting is strictly optional and has a default\n     * value.\n     */\n    export interface Config {\n        /**\n         * Perform smooth scaling of the output image.\n         *\n         * Default: true\n         */\n        smoothScaling: boolean;\n\n        /**\n         * Simulate persistence of vision / phosphor by blending several frames. This will\n         * take effect **only** if WebGL is available.\n         *\n         * Default: true\n         */\n        simulatePov: boolean;\n\n        /**\n         * Gamma correction. Will take effect **only** if WebGL is available.\n         *\n         * Default: true\n         */\n        gamma: number;\n\n        /**\n         * Enable audio.\n         *\n         * Default: true\n         */\n        audio: boolean;\n\n        /**\n         * Master volume.\n         *\n         * Default: true\n         */\n        volume: number;\n\n        /**\n         * Enable keyboard for joysticks and reset / resume.\n         *\n         * Default: true\n         *\n         */\n        enableKeyboard: boolean;\n\n        /**\n         * Specify an HTML element on which the driver listens for keyboard\n         * events.\n         *\n         * Default: document\n         */\n        keyboardTarget: HTMLElement | HTMLDocument;\n\n        /**\n         * Toggle fullscreen with \"enter\". Applicable **only** if `enableKeyboard`\n         * is set.\n         *\n         * Default: true\n         */\n        fullscreenViaKeyboard: boolean;\n\n        /**\n         * Toggle pause with \"p\". Applicable **only** if `enableKeyboard` is set.\n         *\n         * Default: true\n         */\n        pauseViaKeyboard: boolean;\n\n        /**\n         * Reset emulation with \"shift-r\".\n         *\n         * Default: true\n         */\n        resetViaKeyboard: boolean;\n\n        /**\n         * Emulate the first paddlewith the horizontal movement of the mouse.\n         *\n         * Default: true\n         *\n         */\n        paddleViaMouse: boolean;\n\n        /**\n         * Enable gamepad support.\n         *\n         * Default: true\n         */\n        enableGamepad: boolean;\n    }\n\n    /**\n     * TV mode constants\n     */\n    export enum TvMode {\n        /**\n         * NTSC\n         */\n        ntsc = 'ntsc',\n        /**\n         * PAL\n         */\n        pal = 'pal',\n        /**\n         * SECAM\n         */\n        secam = 'secam'\n    }\n\n    /**\n     * Optional configuration for a specific cartridge. This configuration is passed to\n     * the emulator together with a cartridge image for emulation. Each setting\n     * is strictly optional and has a default value.\n     */\n    export interface CartridgeConfig {\n        /**\n         * Specify the cartridge type. The default is autodetection which should\n         * work fine in almost all cases.\n         *\n         * Default: undefined [autodetect]\n         */\n        cartridgeType: CartridgeInfo.CartridgeType;\n\n        /**\n         * Random number generator seed. This is used to initialize the initial\n         * hardware state. The default is automatic, which uses a random seed.\n         *\n         * Default: undefined [automatic]\n         */\n        randomSeed: number;\n\n        /**\n         * Emulate paddles.\n         *\n         * Default: true\n         */\n        emulatePaddles: boolean;\n\n        /**\n         * The first visible scanline of the frame. The default is autodetection, which\n         * should work fine for most cases.\n         *\n         * Default: undefined [autodetect]\n         */\n        frameStart: number;\n    }\n\n    /**\n     * The CartridgeType enum. Reexported from the `CartridgeInfo` module. Please check the\n     * [source](https://github.com/6502ts/6502.ts/blob/master/src/machine/stella/cartridge/CartridgeInfo.ts)\n     * for the various possible values if you really need this setting.\n     *\n     * Example:\n     * ```typescript\n     *     stellerator.run(cartridgeImage, Stellerator.TvMode.ntsc, {\n     *         cartridgeType: Stellerator.CartridgeType.bankswitch_DPC\n     *     });\n     * ```\n     */\n    export const CartridgeType = CartridgeInfo.CartridgeType;\n\n    /**\n     * This function takes a cartridge type and returns a human readable\n     * description suitable for building an UI. Reexported from the `CartridgeInfo` module.\n     *\n     * Example:\n     * ```typescript\n     *     const description = Stellerator.describeCartridgeType(\n     *         Stellerator.CartridgeType.bankswitch_DPC\n     *     );\n     * ```\n     */\n    export const describeCartridgeType: (cartridgeType: CartridgeInfo.CartridgeType) => string =\n        CartridgeInfo.describeCartridgeType;\n\n    /**\n     * This function returns an array of all possible cartridge types suitable for building an UI.\n     * Reexported from the `CartridgeInfo` module.\n     */\n    export const allCartridgeTypes: () => Array<CartridgeInfo.CartridgeType> = CartridgeInfo.getAllTypes;\n\n    /**\n     * The different possible states of the emulation.\n     */\n    export enum State {\n        running = 'running',\n        /**\n         * Emulation has been paused and can be stopped or continued.\n         */\n        paused = 'paused',\n        /**\n         * Emulation has been stopped regularily.\n         */\n        stopped = 'stopped',\n        /**\n         * Emulation has been stopped by an error.\n         */\n        error = 'error'\n    }\n}\n\nexport { Stellerator as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport Switch from './Switch';\nimport SwitchIO from '../../../machine/io/SwitchInterface';\n\nclass SwitchProxy implements Switch {\n    bind(swtch: SwitchIO): void {\n        this.unbind();\n\n        this._boundSwitch = swtch;\n        this._boundSwitch.toggle(this._state);\n\n        this._boundSwitch.stateChanged.addHandler(SwitchProxy._onBoundStateChange, this);\n        this._setState(this._boundSwitch.read());\n    }\n\n    unbind(): void {\n        if (!this._boundSwitch) {\n            return;\n        }\n\n        this._boundSwitch.stateChanged.removeHandler(SwitchProxy._onBoundStateChange, this);\n        this._boundSwitch = null;\n    }\n\n    toggle(state: boolean): this {\n        if (this._boundSwitch) {\n            this._boundSwitch.toggle(state);\n        } else {\n            this._setState(state);\n        }\n\n        return this;\n    }\n\n    read(): boolean {\n        return this._state;\n    }\n\n    private static _onBoundStateChange(newState: boolean, self: SwitchProxy) {\n        self._setState(newState);\n    }\n\n    private _setState(newState: boolean) {\n        if (newState !== this._state) {\n            this._state = newState;\n            this.stateChange.dispatch(this._state);\n        }\n    }\n\n    stateChange = new Event<boolean>();\n\n    private _state = false;\n    private _boundSwitch: SwitchIO = null;\n}\n\nexport { SwitchProxy as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Stellerator from './Stellerator';\n\nexport = {\n    Stellerator\n};\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport SwitchInterface from '../../../machine/io/SwitchInterface';\nimport JoystickInterface from '../../../machine/io/DigitalJoystickInterface';\nimport ControlPanelInterface from '../../../machine/stella/ControlPanelInterface';\n\nconst enum DispatchType {\n    swtch,\n    triggerDown\n}\n\ninterface SwitchDispatch {\n    type: DispatchType.swtch;\n    swtch: SwitchInterface;\n}\n\ninterface TriggerDispatch {\n    type: DispatchType.triggerDown;\n    trigger: Event<void>;\n}\n\ntype Dispatch = SwitchDispatch | TriggerDispatch;\n\nfunction mkSwitch(swtch: SwitchInterface): SwitchDispatch {\n    return {\n        type: DispatchType.swtch,\n        swtch\n    };\n}\n\nfunction mkTrigger(event: Event<void>): TriggerDispatch {\n    return {\n        type: DispatchType.triggerDown,\n        trigger: event\n    };\n}\n\nclass KeyboardIO {\n    constructor(\n        private _target: HTMLElement | HTMLDocument,\n        // tslint:disable-next-line\n        mappings: Array<KeyboardIO.Mapping> = KeyboardIO.defaultMappings\n    ) {\n        this._compileMappings(mappings);\n    }\n\n    bind(joystick0: JoystickInterface, joystick1: JoystickInterface, controlPanel: ControlPanelInterface): void {\n        if (this._joystick0) {\n            return;\n        }\n\n        this._joystick0 = joystick0;\n        this._joystick1 = joystick1;\n        this._controlPanel = controlPanel;\n\n        this._updateActionTable();\n\n        this._keydownListener = e => {\n            if (!this._compiledMappings.has(e.keyCode)) {\n                return;\n            }\n\n            const modifiers =\n                (e.shiftKey ? KeyboardIO.Modifier.shift : 0) |\n                (e.ctrlKey ? KeyboardIO.Modifier.ctrl : 0) |\n                (e.altKey ? KeyboardIO.Modifier.alt : 0);\n\n            if (!this._compiledMappings.get(e.keyCode).has(modifiers)) {\n                return;\n            }\n\n            const action = this._compiledMappings.get(e.keyCode).get(modifiers);\n\n            if (typeof action !== 'undefined') {\n                e.preventDefault();\n\n                const dispatch = this._dispatchTable[action];\n                switch (dispatch.type) {\n                    case DispatchType.swtch:\n                        dispatch.swtch.toggle(true);\n                        break;\n\n                    case DispatchType.triggerDown:\n                        dispatch.trigger.dispatch(undefined);\n                        break;\n\n                    default:\n                }\n            }\n        };\n\n        this._keyupListener = e => {\n            if (!this._compiledMappings.has(e.keyCode)) {\n                return;\n            }\n\n            for (const action of this._compiledMappings.get(e.keyCode).values()) {\n                e.preventDefault();\n\n                const dispatch = this._dispatchTable[action];\n\n                switch (dispatch.type) {\n                    case DispatchType.swtch:\n                        dispatch.swtch.toggle(false);\n                        break;\n\n                    default:\n                }\n            }\n        };\n\n        this._target.addEventListener('keydown', this._keydownListener);\n        this._target.addEventListener('keyup', this._keyupListener);\n    }\n\n    unbind(): void {\n        if (!this._joystick0) {\n            return;\n        }\n\n        this._target.removeEventListener('keydown', this._keydownListener);\n        this._target.removeEventListener('keyup', this._keyupListener);\n\n        this._joystick0 = this._joystick1 = this._controlPanel = null;\n        this._keydownListener = this._keyupListener = null;\n    }\n\n    private _updateActionTable(): void {\n        this._dispatchTable[KeyboardIO.Action.fullscreen] = mkTrigger(this.toggleFullscreen);\n        this._dispatchTable[KeyboardIO.Action.hardReset] = mkTrigger(this.hardReset);\n        this._dispatchTable[KeyboardIO.Action.togglePause] = mkTrigger(this.togglePause);\n        this._dispatchTable[KeyboardIO.Action.select] = mkSwitch(this._controlPanel.getSelectSwitch());\n        this._dispatchTable[KeyboardIO.Action.reset] = mkSwitch(this._controlPanel.getResetButton());\n        this._dispatchTable[KeyboardIO.Action.left0] = mkSwitch(this._joystick0.getLeft());\n        this._dispatchTable[KeyboardIO.Action.right0] = mkSwitch(this._joystick0.getRight());\n        this._dispatchTable[KeyboardIO.Action.up0] = mkSwitch(this._joystick0.getUp());\n        this._dispatchTable[KeyboardIO.Action.down0] = mkSwitch(this._joystick0.getDown());\n        this._dispatchTable[KeyboardIO.Action.fire0] = mkSwitch(this._joystick0.getFire());\n        this._dispatchTable[KeyboardIO.Action.left1] = mkSwitch(this._joystick1.getLeft());\n        this._dispatchTable[KeyboardIO.Action.right1] = mkSwitch(this._joystick1.getRight());\n        this._dispatchTable[KeyboardIO.Action.up1] = mkSwitch(this._joystick1.getUp());\n        this._dispatchTable[KeyboardIO.Action.down1] = mkSwitch(this._joystick1.getDown());\n        this._dispatchTable[KeyboardIO.Action.fire1] = mkSwitch(this._joystick1.getFire());\n    }\n\n    private _compileMappings(mappings: Array<KeyboardIO.Mapping>): void {\n        const compileMapping = (action: KeyboardIO.Action, keycode: number, modifiers: number) => {\n            if ((modifiers & ~(KeyboardIO.Modifier.shift | KeyboardIO.Modifier.ctrl | KeyboardIO.Modifier.alt)) !== 0) {\n                throw new Error(`invalid modifier set ${modifiers}`);\n            }\n\n            if (!this._compiledMappings.has(keycode)) {\n                this._compiledMappings.set(keycode, new Map<number, KeyboardIO.Action>());\n            }\n\n            this._compiledMappings.get(keycode).set(modifiers, action);\n        };\n\n        mappings.forEach(mapping => {\n            const action = mapping.action,\n                specs = Array.isArray(mapping.spec) ? mapping.spec : [mapping.spec];\n\n            specs.forEach(spec =>\n                compileMapping(\n                    action,\n                    typeof spec === 'object' ? spec.keycode : spec,\n                    typeof spec === 'object' ? spec.modifiers : 0\n                )\n            );\n        });\n    }\n\n    toggleFullscreen = new Event<void>();\n    hardReset = new Event<void>();\n    togglePause = new Event<void>();\n\n    private _keydownListener: (e: KeyboardEvent) => void = null;\n    private _keyupListener: (e: KeyboardEvent) => void = null;\n\n    private _joystick0: JoystickInterface = null;\n    private _joystick1: JoystickInterface = null;\n    private _controlPanel: ControlPanelInterface = null;\n\n    private _dispatchTable: { [action: number]: Dispatch } = {};\n    private _compiledMappings = new Map<number, Map<number, KeyboardIO.Action>>();\n}\n\nnamespace KeyboardIO {\n    export const enum Action {\n        select,\n        reset,\n        left0,\n        right0,\n        up0,\n        down0,\n        left1,\n        right1,\n        up1,\n        down1,\n        fire0,\n        fire1,\n\n        fullscreen,\n        hardReset,\n        togglePause\n    }\n\n    export const enum Modifier {\n        ctrl = 1,\n        alt = 2,\n        shift = 4\n    }\n\n    export interface ComplexKeySpec {\n        keycode: number;\n        modifiers: number;\n    }\n\n    export type keySpec = number | ComplexKeySpec;\n\n    export interface Mapping {\n        action: Action;\n        spec: keySpec | Array<keySpec>;\n    }\n\n    export const defaultMappings: Array<Mapping> = [\n        {\n            action: Action.select,\n            spec: {\n                keycode: 32, // space\n                modifiers: Modifier.shift\n            }\n        },\n        {\n            action: Action.reset,\n            spec: {\n                keycode: 13, // enter\n                modifiers: Modifier.shift\n            }\n        },\n        {\n            action: Action.left0,\n            spec: [\n                65, // w\n                37 // left\n            ]\n        },\n        {\n            action: Action.right0,\n            spec: [\n                68, // d\n                39 // right\n            ]\n        },\n        {\n            action: Action.up0,\n            spec: [\n                87, // w\n                38 // up\n            ]\n        },\n        {\n            action: Action.down0,\n            spec: [\n                83, // s\n                40 // down\n            ]\n        },\n        {\n            action: Action.fire0,\n            spec: [\n                32, // space\n                86 // v\n            ]\n        },\n        {\n            action: Action.left1,\n            spec: 74 // j\n        },\n        {\n            action: Action.right1,\n            spec: 76 // l\n        },\n        {\n            action: Action.up1,\n            spec: 73 // i\n        },\n        {\n            action: Action.down1,\n            spec: 75 // k\n        },\n        {\n            action: Action.fire1,\n            spec: 66 // b\n        },\n        {\n            action: Action.fullscreen,\n            spec: 13 // enter\n        },\n        {\n            action: Action.hardReset,\n            spec: {\n                keycode: 82, // r\n                modifiers: Modifier.shift\n            }\n        },\n        {\n            action: Action.togglePause,\n            spec: 80 // p\n        }\n    ];\n}\n\nexport { KeyboardIO as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport VanillaDriver from '../../driver/WebAudio';\nimport WaveformAudioOutputInterface from '../../../machine/io/WaveformAudioOutputInterface';\nimport PCMAudioEndpointInterface from '../../driver/PCMAudioEndpointInterface';\n\nclass WebAudioDriver {\n    constructor(private _fragmentSize?: number) {}\n\n    init(): void {}\n\n    bind(pcmAudio: boolean, channels: WebAudioDriver.Channels): void {\n        if (this._channels) {\n            return;\n        }\n        this._channels = [...channels] as any;\n\n        if (!this._driver || this._pcmAudio !== pcmAudio) {\n            if (this._driver) {\n                this._driver.close();\n            }\n\n            this._driver = pcmAudio\n                ? new VanillaDriver(0, this._channels.length, this._fragmentSize)\n                : new VanillaDriver(this._channels.length, 0, this._fragmentSize);\n            this._driver.init();\n        }\n\n        if (pcmAudio) {\n            this._driver.bind([], this._channels as Array<PCMAudioEndpointInterface>);\n        } else {\n            this._driver.bind(this._channels as Array<WaveformAudioOutputInterface>, []);\n        }\n\n        for (let i = 0; i < this._channels.length; i++) {\n            this._driver.setMasterVolume(i, this._volume);\n        }\n\n        this._pcmAudio = pcmAudio;\n    }\n\n    unbind(): void {\n        if (!this._channels) {\n            return;\n        }\n\n        this._driver.unbind();\n\n        this._channels = null;\n    }\n\n    setMasterVolume(volume: number): void {\n        this._volume = volume;\n\n        if (this._channels) {\n            for (let i = 0; i < this._channels.length; i++) {\n                this._driver.setMasterVolume(i, this._volume);\n            }\n        }\n    }\n\n    getMasterVolume(): number {\n        return this._volume;\n    }\n\n    async pause(): Promise<void> {\n        if (this._driver) {\n            await this._driver.pause();\n        }\n    }\n\n    async resume(): Promise<void> {\n        if (this._driver) {\n            await this._driver.resume();\n        }\n    }\n\n    private _driver: VanillaDriver;\n    private _pcmAudio = false;\n    private _volume = 1;\n    private _channels: WebAudioDriver.Channels;\n}\n\nnamespace WebAudioDriver {\n    export type Channels = Array<WaveformAudioOutputInterface> | Array<PCMAudioEndpointInterface>;\n}\n\nexport { WebAudioDriver as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport EmulationServiceInterface from './EmulationServiceInterface';\nimport EmulationContextInterface from './EmulationContextInterface';\n\nclass DriverManager {\n    bind(emulationService: EmulationServiceInterface): this {\n        if (this._driversBound) {\n            return this;\n        }\n\n        this._emulationService = emulationService;\n\n        if (this._shouldBindDrivers()) {\n            this._bindDrivers();\n        }\n\n        this._emulationService.stateChanged.addHandler(DriverManager._onEmuStateChange, this);\n\n        return this;\n    }\n\n    unbind(): this {\n        if (!this._emulationService) {\n            return this;\n        }\n\n        this._unbindDrivers();\n\n        this._emulationService.stateChanged.removeHandler(DriverManager._onEmuStateChange, this);\n\n        this._emulationService = null;\n\n        return this;\n    }\n\n    addDriver(driver: DriverManager.Driver, binder: DriverManager.Binder): this {\n        this._drivers.set(driver, new DriverManager.DriverContext(driver, binder));\n\n        if (this._driversBound) {\n            binder(this._emulationService.getEmulationContext(), driver);\n        }\n\n        return this;\n    }\n\n    removeDriver(driver: DriverManager.Driver): this {\n        if (!this._drivers.get(driver)) {\n            return this;\n        }\n\n        driver.unbind();\n\n        this._drivers.delete(driver);\n\n        return this;\n    }\n\n    private static _onEmuStateChange(newState: EmulationServiceInterface.State, self: DriverManager): void {\n        if (self._shouldBindDrivers(newState)) {\n            self._bindDrivers();\n        } else {\n            self._unbindDrivers();\n        }\n    }\n\n    private _shouldBindDrivers(\n        state = this._emulationService ? this._emulationService.getState() : undefined\n    ): boolean {\n        return (\n            this._emulationService &&\n            (state === EmulationServiceInterface.State.running || state === EmulationServiceInterface.State.paused)\n        );\n    }\n\n    private _bindDrivers(): void {\n        if (this._driversBound) {\n            return;\n        }\n\n        this._drivers.forEach(driverContext =>\n            driverContext.binder(this._emulationService.getEmulationContext(), driverContext.driver)\n        );\n\n        this._driversBound = true;\n    }\n\n    private _unbindDrivers(): void {\n        if (!this._driversBound) {\n            return;\n        }\n\n        this._drivers.forEach(driverContext => driverContext.driver.unbind());\n\n        this._driversBound = false;\n    }\n\n    private _emulationService: EmulationServiceInterface;\n    private _drivers = new Map<DriverManager.Driver, DriverManager.DriverContext>();\n    private _driversBound = false;\n}\n\nnamespace DriverManager {\n    export interface Driver {\n        unbind(): void;\n    }\n\n    export interface Binder {\n        (context: EmulationContextInterface, driver: Driver): void;\n    }\n\n    export class DriverContext {\n        constructor(public driver: Driver, public binder: Binder) {}\n    }\n}\n\nexport { DriverManager as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { EventInterface } from 'microevent.ts';\n\nimport StellaConfig from '../../../machine/stella/Config';\nimport CartridgeInfo from '../../../machine/stella/cartridge/CartridgeInfo';\nimport EmulationContextInterface from './EmulationContextInterface';\nimport { ProcessorConfig as VideoProcessorConfig } from '../../../video/processing/config';\n\ninterface EmulationServiceInterface {\n    init(): Promise<void>;\n\n    start(\n        buffer: { [i: number]: number; length: number },\n        config: StellaConfig,\n        cartridgeType?: CartridgeInfo.CartridgeType,\n        videoProcessing?: Array<VideoProcessorConfig>\n    ): Promise<EmulationServiceInterface.State>;\n\n    stop(): Promise<EmulationServiceInterface.State>;\n\n    pause(): Promise<EmulationServiceInterface.State>;\n\n    resume(): Promise<EmulationServiceInterface.State>;\n\n    reset(): Promise<EmulationServiceInterface.State>;\n\n    setRateLimit(enforce: boolean): Promise<void>;\n\n    getRateLimit(): boolean;\n\n    getState(): EmulationServiceInterface.State;\n\n    getLastError(): Error;\n\n    getEmulationContext(): EmulationContextInterface;\n\n    getFrequency(): number;\n\n    stateChanged: EventInterface<EmulationServiceInterface.State>;\n\n    frequencyUpdate: EventInterface<number>;\n}\n\nnamespace EmulationServiceInterface {\n    export enum State {\n        stopped,\n        running,\n        paused,\n        error\n    }\n}\n\nexport { EmulationServiceInterface as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Joystick from '../../../../machine/io/DigitalJoystick';\nimport ControlPanel from '../../../../machine/stella/ControlPanel';\nimport Paddle from '../../../../machine/io/Paddle';\nimport ControlState from './ControlState';\nimport { RpcProviderInterface } from 'worker-rpc';\n\nimport { SIGNAL_TYPE } from './messages';\n\nclass ControlProxy {\n    constructor(private _rpc: RpcProviderInterface) {\n        for (let i = 0; i < 2; i++) {\n            this._joysticks[i] = new Joystick();\n        }\n\n        for (let i = 0; i < 4; i++) {\n            this._paddles[i] = new Paddle();\n        }\n    }\n\n    sendUpdate(): void {\n        this._rpc.signal<ControlState>(SIGNAL_TYPE.controlStateUpdate, {\n            joystickState: this._joysticks.map(ControlProxy._joystickState),\n            paddleState: this._paddles.map(ControlProxy._paddleState),\n            controlPanelState: ControlProxy._controlPanelState(this._controlPanel)\n        });\n    }\n\n    getJoystick(i: number): Joystick {\n        if (i < 0 || i > 1) {\n            throw new Error(`invalid joystick index ${i}`);\n        }\n\n        return this._joysticks[i];\n    }\n\n    getControlPanel(): ControlPanel {\n        return this._controlPanel;\n    }\n\n    getPaddle(i: number): Paddle {\n        if (i < 0 || i > 3) {\n            throw new Error(`invalid paddle index ${i}`);\n        }\n\n        return this._paddles[i];\n    }\n\n    private static _joystickState(joystick: Joystick): ControlState.JoystickState {\n        return {\n            up: joystick.getUp().read(),\n            down: joystick.getDown().read(),\n            left: joystick.getLeft().read(),\n            right: joystick.getRight().read(),\n            fire: joystick.getFire().read()\n        };\n    }\n\n    private static _paddleState(paddle: Paddle): ControlState.PaddleState {\n        return {\n            value: paddle.getValue(),\n            fire: paddle.getFire().read()\n        };\n    }\n\n    private static _controlPanelState(controlPanel: ControlPanel): ControlState.ControlPanelState {\n        return {\n            difficulty0: controlPanel.getDifficultySwitchP0().read(),\n            difficulty1: controlPanel.getDifficultySwitchP1().read(),\n            select: controlPanel.getSelectSwitch().read(),\n            reset: controlPanel.getResetButton().read(),\n            color: controlPanel.getColorSwitch().read()\n        };\n    }\n\n    private _joysticks = new Array<Joystick>(2);\n    private _paddles = new Array<Paddle>(4);\n    private _controlPanel = new ControlPanel();\n}\n\nexport { ControlProxy as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport VideoEndpointInterface from '../../../driver/VideoEndpointInterface';\nimport JoystickInterface from '../../../../machine/io/DigitalJoystickInterface';\nimport ControlPanelInterface from '../../../../machine/stella/ControlPanelInterface';\nimport PaddleInterface from '../../../../machine/io/PaddleInterface';\nimport WaveformAudioOutputInterface from '../../../../machine/io/WaveformAudioOutputInterface';\nimport PCMAudioEndpointInterface from '../../../driver/PCMAudioEndpointInterface';\nimport Config from '../../../../machine/stella/Config';\n\nimport EmulationContextInterface from '../EmulationContextInterface';\nimport VideoProxy from './VideoProxy';\nimport ControlProxy from './ControlProxy';\nimport WaveformAudioProxy from './WaveformAudioProxy';\nimport PCMAudioProxy from './PCMAudioProxy';\n\nclass EmulationContext implements EmulationContextInterface {\n    constructor(\n        private _videoProxy: VideoProxy,\n        private _controlProxy: ControlProxy,\n        private _waveformChannels: Array<WaveformAudioProxy>,\n        private _pcmChannel: PCMAudioProxy\n    ) {\n        if (this._waveformChannels.length !== 2) {\n            throw new Error(`invalid channel count ${this._waveformChannels.length}`);\n        }\n    }\n\n    setConfig(config: Config): void {\n        this._config = config;\n    }\n\n    getConfig(): Config {\n        return this._config;\n    }\n\n    getVideo(): VideoEndpointInterface {\n        return this._videoProxy;\n    }\n\n    getJoystick(i: number): JoystickInterface {\n        return this._controlProxy.getJoystick(i);\n    }\n\n    getControlPanel(): ControlPanelInterface {\n        return this._controlProxy.getControlPanel();\n    }\n\n    getPaddle(i: number): PaddleInterface {\n        return this._controlProxy.getPaddle(i);\n    }\n\n    getWaveformChannels(): Array<WaveformAudioOutputInterface> {\n        return this._waveformChannels;\n    }\n\n    getPCMChannel(): PCMAudioEndpointInterface {\n        return this._pcmChannel;\n    }\n\n    getVideoProxy(): VideoProxy {\n        return this._videoProxy;\n    }\n\n    private _config: Config = null;\n}\n\nexport { EmulationContext as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\nimport { RpcProvider } from 'worker-rpc';\n\nimport EmulationServiceInterface from '../EmulationServiceInterface';\nimport EmulationContext from './EmulationContext';\nimport EmulationContextInterface from '../EmulationContextInterface';\nimport { ProcessorConfig as VideoProcessorConfig } from '../../../../video/processing/config';\nimport VideoProxy from './VideoProxy';\nimport ControlProxy from './ControlProxy';\nimport WaveformAudioProxy from './WaveformAudioProxy';\nimport PCMAudioProxy from './PCMAudioProxy';\n\nimport StellaConfig from '../../../../machine/stella/Config';\nimport CartridgeInfo from '../../../../machine/stella/cartridge/CartridgeInfo';\n\nimport { Mutex } from 'async-mutex';\n\nimport { RPC_TYPE, SIGNAL_TYPE, EmulationStartMessage, SetupMessage } from './messages';\n\nconst CONTROL_PROXY_UPDATE_INTERVAL = 25;\n\nconst enum ProxyState {\n    stopped,\n    running,\n    paused\n}\n\nclass EmulationService implements EmulationServiceInterface {\n    constructor(private _stellaWorkerUri: string, private _videoWorkerUri?: string) {}\n\n    init(): Promise<void> {\n        this._worker = new Worker(this._stellaWorkerUri);\n        this._rpc = new RpcProvider((message, transfer?) => this._worker.postMessage(message, transfer));\n\n        this._pcmChannel = new PCMAudioProxy(0, this._rpc).init();\n\n        for (let i = 0; i < 2; i++) {\n            this._waveformChannels[i] = new WaveformAudioProxy(i, this._rpc).init();\n        }\n\n        const videoProxy = new VideoProxy(this._rpc),\n            controlProxy = new ControlProxy(this._rpc);\n\n        videoProxy.init();\n\n        this._emulationContext = new EmulationContext(\n            videoProxy,\n            controlProxy,\n            this._waveformChannels,\n            this._pcmChannel\n        );\n\n        this._worker.onmessage = messageEvent => this._rpc.dispatch(messageEvent.data);\n\n        this._rpc\n            .registerSignalHandler<number>(SIGNAL_TYPE.emulationFrequencyUpdate, this._onFrequencyUpdate.bind(this))\n            .registerSignalHandler<string>(SIGNAL_TYPE.emulationError, this._onEmulationError.bind(this));\n\n        this._controlProxy = controlProxy;\n\n        return this._startVideoProcessingPipeline().then(() => this.setRateLimit(this._rateLimitEnforced));\n    }\n\n    async start(\n        buffer: { [i: number]: number; length: number },\n        config: StellaConfig,\n        cartridgeType?: CartridgeInfo.CartridgeType,\n        videoProcessing?: Array<VideoProcessorConfig>\n    ): Promise<EmulationServiceInterface.State> {\n        await this.stop();\n\n        return this._mutex.runExclusive(async () => {\n            const state = await this._rpc.rpc<EmulationStartMessage, EmulationServiceInterface.State>(\n                RPC_TYPE.emulationStart,\n                {\n                    buffer,\n                    config,\n                    cartridgeType,\n                    videoProcessing\n                }\n            );\n\n            if (state === EmulationServiceInterface.State.paused) {\n                this._saveConfig = config;\n                this._emulationContext.setConfig(config);\n\n                await this._startProxies(config);\n            } else {\n                this._saveConfig = null;\n            }\n\n            return this._applyState(state);\n        });\n    }\n\n    pause(): Promise<EmulationServiceInterface.State> {\n        return this._mutex.runExclusive(() =>\n            this._rpc.rpc<void, EmulationServiceInterface.State>(RPC_TYPE.emulationPause).then(state => {\n                this._pauseProxies();\n                return this._applyState(state);\n            })\n        );\n    }\n\n    stop(): Promise<EmulationServiceInterface.State> {\n        return this._mutex.runExclusive(() =>\n            this._rpc.rpc<void, EmulationServiceInterface.State>(RPC_TYPE.emulationStop).then(state => {\n                this._stopProxies();\n                return this._applyState(state);\n            })\n        );\n    }\n\n    reset(): Promise<EmulationServiceInterface.State> {\n        return this._mutex.runExclusive(async () => {\n            const state = await this._rpc.rpc<void, EmulationServiceInterface.State>(RPC_TYPE.emulationReset);\n\n            // Try to restart the proxies if the reset recovered from an an error\n            if (\n                this._state === EmulationServiceInterface.State.error &&\n                (state === EmulationServiceInterface.State.running ||\n                    state === EmulationServiceInterface.State.paused) &&\n                this._saveConfig\n            ) {\n                await this._startProxies(this._saveConfig);\n            }\n\n            return this._applyState(state);\n        });\n    }\n\n    resume(): Promise<EmulationServiceInterface.State> {\n        return this._mutex.runExclusive(() =>\n            this._rpc.rpc<void, EmulationServiceInterface.State>(RPC_TYPE.emulationResume).then(state => {\n                this._resumeProxies();\n                return this._applyState(state);\n            })\n        );\n    }\n\n    setRateLimit(enforce: boolean): Promise<void> {\n        this._rateLimitEnforced = enforce;\n\n        return this._rpc.rpc<boolean, void>(RPC_TYPE.emulationSetRateLimit, enforce);\n    }\n\n    getFrequency(): number {\n        return this._frequency;\n    }\n\n    getRateLimit(): boolean {\n        return this._rateLimitEnforced;\n    }\n\n    getState(): EmulationServiceInterface.State {\n        return this._state;\n    }\n\n    getLastError(): Error {\n        return this._lastError;\n    }\n\n    getEmulationContext(): EmulationContextInterface {\n        switch (this._state) {\n            case EmulationServiceInterface.State.running:\n            case EmulationServiceInterface.State.paused:\n                return this._emulationContext;\n\n            default:\n                return null;\n        }\n    }\n\n    private _fetchLastError(): Promise<Error> {\n        return this._rpc\n            .rpc<void, string>(RPC_TYPE.emulationFetchLastError)\n            .then(message => (message ? new Error(message) : null));\n    }\n\n    private _applyState(\n        state: EmulationServiceInterface.State\n    ): Promise<EmulationServiceInterface.State> | EmulationServiceInterface.State {\n        if (state === EmulationServiceInterface.State.error) {\n            return this._fetchLastError().then(error => {\n                this._state = state;\n                this._lastError = error;\n\n                this._stopProxies();\n\n                this.stateChanged.dispatch(state);\n\n                return state;\n            });\n        } else {\n            this._state = state;\n            this.stateChanged.dispatch(state);\n\n            return state;\n        }\n    }\n\n    private _onFrequencyUpdate(message: number): void {\n        this._frequency = message;\n        this.frequencyUpdate.dispatch(this._frequency);\n    }\n\n    private _onEmulationError(message: string): void {\n        this._lastError = new Error(message || '');\n\n        this._stopProxies();\n        this._state = EmulationServiceInterface.State.error;\n        this.stateChanged.dispatch(this._state);\n    }\n\n    private async _startProxies(config: StellaConfig): Promise<void> {\n        await this._emulationContext.getVideoProxy().start();\n\n        for (let i = 0; i < this._waveformChannels.length; i++) {\n            await this._waveformChannels[i].start(config);\n        }\n        await this._pcmChannel.start();\n\n        this._startControlUpdates();\n\n        this._proxyState = ProxyState.running;\n    }\n\n    private _stopProxies(): void {\n        if (this._proxyState === ProxyState.stopped) {\n            return;\n        }\n\n        this._emulationContext.getVideoProxy().stop();\n        this._pcmChannel.stop();\n        this._stopControlUpdates();\n\n        this._proxyState = ProxyState.stopped;\n    }\n\n    private _pauseProxies(): void {\n        if (this._proxyState !== ProxyState.running) {\n            return;\n        }\n\n        this._stopControlUpdates();\n\n        this._proxyState = ProxyState.paused;\n    }\n\n    private _resumeProxies(): void {\n        if (this._proxyState !== ProxyState.paused) {\n            return;\n        }\n\n        this._startControlUpdates();\n\n        this._proxyState = ProxyState.running;\n    }\n\n    private _startControlUpdates(): void {\n        if (this._controlProxyUpdateHandle === null) {\n            this._controlProxyUpdateHandle = setInterval(\n                () => this._controlProxy.sendUpdate(),\n                CONTROL_PROXY_UPDATE_INTERVAL\n            );\n        }\n    }\n\n    private _stopControlUpdates(): void {\n        if (this._controlProxyUpdateHandle !== null) {\n            clearInterval(this._controlProxyUpdateHandle);\n            this._controlProxyUpdateHandle = null;\n        }\n    }\n\n    private async _startVideoProcessingPipeline(): Promise<void> {\n        let channel: MessageChannel = null;\n\n        if (this._videoWorkerUri) {\n            channel = new MessageChannel();\n\n            const worker = new Worker(this._videoWorkerUri),\n                rpc = new RpcProvider((payload: any, transfer?: any) => worker.postMessage(payload, transfer));\n\n            worker.onmessage = (e: MessageEvent) => rpc.dispatch(e.data);\n\n            await rpc.rpc('/use-port', channel.port1, [channel.port1]);\n        }\n\n        await this._rpc.rpc<SetupMessage, any>(\n            RPC_TYPE.setup,\n            {\n                videoProcessorPort: channel && channel.port2\n            },\n            channel ? [channel.port2] : []\n        );\n    }\n\n    stateChanged = new Event<EmulationServiceInterface.State>();\n    frequencyUpdate = new Event<number>();\n\n    private _rateLimitEnforced = true;\n\n    private _mutex = new Mutex();\n    private _worker: Worker = null;\n    private _rpc: RpcProvider = null;\n\n    private _state = EmulationServiceInterface.State.stopped;\n    private _lastError: Error = null;\n\n    private _emulationContext: EmulationContext = null;\n    private _frequency = 0;\n\n    private _waveformChannels = new Array<WaveformAudioProxy>(2);\n    private _pcmChannel: PCMAudioProxy = null;\n\n    private _controlProxy: ControlProxy = null;\n    private _controlProxyUpdateHandle: any = null;\n    private _proxyState = ProxyState.stopped;\n\n    private _saveConfig: StellaConfig = null;\n}\n\nexport { EmulationService as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { RpcProviderInterface } from 'worker-rpc';\nimport { Event } from 'microevent.ts';\n\nimport Pool from '../../../../tools/pool/Pool';\nimport PoolMemberInterface from '../../../../tools/pool/PoolMemberInterface';\nimport PCMAudioEndpointInterface from '../../../driver/PCMAudioEndpointInterface';\nimport {\n    SIGNAL_TYPE,\n    RPC_TYPE,\n    PCMAudioReturnFrameMessage,\n    PCMAudioNewFrameMessage,\n    PCMAudioTogglePauseMessage,\n    PCMAudioParametersResponse\n} from './messages';\n\nclass PCMAudioProxy implements PCMAudioEndpointInterface {\n    constructor(private _index: number, private _rpc: RpcProviderInterface) {\n        this._framePool.event.release.addHandler(PCMAudioProxy._onReleaseFragment, this);\n\n        this._signalReturnFrame = SIGNAL_TYPE.pcmAudioReturnFrame(this._index);\n    }\n\n    init(): this {\n        this._rpc\n            .registerSignalHandler(SIGNAL_TYPE.pcmAudioNewFrame(this._index), this._onNewFrame.bind(this))\n            .registerSignalHandler(SIGNAL_TYPE.pcmAudioTogglePause(this._index), this._onTogglePause.bind(this));\n\n        return this;\n    }\n\n    async start(): Promise<void> {\n        if (this._enabled) {\n            return;\n        }\n\n        const params = await this._rpc.rpc<void, PCMAudioParametersResponse>(\n            RPC_TYPE.getPCMAudioParameters(this._index)\n        );\n\n        this._sampleRate = params.sampleRate;\n        this._frameSize = params.frameSize;\n        this._paused = params.paused;\n\n        this._enabled = true;\n    }\n\n    stop(): void {\n        this._enabled = false;\n    }\n\n    isPaused(): boolean {\n        return this._paused;\n    }\n\n    getSampleRate(): number {\n        return this._sampleRate;\n    }\n\n    getFrameSize(): number {\n        return this._frameSize;\n    }\n\n    private static _onReleaseFragment(frame: Float32Array, self: PCMAudioProxy): void {\n        if (!self._frameMap.has(frame)) {\n            return;\n        }\n\n        self._rpc.signal<PCMAudioReturnFrameMessage>(\n            self._signalReturnFrame,\n            {\n                id: self._frameMap.get(frame),\n                buffer: frame.buffer\n            },\n            [frame.buffer]\n        );\n    }\n\n    private _onNewFrame(msg: PCMAudioNewFrameMessage): void {\n        if (!this._enabled) {\n            return;\n        }\n\n        const frame = this._framePool.get(),\n            data = new Float32Array(msg.buffer);\n\n        frame.adopt(data);\n        this._frameMap.set(data, msg.id);\n\n        this.newFrame.dispatch(frame);\n    }\n\n    private _onTogglePause(msg: PCMAudioTogglePauseMessage): void {\n        if (msg.paused === this._paused) {\n            return;\n        }\n\n        this._paused = msg.paused;\n        this.togglePause.dispatch(this._paused);\n    }\n\n    newFrame = new Event<PoolMemberInterface<Float32Array>>();\n\n    togglePause = new Event<boolean>();\n\n    private _sampleRate = 0;\n    private _frameSize = 0;\n    private _paused = false;\n\n    private _framePool = new Pool<Float32Array>(() => null);\n    private _frameMap = new WeakMap<Float32Array, number>();\n\n    private _enabled = false;\n\n    private _signalReturnFrame = '';\n}\n\nexport { PCMAudioProxy as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport VideoEndpointInterface from '../../../driver/VideoEndpointInterface';\nimport { RpcProviderInterface } from 'worker-rpc';\nimport PoolMemberInterface from '../../../../tools/pool/PoolMemberInterface';\n\nimport {\n    SIGNAL_TYPE,\n    RPC_TYPE,\n    VideoNewFrameMessage,\n    VideoReturnSurfaceMessage,\n    VideoParametersResponse\n} from './messages';\n\nclass VideoProxy implements VideoEndpointInterface {\n    constructor(private _rpc: RpcProviderInterface) {}\n\n    init(): void {\n        this._rpc.registerSignalHandler(SIGNAL_TYPE.videoNewFrame, this._onNewFrame.bind(this));\n    }\n\n    async start(): Promise<void> {\n        if (this._active) {\n            this.stop();\n        }\n\n        const videoParameters = await this._rpc.rpc<void, VideoParametersResponse>(RPC_TYPE.getVideoParameters);\n\n        this._active = true;\n        this._width = videoParameters.width;\n        this._height = videoParameters.height;\n        this._ids = new Set<number>();\n    }\n\n    stop(): void {\n        this._active = false;\n        this._ids = null;\n    }\n\n    getWidth(): number {\n        return this._width;\n    }\n\n    getHeight(): number {\n        return this._height;\n    }\n\n    private _onNewFrame(message: VideoNewFrameMessage): void {\n        if (!this._active) {\n            console.warn('video proxy deactivated: ignoring frame');\n            return;\n        }\n\n        if (this._width !== message.width || this._height !== message.height) {\n            console.warn(`surface dimensions do not match; ignoring frame`);\n            return;\n        }\n\n        this._ids.add(message.id);\n\n        const imageData = new ImageData(new Uint8ClampedArray(message.buffer), message.width, message.height);\n\n        this.newFrame.dispatch({\n            get: () => imageData,\n\n            release: () => {\n                if (this._active && this._ids.has(message.id)) {\n                    this._rpc.signal<VideoReturnSurfaceMessage>(\n                        SIGNAL_TYPE.videoReturnSurface,\n                        {\n                            id: message.id,\n                            buffer: message.buffer\n                        },\n                        [message.buffer]\n                    );\n                }\n            },\n\n            dispose: () => undefined,\n\n            adopt: () => {\n                throw new Error('adopt is not implemented');\n            }\n        });\n    }\n\n    newFrame = new Event<PoolMemberInterface<ImageData>>();\n\n    private _active = false;\n    private _width = 0;\n    private _height = 0;\n    private _ids: Set<number> = null;\n}\n\nexport { VideoProxy as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport { RpcProviderInterface } from 'worker-rpc';\nimport WaveformAudioOutputInterface from '../../../../machine/io/WaveformAudioOutputInterface';\nimport ToneGenerator from '../../../../machine/stella/tia/ToneGenerator';\nimport StellaConfig from '../../../../machine/stella/Config';\nimport AudioOutputBuffer from '../../../../tools/AudioOutputBuffer';\n\nimport {\n    SIGNAL_TYPE,\n    RPC_TYPE,\n    WaveformAudioBufferChangeMessage,\n    WaveformAudioVolumeChangeMessage,\n    WaveformAudioParametersResponse\n} from './messages';\n\nclass WaveformAudioProxy implements WaveformAudioOutputInterface {\n    constructor(private _index: number, private _rpc: RpcProviderInterface) {}\n\n    init(): this {\n        this._rpc\n            .registerSignalHandler(SIGNAL_TYPE.waveformAudioBufferChange, this._onBufferChangeSignal.bind(this))\n            .registerSignalHandler(SIGNAL_TYPE.waveformAudioVolumeChange, this._onVolumeChangeSignal.bind(this))\n            .registerSignalHandler(SIGNAL_TYPE.audioStop, this._onStopSignal.bind(this));\n\n        return this;\n    }\n\n    async start(config: StellaConfig): Promise<void> {\n        const parameters = await this._rpc.rpc<void, WaveformAudioParametersResponse>(\n            RPC_TYPE.getWaveformAudioParameters(this._index)\n        );\n\n        this._toneGenerator.setConfig(config);\n        this.setVolume(parameters.volume);\n    }\n\n    setVolume(value: number): this {\n        this._volume = value;\n\n        return this;\n    }\n\n    getVolume(): number {\n        return this._volume;\n    }\n\n    getBuffer(key: number): AudioOutputBuffer {\n        return this._toneGenerator.getBuffer(key);\n    }\n\n    private _onVolumeChangeSignal(message: WaveformAudioVolumeChangeMessage): void {\n        if (message.index === this._index) {\n            this._volume = message.value;\n            this.volumeChanged.dispatch(this._volume);\n        }\n    }\n\n    private _onBufferChangeSignal(message: WaveformAudioBufferChangeMessage): void {\n        if (message.index === this._index) {\n            this.bufferChanged.dispatch(message.key);\n        }\n    }\n\n    private _onStopSignal(index: number): void {\n        if (index === this._index) {\n            this.stop.dispatch(undefined);\n        }\n    }\n\n    bufferChanged = new Event<number>();\n    volumeChanged = new Event<number>();\n    stop = new Event<void>();\n\n    private _toneGenerator = new ToneGenerator();\n    private _volume = 0;\n}\n\nexport { WaveformAudioProxy as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport StellaConfig from '../../../../machine/stella/Config';\nimport CartridgeInfo from '../../../../machine/stella/cartridge/CartridgeInfo';\nimport { ProcessorConfig as VideoProcessorConfig } from '../../../../video/processing/config';\n\nexport const RPC_TYPE = {\n    emulationPause: 'emulation/pause',\n    emulationReset: 'emulation/reset',\n    emulationResume: 'emulation/resume',\n    emulationSetRateLimit: 'emulation/setRateLimit',\n    emulationStart: 'emulation/start',\n    emulationStop: 'emulation/stop',\n    emulationFetchLastError: 'emulation/fetchLastError',\n    getVideoParameters: 'video/getParameters',\n    getWaveformAudioParameters: (index: number) => `audio/waveform/getParameters/${index}`,\n    getPCMAudioParameters: (index: number) => `audio/pcm/getParameters/${index}`,\n    setup: '/setup'\n};\nObject.freeze(RPC_TYPE);\n\nexport const SIGNAL_TYPE = {\n    emulationError: 'emulation/error',\n    emulationFrequencyUpdate: 'emulation/frequencyUpdate',\n    videoNewFrame: 'video/newFrame',\n    videoReturnSurface: 'video/returnSurface',\n    controlStateUpdate: 'control/stateUpdate',\n    waveformAudioVolumeChange: 'audio/waveform/volumeChange',\n    waveformAudioBufferChange: 'audio/waveform/bufferChange',\n    pcmAudioNewFrame: (index: number) => `audio/pcm/newFrame/${index}`,\n    pcmAudioTogglePause: (index: number) => `audio/pcm/togglePause/${index}`,\n    pcmAudioReturnFrame: (index: number) => `audio/pcm/returnFrame/${index}`,\n    audioStop: 'audio/stop'\n};\nObject.freeze(SIGNAL_TYPE);\n\nexport interface SetupMessage {\n    videoProcessorPort: MessagePort;\n}\n\nexport interface EmulationStartMessage {\n    buffer: { [i: number]: number; length: number };\n    config: StellaConfig;\n    cartridgeType?: CartridgeInfo.CartridgeType;\n    videoProcessing?: Array<VideoProcessorConfig>;\n}\n\nexport interface VideoParametersResponse {\n    width: number;\n    height: number;\n}\n\nexport interface WaveformAudioParametersResponse {\n    volume: number;\n}\n\nexport interface VideoNewFrameMessage {\n    id: number;\n    width: number;\n    height: number;\n    buffer: ArrayBuffer;\n}\n\nexport interface VideoReturnSurfaceMessage {\n    id: number;\n    buffer: ArrayBuffer;\n}\n\nexport interface WaveformAudioVolumeChangeMessage {\n    index: number;\n    value: number;\n}\n\nexport interface WaveformAudioBufferChangeMessage {\n    index: number;\n    key: number;\n}\n\nexport interface PCMAudioParametersResponse {\n    sampleRate: number;\n    frameSize: number;\n    paused: boolean;\n}\n\nexport interface PCMAudioNewFrameMessage {\n    buffer: ArrayBuffer;\n    id: number;\n}\n\nexport interface PCMAudioTogglePauseMessage {\n    paused: boolean;\n}\n\nexport interface PCMAudioReturnFrameMessage {\n    id: number;\n    buffer: ArrayBuffer;\n}\n"
  ]
}