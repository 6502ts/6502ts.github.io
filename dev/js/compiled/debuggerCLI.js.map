{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "node_modules/base64-js/index.js",
    "node_modules/buffer/index.js",
    "node_modules/ieee754/index.js",
    "node_modules/inherits/inherits_browser.js",
    "node_modules/microevent.ts/lib/Event.js",
    "node_modules/microevent.ts/lib/index.js",
    "node_modules/path-browserify/index.js",
    "node_modules/process/browser.js",
    "node_modules/tslib/tslib.js",
    "node_modules/util/support/isBufferBrowser.js",
    "node_modules/util/util.js",
    "src/cli/AbstractCLI.ts",
    "src/cli/CommandInterpreter.ts",
    "src/cli/Completer.ts",
    "src/cli/DebuggerCLI.ts",
    "src/cli/DebuggerFrontend.ts",
    "src/cli/JqtermCLIRunner.ts",
    "src/fs/AbstractFileSystemProvider.ts",
    "src/fs/PrepackagedFilesystemProvider.ts",
    "src/machine/Debugger.ts",
    "src/machine/board/BoardInterface.ts",
    "src/machine/cpu/Cpu.ts",
    "src/machine/cpu/CpuInterface.ts",
    "src/machine/cpu/Disassembler.ts",
    "src/machine/cpu/Instruction.ts",
    "src/machine/vanilla/Board.ts",
    "src/machine/vanilla/Memory.ts",
    "src/tools/binary.ts",
    "src/tools/hex.ts",
    "src/web/debuggerCLI.ts"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvxsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5EA;AACA;AACA;AACA;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxnrjBA,+CAAsC;AAEtC;IAAA;QACI,WAAM,GAAuB;YACzB,eAAe,EAAE,IAAI,qBAAK,EAAQ;YAClC,IAAI,EAAE,IAAI,qBAAK,EAAQ;YACvB,aAAa,EAAE,IAAI,qBAAK,EAAQ;YAChC,MAAM,EAAE,IAAI,qBAAK,EAAQ;YACzB,wBAAwB,EAAE,IAAI,qBAAK,EAAQ;SAC9C,CAAC;IACN,CAAC;IAAD,kBAAC;AAAD,CARA,AAQC,IAAA;AAgBuB,8BAAO;;;;;;AC1B/B;IACI,4BAAY,YAAuD;QAmD3D,kBAAa,GAA6C,EAAE,CAAC;QAC7D,gBAAW,GAA6C,EAAE,CAAC;QAnD/D,IAAI,OAAO,YAAY,KAAK,WAAW,EAAE;YACrC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;SACvC;IACL,CAAC;IAEM,6CAAgB,GAAvB,UAAwB,YAAsD;QAA9E,iBAEC;QADG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,UAAC,OAAe,IAAK,OAAA,CAAC,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,EAArD,CAAqD,CAAC,CAAC;IAClH,CAAC;IAEY,oCAAO,GAApB,UAAqB,GAAW;;;;;;wBAC5B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;wBAC7B,IAAI,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;4BACpB,WAAO,EAAE,EAAC;yBACb;wBAEK,UAAU,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,UAAC,KAAa,IAAc,OAAA,CAAC,CAAC,KAAK,EAAP,CAAO,CAAC,EAC3E,WAAW,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC;wBAE9B,WAAM,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,GAAG,CAAC,EAAA;4BAAzE,WAAO,SAAkE,EAAC;;;;KAC7E;IAEM,wCAAW,GAAlB;QACI,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC3C,CAAC;IAEO,2CAAc,GAAtB,UAAuB,IAAY;QAC/B,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;YAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACnC;QAED,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;YACxB,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACjC;QAED,IAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,UAAC,SAAiB,IAAK,OAAA,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAA7B,CAA6B,CAAC,CAAC;QAChH,IAAM,WAAW,GAAG,UAAU,CAAC,MAAM,CAAC;QAEtC,IAAI,WAAW,GAAG,CAAC,EAAE;YACjB,MAAM,IAAI,KAAK,CACX,oBAAoB,GAAG,IAAI,GAAG,mBAAmB,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAC/F,CAAC;SACL;QAED,IAAI,WAAW,KAAK,CAAC,EAAE;YACnB,MAAM,IAAI,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC,CAAC;SAC9C;QAED,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC;IAIL,yBAAC;AAAD,CAtDA,AAsDC,IAAA;AAY8B,qCAAO;;;;;ACjEtC,8BAAgC;AAEhC;IACI,mBAAoB,kBAAiC,EAAU,WAAwC;QAAnF,uBAAkB,GAAlB,kBAAkB,CAAe;QAAU,gBAAW,GAAX,WAAW,CAA6B;IAAG,CAAC;IAE3G,4BAAQ,GAAR,UAAS,GAAW;QAChB,IAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEhC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;YACvC,MAAM,CAAC,KAAK,EAAE,CAAC;SAClB;QAED,QAAQ,MAAM,CAAC,MAAM,EAAE;YACnB,KAAK,CAAC;gBACF,OAAO,IAAI,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;YAExE,KAAK,CAAC;gBACF,OAAO,IAAI,SAAS,CAAC,gBAAgB,CACjC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,UAAC,SAAiB,IAAK,OAAA,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAjC,CAAiC,CAAC,EACxF,MAAM,CAAC,CAAC,CAAC,CACZ,CAAC;YAEN;gBACI,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAEvC,OAAO,IAAI,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;SAC7E;IACL,CAAC;IAEO,iCAAa,GAArB,UAAsB,IAAY;QAC9B,IAAI,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAC/B,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EACjC,SAAwB,CAAC;QAE7B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACnB,OAAO,EAAE,CAAC;SACb;QAED,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;YAClF,OAAO,GAAG,IAAI,CAAC;YACf,QAAQ,GAAG,EAAE,CAAC;SACjB;QAED,IAAI;YACA,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAElD,OAAO,IAAI,CAAC,2BAA2B,CACnC,SAAS;iBACJ,MAAM,CAAC,UAAC,SAAiB,IAAK,OAAA,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAhC,CAAgC,CAAC;iBAC/D,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,EAA5B,CAA4B,CAAC,CAClD,CAAC;SACL;QAAC,OAAO,CAAC,EAAE,GAAE;QAEd,OAAO,EAAE,CAAC;IACd,CAAC;IAEO,+CAA2B,GAAnC,UAAoC,KAAoB;QAAxD,iBAUC;QATG,OAAO,KAAK,CAAC,GAAG,CAAC,UAAC,IAAY;YAC1B,IAAI;gBACA,OAAO,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,MAAmD;oBACxF,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC;oBACjC,CAAC,CAAC,IAAI,CAAC;aACd;YAAC,OAAO,CAAC,EAAE;gBACR,OAAO,IAAI,CAAC;aACf;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACL,gBAAC;AAAD,CAjEA,AAiEC,IAAA;AAQqB,4BAAO;AAN7B,WAAU,SAAS;IACf;QACI,0BAAmB,UAAyB,EAAS,KAAa;YAA/C,eAAU,GAAV,UAAU,CAAe;YAAS,UAAK,GAAL,KAAK,CAAQ;QAAG,CAAC;QAC1E,uBAAC;IAAD,CAFA,AAEC,IAAA;IAFY,0BAAgB,mBAE5B,CAAA;AACL,CAAC,EAJS,SAAS,KAAT,SAAS,QAIlB;AAEqB,4BAAO;;;;;;AC5E7B,2BAA6B;AAE7B,gDAA2C;AAC3C,uDAAkD;AAClD,2DAAsD;AAEtD,6CAAwC;AAGxC,kDAA6C;AAG7C;IAA0B,uCAAW;IACjC,qBAAsB,WAAwC;QAA9D,YACI,iBAAO,SAUV;QAXqB,iBAAW,GAAX,WAAW,CAA6B;QA4HpD,aAAO,GAAG,EAAE,CAAC;QACb,gBAAU,GAAG,IAAI,CAAC;QA1HxB,IAAM,GAAG,GAAG,IAAI,kBAAQ,EAAE,EACtB,kBAAkB,GAAG,IAAI,4BAAkB,EAAE,EAC7C,gBAAgB,GAAG,IAAI,0BAAgB,CAAC,GAAG,EAAE,KAAI,CAAC,WAAW,EAAE,kBAAkB,CAAC,CAAC;QAEvF,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACrB,KAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;QAC9C,KAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,KAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;;IAC9C,CAAC;IAEK,uCAAiB,GAAvB,UAAwB,QAAgB;;;;;;wBACpC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;;;;;;wBAGxB,KAAA,iBAAA,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;;;;wBAA9E,IAAI;wBACX,WAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAA;;wBAA1B,SAA0B,CAAC;;;;;;;;;;;;;;;;;;;wBAG/B,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;wBACxB,MAAM,GAAC,CAAC;;wBAGZ,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;;;;;KAC3B;IAED,6BAAO,GAAP;QACI,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,8BAAQ,GAAR,cAAkB,CAAC;IAEb,+BAAS,GAAf,UAAgB,KAAa;;;;;;;wBAErB,KAAA,IAAI,CAAC,WAAW,CAAA;wBAAC,WAAM,IAAI,CAAC,sBAAsB,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EAAA;;wBAAnE,SAAA,IAAI,GAAa,SAAkD,EAAC,CAAC;;;;wBAErE,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,GAAC,CAAC,OAAO,CAAC,CAAC;;;;;;KAE/C;IAED,+BAAS,GAAT;QACI,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAED,qCAAe,GAAf;QACI,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;IAC1B,CAAC;IAED,gCAAU,GAAV;QACI,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QAE5B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAElB,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,uCAAiB,GAAjB;QACI,OAAO,IAAI,CAAC,sBAAsB,EAAE,CAAC,WAAW,EAAE,CAAC;IACvD,CAAC;IAED,+BAAS,GAAT;QACI,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,2CAAqB,GAArB;QACI,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED,+BAAS,GAAT,UAAU,SAAkB;QACxB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;IAChC,CAAC;IAES,iCAAW,GAArB;QACI,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IAES,yCAAmB,GAA7B;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,eAAK,EAAE,CAAC;IAC9B,CAAC;IAES,+CAAyB,GAAnC;QAAA,iBAeC;QAdG,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC;YACtC,IAAI,EAAE;gBACF,KAAI,CAAC,KAAK,EAAE,CAAC;gBACb,OAAO,KAAK,CAAC;YACjB,CAAC;YACD,YAAY,EAAE,UAAO,IAAmB;;;;4BACpC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gCACd,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;6BACxC;4BAED,WAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAA;;4BAArC,SAAqC,CAAC;4BACtC,WAAO,iBAAiB,EAAC;;;iBAC5B;SACJ,CAAC,CAAC;IACP,CAAC;IAES,6BAAO,GAAjB;QACI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IAC3C,CAAC;IAES,2BAAK,GAAf;QACI,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;SACxC;IACL,CAAC;IAES,iCAAW,GAArB,UAAsB,IAAY;QAC9B,IAAI,CAAC,OAAO,IAAI,IAAI,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IACpD,CAAC;IAES,4CAAsB,GAAhC;QACI,OAAO,IAAI,CAAC,mBAAmB,CAAC;IACpC,CAAC;IAUL,kBAAC;AAAD,CAjIA,AAiIC,CAjIyB,qBAAW,GAiIpC;AAEuB,8BAAO;;;;;AC1I/B,kCAAoC;AACpC,2BAA6B;AAE7B,sBAAsB,KAAa;IAC/B,IAAI;QACA,OAAO,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KAC5B;IAAC,OAAO,CAAC,EAAE;QACR,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;YACzB,MAAM,IAAI,SAAS,CAAC,uBAAuB,GAAG,KAAK,CAAC,CAAC;SACxD;QAED,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;KACxB;AACL,CAAC;AAED;IACI,0BACY,SAAmB,EACnB,mBAAgD,EAChD,mBAAuC;QAHnD,iBA4BC;QA3BW,cAAS,GAAT,SAAS,CAAU;QACnB,wBAAmB,GAAnB,mBAAmB,CAA6B;QAChD,wBAAmB,GAAnB,mBAAmB,CAAoB;QAE/C,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC;YACtC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;YACzC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;YAC3B,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;YAC3B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;YACjC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;YACjC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;YAC7B,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;YAC3B,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;YAC7B,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;YAC3B,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;YACxC,KAAK,EAAE,cAAM,OAAA,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAlB,CAAkB;YAC/B,YAAY,EAAE,cAAM,OAAA,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAjB,CAAiB;YACrC,UAAU,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC9C,WAAW,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC;YAChD,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;YACrC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC9C,iBAAiB,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC;YACvD,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;YACxC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;YAC1C,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;SAChC,CAAC,CAAC;IACP,CAAC;IAED,uCAAY,GAAZ,UAAa,IAAiC;QAC1C,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;YAC7B,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;SACvC;QAED,IAAI,CAAC,IAAI,EAAE;YACP,OAAO,EAAE,CAAC;SACb;QAED,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC;QAExD,QAAQ,IAAI,CAAC,MAAM,EAAE;YACjB;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;YAEhD;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;YAErD;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;SACvD;IACL,CAAC;IAEO,uCAAY,GAApB,UAAqB,IAAmB;QACpC,QAAQ,IAAI,CAAC,MAAM,EAAE;YACjB,KAAK,CAAC;gBACF,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAEzC,KAAK,CAAC;gBACF,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE7D;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACzF;IACL,CAAC;IAEO,gCAAK,GAAb,UAAc,IAAmB;QAC7B,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SACrD;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CACxB,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAC/B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACxD,CAAC;IACN,CAAC;IAEO,gCAAK,GAAb,UAAc,IAAmB;QAC7B,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;SACvD;QAED,IAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,EAChB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,EAChD,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAC1D,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC3F,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;QAEvG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;QAEnE,OAAO,sBAAsB,GAAG,KAAK,GAAG,YAAY,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC/E,CAAC;IAEO,mCAAQ,GAAhB,UAAiB,IAAmB;QAChC,OAAO,IAAI,CAAC,GAAG,CAAC,UAAC,KAAa,IAAK,OAAA,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACpE,CAAC;IAEO,mCAAQ,GAAhB,UAAiB,IAAmB;QAChC,OAAO,IAAI,CAAC,GAAG,CAAC,UAAC,KAAa,IAAK,OAAA,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAjC,CAAiC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACpF,CAAC;IAEO,iCAAM,GAAd;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;IACtC,CAAC;IAEO,gCAAK,GAAb;QACI,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QACxC,IAAI,MAAM,GAAG,CAAC,CAAC;QAEf,IAAM,YAAY,GAAG,UAAC,KAAa,IAAK,OAAA,CAAC,MAAM,IAAI,KAAK,CAAC,EAAjB,CAAiB,CAAC;QAE1D,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAExC,IAAI,SAAgB,CAAC;QACrB,IAAI;YACA,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC;SACpC;QAAC,OAAO,CAAC,EAAE;YACR,SAAS,GAAG,CAAC,IAAI,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;SAC/D;QAED,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QAE3C,IAAI,SAAS,EAAE;YACX,MAAM,SAAS,CAAC;SACnB;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,8BAA8B,EAAE,MAAM,CAAC,CAAC;IAC/D,CAAC;IAEO,iCAAM,GAAd,UAAe,IAAa;QACxB,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAEtC,OAAO,kBAAkB,CAAC;IAC9B,CAAC;IAEO,gCAAK,GAAb,UAAc,IAAmB;QAC7B,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,EACxB,gBAAgB,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9D,0CAA6D,EAA3D,kBAAM,EAAE,wBAAS,EACnB,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAExC,OAAO,IAAI,CAAC,MAAM,CACd,+DAA+D,EAC/D,MAAM,EACN,SAAS,EACT,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,EACtB,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,EAC7B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAC1B,CAAC;IACN,CAAC;IAEO,iCAAM,GAAd;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;IACtC,CAAC;IAEO,6CAAkB,GAA1B;QACI,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QAC3C,OAAO,qBAAqB,CAAC;IACjC,CAAC;IAEO,8CAAmB,GAA3B;QACI,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;QAC5C,OAAO,sBAAsB,CAAC;IAClC,CAAC;IAEO,yCAAc,GAAtB,UAAuB,IAAmB;QACtC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SACrD;QAED,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EACxC,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAEpC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAE5C,OAAO,cAAc,GAAG,IAAI,GAAG,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACpE,CAAC;IAEO,2CAAgB,GAAxB,UAAyB,IAAmB;QACxC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;SACxC;QAED,IAAM,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAEtC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAExC,OAAO,wBAAwB,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IAC7D,CAAC;IAEO,2CAAgB,GAAxB;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC;IAC5C,CAAC;IAEO,+CAAoB,GAA5B;QACI,IAAI,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC;QAErC,OAAO,yBAAyB,CAAC;IACrC,CAAC;IAEO,uCAAY,GAApB;QACI,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAErC,OAAO,iBAAiB,CAAC;IAC7B,CAAC;IAEO,wCAAa,GAArB;QACI,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAEtC,OAAO,kBAAkB,CAAC;IAC9B,CAAC;IAEO,iCAAM,GAAd,UAAe,IAAmB;QAC9B,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC9E,CAAC;IAEO,qCAAU,GAAlB,UAAmB,IAAmB;QAClC,IAAM,eAAe,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC/D,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAE3B,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QAEzD,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,EAC/B,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAExC,OAAO,CACH,mBAAiB,MAAM,mBAAc,IAAI,YAAS;aAClD,YAAU,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,WAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAE,CAAA,CACpF,CAAC;IACN,CAAC;IACL,uBAAC;AAAD,CAvOA,AAuOC,IAAA;AAE4B,mCAAO;;;;;AC5PpC,yCAAoC;AAEpC;IACI,yBAAoB,IAAkB,EAAE,WAAmB,EAAE,OAAqC;QAArC,wBAAA,EAAA,YAAqC;QAAlG,iBAwBC;QAxBmB,SAAI,GAAJ,IAAI,CAAc;QAClC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,QAAQ,CACjC,UAAC,KAAa,EAAE,QAAwB,IAAW,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAA1B,CAA0B,EAC7E;YACI,SAAS,EAAE,QAAQ;YACnB,UAAU,EAAE,IAAI,CAAC,qBAAqB,EAAE;YACxC,IAAI,EAAE,KAAK;YACX,KAAK,EAAE,KAAK;SACf,CACJ,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;QAC9E,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;QAC1E,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAEvF,IAAI,OAAO,CAAC,eAAe,EAAE;YACzB,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,cAAY,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAArB,CAAqB,CAAC,CAAC;SACxE;QAED,IAAI,OAAO,CAAC,WAAW,EAAE;YACrB,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,cAAY,OAAA,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAtB,CAAsB,CAAC,CAAC;SACrE;IACL,CAAC;IAED,iCAAO,GAAP;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACrD,CAAC;IAEO,0CAAgB,GAAxB;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,mBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;IACtG,CAAC;IAEO,+CAAqB,GAA7B,UAA8B,OAAa,EAAE,GAAoB;QAC7D,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;IAC9C,CAAC;IAEO,6CAAmB,GAA3B,UAA4B,OAAa,EAAE,GAAoB;QAC3D,GAAG,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnD,CAAC;IAEO,+CAAqB,GAA7B;QACI,IAAM,EAAE,GAAG,IAAI,CAAC;QAEhB,OAAO,UAA+B,GAAW,EAAE,OAA4C;YAC3F,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC;QACnE,CAAC,CAAC;IACN,CAAC;IAIL,sBAAC;AAAD,CAtDA,AAsDC,IAAA;AAS2B,kCAAO;;;;;AClEnC,8BAAgC;AAEhC;IAAA;QAiCc,oBAAe,GAAkB,EAAE,CAAC;QACpC,SAAI,GAAG,GAAG,CAAC;IACzB,CAAC;IAlCG,0CAAK,GAAL,UAAM,IAAa;QACf,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAExC,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;YAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACpB;IACL,CAAC;IAED,yCAAI,GAAJ;QACI,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;YACnC,OAAO,SAAS,CAAC;SACpB;QAED,IAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;QAE/C,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAEtB,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,wCAAG,GAAH;QACI,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,0CAAK,GAAL,UAAM,IAAY;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAES,iDAAY,GAAtB,UAAuB,IAAY;QAC/B,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5C,CAAC;IAIL,iCAAC;AAAD,CAnCA,AAmCC,IAAA;AAEsC,6CAAO;;;;;;;ACvC9C,2BAA6B;AAC7B,2EAAsE;AAGtE;IAA4C,yDAA0B;IAClE,uCAAoB,KAAkD;QAAtE,YACI,iBAAO,SAEV;QAHmB,WAAK,GAAL,KAAK,CAA6C;QAElE,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC;;IACpB,CAAC;IAED,0DAAkB,GAAlB,UAAmB,IAAY;QAC3B,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAE/B,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAEnC,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;YAChC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC,CAAC;SACpE;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YAC3B,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,+BAA+B,EAAE,IAAI,CAAC,CAAC,CAAC;SACvE;QAED,OAAO,OAAO,CAAC;IACnB,CAAC;IAED,wDAAgB,GAAhB,UAAiB,IAAY;QACzB,IAAM,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAE7C,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,CAAC;IAED,mDAAW,GAAX,UAAY,IAAY;QACpB,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAE/B,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAEnC,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;YAChC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC,CAAC;SACpE;QAED,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YACzD,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,+BAA+B,EAAE,IAAI,CAAC,CAAC,CAAC;SACvE;QAED,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAED,mDAAW,GAAX,UAAY,IAAY;QACpB,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAE/B,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAEnC,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;YAChC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC,CAAC;SACpE;QAED,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YAC1B,SAAiD;SACpD;aAAM;YACH,SAAsD;SACzD;IACL,CAAC;IAEO,+CAAO,GAAf,UAAgB,IAAY;QACxB,IAAM,KAAK,GAAkB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EACxC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAE1B,IAAI,CAAS,EACT,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAEvB,IAAM,IAAI,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAE/B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC7B,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;gBACjB,SAAS;aACZ;iBAAM,IAAI,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;gBACvC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3B;iBAAM;gBACH,OAAO,SAAS,CAAC;aACpB;SACJ;QAED,IAAI,IAAI,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAE;YACzC,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC;SACpD;QAED,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IACtC,CAAC;IACL,oCAAC;AAAD,CArFA,AAqFC,CArF2C,oCAA0B,GAqFrE;AAQyC,gDAAO;;;;;;;ACjGjD,iDAA4C;AAC5C,mDAA8C;AAK9C,kCAAoC;AACpC,wCAA0C;AAC1C,2BAA6B;AAE7B;IACI,kBAAoB,UAAyB,EAAU,cAAyB;QAA5D,2BAAA,EAAA,iBAAyB;QAAU,+BAAA,EAAA,yBAAyB;QAA5D,eAAU,GAAV,UAAU,CAAe;QAAU,mBAAc,GAAd,cAAc,CAAW;QAwTxE,iBAAY,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC;QACvC,4BAAuB,GAAkB,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;QAC5D,wBAAmB,GAAG,KAAK,CAAC;QAE5B,kBAAa,GAAG,KAAK,CAAC;QACtB,WAAM,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC1C,iBAAY,GAAG,CAAC,CAAC;QACjB,gBAAW,GAAG,CAAC,CAAC;IA/T2D,CAAC;IAEpF,yBAAM,GAAN,UAAO,KAAqB;QACxB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,IAAI,sBAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEjD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QAErD,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QAErB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,yBAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC1D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAElD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,sCAAmB,GAAnB;QACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;YAC9B,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAC5B;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,gCAAa,GAAb,UAAc,OAAe,EAAE,WAAyB;QAAzB,4BAAA,EAAA,iBAAyB;QACpD,OAAO,IAAI,OAAO,CAAC;QAEnB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,GAAG,WAAW,CAAC;QAEpD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kCAAe,GAAf,UAAgB,OAAe;QAC3B,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;QAEzC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kCAAe,GAAf;QACI,IAAI,MAAM,GAAG,EAAE,CAAC;QAEhB,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,OAAO,EAAE,OAAO,EAAE,EAAE;YAChD,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;gBAC5B,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;aAC1F;SACJ;QAED,OAAO,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,4BAAS,GAAT,UAAU,KAAoC,EAAE,EAAU,EAAE,IAAgB,EAAE,EAA6B;QAA/C,qBAAA,EAAA,QAAgB;QAAE,mBAAA,EAAA,KAAa,KAAK,CAAC,MAAM,GAAG,CAAC;QACvG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;YACjC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAChC;IACL,CAAC;IAED,gCAAa,GAAb,UAAc,KAAa,EAAE,MAAc;QACvC,IAAI,CAAC,GAAG,CAAC,EACL,MAAM,GAAG,EAAE,EACX,WAAwB,EACxB,OAAe,CAAC;QAEpB,OAAO,CAAC,GAAG,MAAM,EAAE;YACf,OAAO,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC;YAEhC,WAAW,GAAG,qBAAW,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YACvD,MAAM;gBACF,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;oBAC9C,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;oBACtB,MAAM;oBACN,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC;oBACzC,IAAI,CAAC;YAET,CAAC,IAAI,WAAW,CAAC,OAAO,EAAE,CAAC;SAC9B;QAED,OAAO,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,8BAAW,GAAX,UAAY,MAAc;QACtB,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IACzD,CAAC;IAED,wBAAK,GAAL,UAAM,MAAgC;QAAhC,uBAAA,EAAA,SAAiB,IAAI,CAAC,UAAU;QAClC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAE7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7B,MAAM;gBACF,IAAI,CAAC,aAAa,CACd,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,EAChF,CAAC,CACJ,GAAG,IAAI,CAAC;SAChB;QAED,OAAO,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,yBAAM,GAAN,UAAO,KAAa,EAAE,MAAc;QAChC,IAAI,MAAM,GAAG,EAAE,EACX,OAAe,CAAC;QAEpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7B,OAAO,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC;YAEhC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;SACzF;QAED,OAAO,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,4BAAS,GAAT;QACI,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAE9B,QAAQ,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YAC9B,OAAsC;SACzC;QAED,IAAI,MAAM,GACN,EAAE;YACF,MAAM;YACN,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;YACtB,KAAK;YACL,MAAM;YACN,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;YACtB,KAAK;YACL,MAAM;YACN,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;YACtB,KAAK;YACL,MAAM;YACN,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;YACtB,KAAK;YACL,MAAM;YACN,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;YACtB,IAAI;YACJ,UAAU;YACV,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;YAC7B,IAAI;YACJ,SAAS;YACT,IAAI,CAAC,4BAA4B,EAAE,CAAC;QAExC,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC;QAEpD,IAAI,UAAU,EAAE;YACZ,MAAM,IAAI,IAAI,GAAG,IAAI,GAAG,UAAU,CAAC;SACtC;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,4BAAS,GAAT;QACI,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,uBAAI,GAAJ,UAAK,YAAoB;QACrB,IAAI,WAAW,GAAG,CAAC,EACf,MAAM,GAAG,CAAC,EACV,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAC7C,SAAS,GAAG,CAAC,CAAC;QAClB,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QAErC,IAAM,eAAe,GAAG,UAAC,CAAS,IAAK,OAAA,CAAC,SAAS,IAAI,CAAC,CAAC,EAAhB,CAAgB,CAAC;QACxD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;QAEjD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QAErB,OAAO,WAAW,GAAG,YAAY,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE;YAClF,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACd,MAAM,EAAE,CAAC;YAET,IAAI,kBAAkB,KAAK,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;gBACjD,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;gBAE9C,IAAI,kBAAkB,MAAsC,EAAE;oBAC1D,WAAW,EAAE,CAAC;iBACjB;aACJ;SACJ;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QAEtB,OAAO,EAAE,MAAM,QAAA,EAAE,SAAS,WAAA,EAAE,CAAC;IACjC,CAAC;IAED,4BAAS,GAAT,UAAU,MAAc;QACpB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QAErB,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEvD,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QAEtB,OAAO,UAAU,CAAC;IACtB,CAAC;IAED,wCAAqB,GAArB,UAAsB,kBAA2B;QAC7C,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;QAE9C,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAE/B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kCAAe,GAAf,UAAgB,YAAqB;QACjC,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAElC,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAE/B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,2BAAQ,GAAR;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,8BAAW,GAAX;QACI,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAEO,+CAA4B,GAApC;QACI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;YACpB,OAAO,QAAQ,CAAC;SACnB;QAED,QAAQ,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YAC9B;gBACI,OAAO,MAAM,CAAC;YAElB;gBACI,OAAO,OAAO,CAAC;YAEnB;gBACI,OAAO,SAAS,CAAC;SACxB;IACL,CAAC;IAEO,0CAAuB,GAA/B;QACI,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAChD,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,CAAC;YAC1E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;YAC7D,IAAI,CAAC,MAAM,CAAC,YAAY,GAAsC,CAAC;SAClE;aAAM;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;YAChE,IAAI,CAAC,MAAM,CAAC,YAAY,GAA+B,CAAC;SAC3D;IACL,CAAC;IAEO,mCAAgB,GAAxB,UAAyB,MAAc,EAAE,GAAa;QAClD,IAAM,sBAAsB,GAAG,GAAG,CAAC,IAAI,CAAC,yBAAyB,EAAE,CAAC;QAEpE,IACI,GAAG,CAAC,IAAI,CAAC,cAAc,MAAsC;YAC7D,sBAAsB,KAAK,GAAG,CAAC,uBAAuB,EACxD;YACE,OAAO;SACV;QAED,GAAG,CAAC,uBAAuB,GAAG,sBAAsB,CAAC;QAErD,IAAI,GAAG,CAAC,aAAa,EAAE;YACnB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,sBAAsB,CAAC;YACrD,GAAG,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC;YACzD,IAAI,GAAG,CAAC,YAAY,GAAG,GAAG,CAAC,UAAU,EAAE;gBACnC,GAAG,CAAC,YAAY,EAAE,CAAC;aACtB;SACJ;QAED,IAAI,GAAG,CAAC,mBAAmB,IAAI,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YAC/D,GAAG,CAAC,MAAM,CAAC,WAAW,IAElB,IAAI,CAAC,MAAM,CACP,uBAAuB,EACvB,GAAG,CAAC,uBAAuB,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,EACnD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAC/B,CACJ,CAAC;SACL;IACL,CAAC;IAEO,+BAAY,GAApB,UAAqB,IAAgC,EAAE,GAAa;QAChE,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC;IACzB,CAAC;IAEO,wBAAK,GAAb,UAAc,OAAe;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;IAC7C,CAAC;IAEO,wBAAK,GAAb,UAAc,OAAe,EAAE,KAAa;QACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC;IACpD,CAAC;IAkBL,eAAC;AAAD,CApUA,AAoUC,IAAA;AASoB,2BAAO;;;;;ACnT5B,IAAU,cAAc,CAgBvB;AAhBD,WAAU,cAAc;IAapB;QACI,qBAAmB,MAAkB,EAAS,KAAqB,EAAS,OAAgB;YAAzE,WAAM,GAAN,MAAM,CAAY;YAAS,UAAK,GAAL,KAAK,CAAgB;YAAS,YAAO,GAAP,OAAO,CAAS;QAAG,CAAC;QACpG,kBAAC;IAAD,CAFA,AAEC,IAAA;IAFY,0BAAW,cAEvB,CAAA;AACL,CAAC,EAhBS,cAAc,KAAd,cAAc,QAgBvB;AAE0B,iCAAO;;;;;ACtDlC,6CAAwC;AAExC,+CAA0C;AAS1C,+BAA+B,KAAyB,EAAE,GAAiB;IACvE,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAClC,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,KAAuB,CAAC,GAAG,GAAqB,CAAC;AAC9F,CAAC;AAED,oBAAoB,KAAyB,EAAE,OAAe;IAC1D,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,CAAC,CAAC;YAC9D,CAAC,OAAO,GAAG,IAAI,CAAC;YAChB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC,CAAC;AAC7C,CAAC;AAED,2BAA2B,KAAyB,EAAE,GAAiB,EAAE,MAAc;IACnF,IAAM,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC;IAE3B,IAAI,KAAK,CAAC,GAAG,EAAE;QACX,MAAM,GAAG,MAAM,CAAC;KACnB;IAED,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;IAE9B,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,EAAE,CAAC,UAAU,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACvD,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAClC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,EAAE,UAAU,GAAG,IAAI,CAAC,CAAC;IAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAElC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,EAAE,KAAK,CAAC,KAAK,GAAG,GAAqB,CAAC,CAAC;IACjE,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAElC,KAAK,CAAC,KAAK,KAAwB,CAAC;IAEpC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACnC,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB;IACvD,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;AAC1C,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB;IACvD,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;AAC1C,CAAC;AAED,gBAAgB,KAAyB,EAAE,GAAiB;IACxD,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACnC,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,IAAI,KAAK,CAAC,KAAK,IAAuB,EAAE;QACpC,IAAM,EAAE,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,EACjF,EAAE,GAAG,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE9D,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;QAEvC,KAAK,CAAC,KAAK;YACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;gBACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;gBAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;gBACpC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAsB,CAAC,CAAC,CAAC,CAAC,CAAC;KAC3C;SAAM;QACH,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,EAChE,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC;QAExB,KAAK,CAAC,KAAK;YACP,CAAC,KAAK,CAAC,KAAK;gBACR,CAAC,CAAC,OAA2C,IAAuB,KAAuB,CAAC,CAAC;gBACjG,CAAC,MAAM,GAAG,IAAI,CAAC;gBACf,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;gBACnC,CAAC,GAAG,KAAK,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAE/D,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;KACpB;AACL,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC;IACnB,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,kBAAkB,KAAyB;IACvC,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;IACpB,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAEhC,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACpC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AACpB,CAAC;AAED,kBAAkB,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC3E,IAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EACzB,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAC9B,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAE1B,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,GAAG,IAAI,CAAC;YACd,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YAClC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AACpB,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,QAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,OAAO,GAAG,CAAC,QAA2C,CAAC,CAAC;YACzD,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC,CAAC;AACvD,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB;IACvD,IAAM,UAAU,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;IAC1C,IAAI,MAAM,GAAG,MAAM,CAAC;IAEpB,IAAI,KAAK,CAAC,GAAG,EAAE;QACX,MAAM,GAAG,MAAM,CAAC;QAChB,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;KACrB;IAED,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;IAE9B,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,EAAE,CAAC,UAAU,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACvD,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAClC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,EAAE,UAAU,GAAG,IAAI,CAAC,CAAC;IAC/C,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAElC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,EAAE,KAAK,CAAC,KAAK,KAAuB,CAAC,CAAC;IAChE,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAElC,KAAK,CAAC,KAAK,KAAwB,CAAC;IAEpC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACnC,CAAC;AAED,eAAe,KAAyB;IACpC,KAAK,CAAC,KAAK,IAAI,EAAqB,CAAC;AACzC,CAAC;AAED,eAAe,KAAyB;IACpC,KAAK,CAAC,KAAK,IAAI,EAAqB,CAAC;AACzC,CAAC;AAED,eAAe,KAAyB;IACpC,KAAK,CAAC,KAAK,IAAI,EAAqB,CAAC;AACzC,CAAC;AAED,eAAe,KAAyB;IACpC,KAAK,CAAC,KAAK,IAAI,GAAqB,CAAC;AACzC,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAE7C,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,IAAI,GAAG,IAAI,CAAC;YACb,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACxC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;AACrB,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAE7C,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,IAAI,GAAG,IAAI,CAAC;YACb,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACxC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;AACrB,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAE7C,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,IAAI,GAAG,IAAI,CAAC;YACb,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACxC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;AACrB,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,IAAM,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC1B,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC7B,CAAC;AAED,eAAe,KAAyB;IACpC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAClC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC;IAC5B,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,eAAe,KAAyB;IACpC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAClC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,IAAM,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC1B,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC7B,CAAC;AAED,eAAe,KAAyB;IACpC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAClC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,eAAe,KAAyB;IACpC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAClC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC;AACtB,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,IAAM,SAAS,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,EACpC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAE/B,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3B,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,EAAE,SAAS,KAAK,CAAC,CAAC,CAAC;IAC7C,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAClC,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,EAAE,SAAS,GAAG,IAAI,CAAC,CAAC;IAC9C,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAElC,KAAK,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/D,CAAC;AAED,eACI,KAAyB,EACzB,GAAiB,EACjB,OAAe,EACf,cAA0C;IAE1C,KAAK,CAAC,CAAC,GAAG,cAAc,MAAyC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChG,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,eACI,KAAyB,EACzB,GAAiB,EACjB,OAAe,EACf,cAA0C;IAE1C,KAAK,CAAC,CAAC,GAAG,cAAc,MAAyC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChG,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,eACI,KAAyB,EACzB,GAAiB,EACjB,OAAe,EACf,cAA0C;IAE1C,KAAK,CAAC,CAAC,GAAG,cAAc,MAAyC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChG,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,kBAAkB,KAAyB;IACvC,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;IACpB,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;IAExB,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACpC,CAAC,GAAG,IAAuB,CAAC,CAAC;AACrC,CAAC;AAED,kBAAkB,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC3E,IAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EACzB,KAAK,GAAG,GAAG,KAAK,CAAC,CAAC;IACtB,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAE1B,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,GAAG,IAAI,CAAC;YACd,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YAClC,CAAC,GAAG,IAAuB,CAAC,CAAC;AACrC,CAAC;AAED,mBAAyB,CAAC;AAE1B,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC;IACnB,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB;IACvD,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,KAAuB,CAAC,CAAC;IAChE,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;AACtC,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB;IACvD,qBAAqB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACtC,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB;IACvD,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IACrC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;AACtC,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB;IACvD,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAClC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACrC,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,kBAAkB,KAAyB;IACvC,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;IACpB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,CAAC;IAEzE,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACpC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AACpB,CAAC;AAED,kBAAkB,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC3E,IAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EACzB,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,CAAC;IACvE,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAE1B,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,GAAG,IAAI,CAAC;YACd,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YAClC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AACpB,CAAC;AAED,kBAAkB,KAAyB;IACvC,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;IACpB,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,IAAI,CAAC,CAAC,CAAC;IAExE,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACpC,CAAC,GAAG,IAAuB,CAAC,CAAC;AACrC,CAAC;AAED,kBAAkB,KAAyB,EAAE,GAAiB,EAAE,OAAe;IAC3E,IAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EACzB,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,IAAI,CAAC,CAAC,CAAC;IACtE,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAE1B,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,GAAG,IAAI,CAAC;YACd,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YAClC,CAAC,GAAG,IAAuB,CAAC,CAAC;AACrC,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB;IACvD,IAAI,SAAiB,CAAC;IAEtB,qBAAqB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAElC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAC/B,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACvC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAC/B,SAAS,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAE7C,KAAK,CAAC,CAAC,GAAG,SAAS,CAAC;AACxB,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB;IACvD,IAAI,SAAiB,CAAC;IAEtB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3B,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAC/B,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACvC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAC/B,SAAS,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAE7C,KAAK,CAAC,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;AACvC,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,IAAI,KAAK,CAAC,KAAK,IAAuB,EAAE;QACpC,IAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,EAClF,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE9D,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;QAEnE,KAAK,CAAC,KAAK;YACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;gBACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;gBAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;gBACpC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC,CAAC;KAC3C;SAAM;QACH,OAAO,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;QAE1B,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,EAChE,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC;QAExB,KAAK,CAAC,KAAK;YACP,CAAC,KAAK,CAAC,KAAK;gBACR,CAAC,CAAC,OAA2C,IAAuB,KAAuB,CAAC,CAAC;gBACjG,CAAC,MAAM,GAAG,IAAI,CAAC;gBACf,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;gBACnC,CAAC,GAAG,KAAK,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAE/D,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;KACpB;AACL,CAAC;AAED,eAAe,KAAyB;IACpC,KAAK,CAAC,KAAK,KAAwB,CAAC;AACxC,CAAC;AAED,eAAe,KAAyB;IACpC,KAAK,CAAC,KAAK,KAAwB,CAAC;AACxC,CAAC;AAED,eAAe,KAAyB;IACpC,KAAK,CAAC,KAAK,KAAwB,CAAC;AACxC,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC;AAED,eAAe,KAAyB;IACpC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAClB,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,eAAe,KAAyB;IACpC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAClB,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,eAAe,KAAyB;IACpC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAClB,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,eAAe,KAAyB;IACpC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAClB,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,eAAe,KAAyB;IACpC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AACtB,CAAC;AAED,eAAe,KAAyB;IACpC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAClB,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC;IAC5B,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAElB,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACpC,CAAC,CAAC,IAAuB,CAAC,CAAC;AACnC,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,IAAM,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAE1D,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;IAEvB,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YAC3C,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;AACtB,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,IAAM,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;IAChD,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAE1B,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAE3C,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,CAAC,CAAC;YACrF,CAAC,IAAI,GAAG,IAAI,CAAC;YACb,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACxC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;AACrB,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC;IAClB,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC;IAClB,UAAU,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AAC/B,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAExF,KAAK,CAAC,KAAK;QACP,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAA2C,IAAuB,KAAuB,CAAC,CAAC;YAC5G,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAqB,CAAC;YACpC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;YAChB,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,IAAI,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9B,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,EAAqB,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;IACpE,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;IAEnB,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAE1B,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;IAC1B,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,IAAM,KAAK,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAChC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC1B,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC7B,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC;IAChD,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,IAAM,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7C,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAE1B,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AAC7B,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC;IACnB,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3B,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,EAAqB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACnF,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC;IACnB,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAClB,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,IAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EACzB,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,IAAI,CAAC,CAAC,CAAC;IACtE,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAE1B,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,EAAqB,CAAC,GAAG,CAAC,GAAG,IAAuB,CAAC,CAAC;IAEnF,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AAC7B,CAAC;AAED,eAAe,KAAyB,EAAE,GAAiB,EAAE,OAAe;IACxE,IAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EACzB,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,CAAC;IACvE,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAE1B,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,EAAqB,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAElE,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AAC7B,CAAC;AAED;IACI,aAAoB,IAAkB,EAAU,IAAmB;QAA/C,SAAI,GAAJ,IAAI,CAAc;QAAU,SAAI,GAAJ,IAAI,CAAe;QAquBnE,mBAAc,KAAiE;QAC/E,UAAK,GAAuB,IAAI,sBAAY,CAAC,KAAK,EAAE,CAAC;QAE7C,cAAS,GAAW,CAAC,CAAC;QACtB,yBAAoB,GAAiC,IAAI,CAAC;QAC1D,gCAA2B,GAAqD,IAAI,CAAC;QAErF,sBAAiB,GAAY,KAAK,CAAC;QACnC,gBAAW,GAAY,KAAK,CAAC;QAC7B,mBAAc,KAAmC;QAEjD,YAAO,GAAY,KAAK,CAAC;QAEzB,aAAQ,GAAW,CAAC,CAAC;QACrB,4BAAuB,GAAW,CAAC,CAAC;QACpC,2BAAsB,MAAkE;QAExF,iBAAY,GAAG,KAAK,CAAC;QArvBzB,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAED,0BAAY,GAAZ,UAAa,GAAY;QACrB,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC7B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,yBAAW,GAAX;QACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAClC,CAAC;IAED,iBAAG,GAAH;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kBAAI,GAAJ;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,oBAAM,GAAN;QACI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,oBAAM,GAAN;QACI,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,2CAA6B,GAA7B,UAA8B,QAA0D;QACpF,IAAI,CAAC,2BAA2B,GAAG,QAAQ,CAAC;QAC5C,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,2CAA6B,GAA7B;QACI,OAAO,IAAI,CAAC,2BAA2B,CAAC;IAC5C,CAAC;IAED,uCAAyB,GAAzB;QACI,OAAO,IAAI,CAAC,uBAAuB,CAAC;IACxC,CAAC;IAED,mBAAK,GAAL;QACI,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,KAAK,CAAC,KAAK;YACZ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAuB,KAAuB,KAAuB,CAAC;QAC/G,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;QAEvB,IAAI,CAAC,cAAc,IAAmC,CAAC;QACvD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC;QAEnC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,mBAAK,GAAL;QACI,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,OAAO,IAAI,CAAC;SACf;QAED,QAAQ,IAAI,CAAC,cAAc,EAAE;YACzB,OAAsC;YACtC;gBACI,IAAI,EAAE,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;oBACxB,IAAI,IAAI,CAAC,YAAY,EAAE;wBACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBACjD;oBAED,IAAI,IAAI,CAAC,cAAc,MAA4B,EAAE;wBACjD,IAAI,CAAC,mBAAmB,EAAE,CAAC;qBAC9B;oBAED,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;oBAC7F,IAAI,CAAC,cAAc,IAAoC,CAAC;oBAExD,IAAI,IAAI,CAAC,cAAc,MAAoC,EAAE;wBACzD,IAAI,CAAC,mBAAmB,EAAE,CAAC;qBAC9B;iBACJ;gBAED,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;oBAChB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;oBACxC,IAAI,CAAC,cAAc,IAA0B,CAAC;oBAC9C,IAAI,CAAC,cAAc,IAAsC,CAAC;oBAE1D,OAAO,IAAI,CAAC;iBACf;gBAED,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;oBAChB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;oBACxC,IAAI,CAAC,cAAc,IAA0B,CAAC;oBAC9C,IAAI,CAAC,cAAc,IAAsC,CAAC;oBAE1D,OAAO,IAAI,CAAC;iBACf;gBAED,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,MAAM;SACb;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,oBAAM,GAAd;QACI,IAAM,WAAW,GAAG,qBAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAEtE,IAAI,cAAc,GAAG,WAAW,CAAC,cAAc,EAC3C,WAAW,GAAG,KAAK,EACnB,iBAAiB,GAAG,KAAK,CAAC;QAE9B,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,sBAAsB,GAAG,cAAc,CAAC;QAC7C,IAAI,CAAC,cAAc,IAAkC,CAAC;QAEtD,QAAQ,WAAW,CAAC,SAAS,EAAE;YAC3B;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,cAAc,MAAuC,EAAE;oBACvD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC;iBACxC;qBAAM;oBACH,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC;oBACrC,iBAAiB,GAAG,IAAI,CAAC;iBAC5B;gBACD,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAuB,EAAE;oBACzC,cAAc,IAAqC,CAAC;oBACpD,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;oBAC3C,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;qBAAM;oBACH,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;gBACD,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAuB,EAAE;oBACzC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;qBAAM;oBACH,cAAc,IAAqC,CAAC;oBACpD,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;oBAC3C,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;gBACD,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAuB,EAAE;oBACzC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;qBAAM;oBACH,cAAc,IAAqC,CAAC;oBACpD,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;oBAC3C,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;gBACD,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,MAAuB,EAAE;oBACzC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;qBAAM;oBACH,cAAc,IAAqC,CAAC;oBACpD,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;oBAC3C,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;gBACD,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAuB,EAAE;oBACzC,cAAc,IAAqC,CAAC;oBACpD,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;oBAC3C,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;qBAAM;oBACH,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;gBACD,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,MAAuB,EAAE;oBACzC,cAAc,IAAqC,CAAC;oBACpD,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;oBAC3C,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;qBAAM;oBACH,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;gBACD,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,KAAuB,EAAE;oBACzC,cAAc,IAAqC,CAAC;oBACpD,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;oBAC3C,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;qBAAM;oBACH,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;gBACD,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,KAAuB,EAAE;oBACzC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;qBAAM;oBACH,cAAc,IAAqC,CAAC;oBACpD,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;oBAC3C,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;iBACtB;gBACD,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,IAAI,CAAC,cAAc,IAA0B,CAAC;gBAC9C,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,IAAI,CAAC,cAAc,IAA0B,CAAC;gBAC9C,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,iBAAiB,GAAG,IAAI,CAAC;gBACzB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,iBAAiB,GAAG,IAAI,CAAC;gBACzB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,cAAc,MAAyC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjF,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,cAAc,MAAyC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjF,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,cAAc,MAAyC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjF,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,cAAc,MAAuC,EAAE;oBACvD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC;iBACxC;qBAAM;oBACH,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC;oBACrC,iBAAiB,GAAG,IAAI,CAAC;iBAC5B;gBACD,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBAEnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV,QAA+B;YAC/B;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,WAAW,GAAG,IAAI,CAAC;gBAEnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,IAAI,CAAC,cAAc,IAA0B,CAAC;gBAC9C,MAAM;YAEV;gBACI,IAAI,cAAc,MAAuC,EAAE;oBACvD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC;iBACxC;qBAAM;oBACH,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC;oBACrC,iBAAiB,GAAG,IAAI,CAAC;iBAC5B;gBACD,MAAM;YAEV;gBACI,IAAI,cAAc,MAAuC,EAAE;oBACvD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC;iBACxC;qBAAM;oBACH,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACnB,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC;oBACrC,iBAAiB,GAAG,IAAI,CAAC;iBAC5B;gBACD,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,IAAI,CAAC,cAAc,IAA0B,CAAC;gBAC9C,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,iBAAiB,GAAG,IAAI,CAAC;gBACzB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,iBAAiB,GAAG,IAAI,CAAC;gBACzB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,iBAAiB,GAAG,IAAI,CAAC;gBACzB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,iBAAiB,GAAG,IAAI,CAAC;gBACzB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,iBAAiB,GAAG,IAAI,CAAC;gBACzB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,WAAW,GAAG,IAAI,CAAC;gBACnB,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,WAAW,GAAG,KAAK,CAAC;gBACpB,iBAAiB,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,WAAW,GAAG,KAAK,CAAC;gBACpB,iBAAiB,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,MAAM;YAEV;gBACI,IAAI,IAAI,CAAC,2BAA2B,EAAE;oBAClC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC;iBAC1C;gBACD,OAAO;SACd;QAED,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;QAE3C,IAAI,KAAa,EAAE,IAAY,CAAC;QAEhC,QAAQ,cAAc,EAAE;YACpB;gBACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC7C,WAAW,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,MAAM;YAEV;gBACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC7C,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,MAAM;YAEV;gBACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACjD,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;gBACpB,MAAM;YAEV;gBACI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE;oBACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;iBACjF;qBAAM;oBACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;iBAC7C;gBACD,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;gBACpB,MAAM;YAEV;gBACI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACrC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBACtD,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,OAAO,CAAC,GAAG,MAAM,CAAC;gBAC1D,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/E,MAAM;YAEV;gBACI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAErB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;gBAC7C,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;gBACpB,MAAM;YAEV;gBACI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;gBAEhD,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,EAAE;oBAC/C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;iBAC7D;gBAED,IAAI,CAAC,SAAS,IAAI,iBAAiB,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7F,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,MAAM;YAEV;gBACI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAErB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;gBAC7C,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;gBACpB,MAAM;YAEV;gBACI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;gBAEhD,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,EAAE;oBAC/C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;iBAC7D;gBAED,IAAI,CAAC,SAAS,IAAI,iBAAiB,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7F,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,MAAM;YAEV;gBACI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAErB,KAAK,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;gBAErC,IAAI,KAAK,KAAK,IAAI,EAAE;oBAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;iBACtE;qBAAM;oBACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;iBAC7C;gBAED,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;gBACpB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,MAAM;YAEV;gBACI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAErC,IAAI,KAAK,KAAK,IAAI,EAAE;oBAChB,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;iBAC9D;qBAAM;oBACH,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;iBACrC;gBAED,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;gBAEhD,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,EAAE;oBAC/C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;iBAC7D;gBAED,IAAI,CAAC,SAAS,IAAI,iBAAiB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7F,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;gBAC3C,MAAM;SACb;QAED,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,WAAW,EAAE;YACb,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;QAED,IAAI,CAAC,cAAc,IAAsC,CAAC;IAC9D,CAAC;IAEO,iCAAmB,GAA3B;QACI,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SAC5B;QAED,IAAI,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAuB,CAAC,EAAE;YACzF,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;SACzB;IACL,CAAC;IAoBL,UAAC;AAAD,CAxvBA,AAwvBC,IAAA;AAWe,sBAAO;;;;;ACxzCvB,IAAU,YAAY,CAiCrB;AAjCD,WAAU,YAAY;IAOlB;QAAA;YACI,MAAC,GAAW,CAAC,CAAC;YACd,MAAC,GAAW,CAAC,CAAC;YACd,MAAC,GAAW,CAAC,CAAC;YACd,MAAC,GAAW,CAAC,CAAC;YACd,MAAC,GAAW,CAAC,CAAC;YACd,UAAK,GAAW,CAAC,CAAC;YAElB,QAAG,GAAG,KAAK,CAAC;YACZ,QAAG,GAAG,KAAK,CAAC;QAChB,CAAC;QAAD,YAAC;IAAD,CAVA,AAUC,IAAA;IAVY,kBAAK,QAUjB,CAAA;AAgBL,CAAC,EAjCS,YAAY,KAAZ,YAAY,QAiCrB;AAEwB,+BAAO;;;;;AC9DhC,6CAAwC;AAGxC,qCAAuC;AAEvC;IACI,sBAAoB,IAAmB;QAAnB,SAAI,GAAJ,IAAI,CAAe;IAAG,CAAC;IAE3C,6BAAM,GAAN,UAAO,GAAiB;QACpB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,6BAAM,GAAN;QACI,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,oCAAa,GAAb,UAAc,OAAe;QAA7B,iBA0DC;QAzDG,IAAM,WAAW,GAAG,qBAAW,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EACxD,SAAS,GAAG,qBAAW,CAAC,YAAY,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,CAAC;QAE9E,IAAM,KAAK,GAAG,UAAC,CAAuB;YAAvB,kBAAA,EAAA,IAAY,OAAO,GAAG,CAAC;YAAK,OAAA,GAAG,CAAC,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAA5B,CAA4B,CAAC;QAExE,IAAM,MAAM,GAAG,UAAC,CAAuB;YAAvB,kBAAA,EAAA,IAAY,OAAO,GAAG,CAAC;YAAK,OAAA,GAAG,CAAC,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;QAAvD,CAAuD,CAAC;QAEpG,IAAM,WAAW,GAAG,UAAC,KAAa,IAAK,OAAA,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAA/C,CAA+C,CAAC;QAEvF,QAAQ,WAAW,CAAC,uBAAuB,EAAE;YACzC;gBACI,OAAO,SAAS,CAAC;YAErB;gBACI,OAAO,SAAS,GAAG,IAAI,GAAG,KAAK,EAAE,CAAC;YAEtC;gBACI,OAAO,SAAS,GAAG,GAAG,GAAG,KAAK,EAAE,CAAC;YAErC;gBACI,OAAO,SAAS,GAAG,GAAG,GAAG,MAAM,EAAE,CAAC;YAEtC;gBACI,OAAO,SAAS,GAAG,IAAI,GAAG,MAAM,EAAE,GAAG,GAAG,CAAC;YAE7C;gBACI,IAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;gBAEtD,OAAO,CACH,SAAS;oBACT,GAAG;oBACH,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACvB,QAAQ;oBACR,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,GAAG,OAAO,GAAG,QAAQ,CAAC,GAAG,OAAO,EAAE,CAAC,CAAC,CAC1D,CAAC;YAEN;gBACI,OAAO,SAAS,GAAG,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;YAE5C;gBACI,OAAO,SAAS,GAAG,GAAG,GAAG,MAAM,EAAE,GAAG,IAAI,CAAC;YAE7C;gBACI,OAAO,SAAS,GAAG,IAAI,GAAG,KAAK,EAAE,GAAG,KAAK,CAAC;YAE9C;gBACI,OAAO,SAAS,GAAG,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;YAE5C;gBACI,OAAO,SAAS,GAAG,GAAG,GAAG,MAAM,EAAE,GAAG,IAAI,CAAC;YAE7C;gBACI,OAAO,SAAS,GAAG,IAAI,GAAG,KAAK,EAAE,GAAG,KAAK,CAAC;YAE9C;gBACI,OAAO,SAAS,CAAC;SACxB;IACL,CAAC;IAEO,4BAAK,GAAb,UAAc,OAAe;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;IAC7C,CAAC;IACL,mBAAC;AAAD,CA3EA,AA2EC,IAAA;AAEwB,+BAAO;;;;;AClFhC;IACI,qBACoB,SAAgC,EAChC,cAA0C,EAC1C,uBAAwC;QAAxC,wCAAA,EAAA,wCAAwC;QAFxC,cAAS,GAAT,SAAS,CAAuB;QAChC,mBAAc,GAAd,cAAc,CAA4B;QAC1C,4BAAuB,GAAvB,uBAAuB,CAAiB;IACzD,CAAC;IAEJ,6BAAO,GAAP;QACI,QAAQ,IAAI,CAAC,uBAAuB,EAAE;YAClC,OAA0C;YAC1C,OAAyC;YACzC,OAA0C;YAC1C,OAA0C;YAC1C,OAAiD;YACjD,QAAiD;YACjD;gBACI,OAAO,CAAC,CAAC;YAEb,OAAyC;YACzC,OAA0C;YAC1C,QAA0C;YAC1C;gBACI,OAAO,CAAC,CAAC;YAEb;gBACI,OAAO,CAAC,CAAC;SAChB;IACL,CAAC;IACL,kBAAC;AAAD,CA5BA,AA4BC,IAAA;AA8KuB,8BAAO;AA5K/B,WAAU,WAAW;IA6EjB,IAAY,YA0EX;IA1ED,WAAY,YAAY;QACpB,6CAAG,CAAA;QACH,6CAAG,CAAA;QACH,6CAAG,CAAA;QACH,6CAAG,CAAA;QACH,6CAAG,CAAA;QACH,6CAAG,CAAA;QACH,6CAAG,CAAA;QACH,6CAAG,CAAA;QACH,6CAAG,CAAA;QACH,6CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QAEH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,8CAAG,CAAA;QACH,sDAAO,CAAA;IACX,CAAC,EA1EW,YAAY,GAAZ,wBAAY,KAAZ,wBAAY,QA0EvB;IAkBY,mBAAO,GAAG,IAAI,KAAK,CAAc,GAAG,CAAC,CAAC;AACvD,CAAC,EA1KS,WAAW,KAAX,WAAW,QA0KpB;AAEuB,8BAAO;AAI/B,WAAU,WAAW;IACjB,IAAiB,MAAM,CA+RtB;IA/RD,WAAiB,MAAM;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1B,YAAA,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,WAAW,QAA2C,CAAC;SAC3E;QAED,IAAI,SAAoB,EAAE,cAA8B,EAAE,MAAc,CAAC;QAEzE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACxB,QAAQ,CAAC,EAAE;gBACP,KAAK,CAAC;oBACF,SAAS,KAAgB,CAAC;oBAC1B,MAAM;gBACV,KAAK,CAAC;oBACF,SAAS,IAAgB,CAAC;oBAC1B,MAAM;gBACV,KAAK,CAAC;oBACF,SAAS,KAAgB,CAAC;oBAC1B,MAAM;gBACV,KAAK,CAAC;oBACF,SAAS,IAAgB,CAAC;oBAC1B,MAAM;gBACV,KAAK,CAAC;oBACF,SAAS,KAAgB,CAAC;oBAC1B,MAAM;gBACV,KAAK,CAAC;oBACF,SAAS,KAAgB,CAAC;oBAC1B,MAAM;gBACV,KAAK,CAAC;oBACF,SAAS,KAAgB,CAAC;oBAC1B,MAAM;gBACV,KAAK,CAAC;oBACF,SAAS,KAAgB,CAAC;oBAC1B,MAAM;aACb;YACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACxB,QAAQ,CAAC,EAAE;oBACP,KAAK,CAAC;wBACF,cAAc,IAAkC,CAAC;wBACjD,MAAM;oBACV,KAAK,CAAC;wBACF,cAAc,IAA0B,CAAC;wBACzC,MAAM;oBACV,KAAK,CAAC;wBACF,cAAc,IAA2B,CAAC;wBAC1C,MAAM;oBACV,KAAK,CAAC;wBACF,cAAc,IAA0B,CAAC;wBACzC,MAAM;oBACV,KAAK,CAAC;wBACF,cAAc,KAAkC,CAAC;wBACjD,MAAM;oBACV,KAAK,CAAC;wBACF,cAAc,IAA2B,CAAC;wBAC1C,MAAM;oBACV,KAAK,CAAC;wBACF,cAAc,KAA2B,CAAC;wBAC1C,MAAM;oBACV,KAAK,CAAC;wBACF,cAAc,IAA2B,CAAC;wBAC1C,MAAM;iBACb;gBAED,IAAI,SAAS,OAAkB,IAAI,cAAc,MAA6B,EAAE;oBAC5E,cAAc,KAAyB,CAAC;iBAC3C;gBAED,IAAI,SAAS,OAAsB,IAAI,cAAc,OAA2B,EAAE;oBAC9E,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;oBACjC,YAAA,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;iBAChE;aACJ;SACJ;QAED,aACI,OAAe,EACf,UAAqB,EACrB,eAA+B,EAC/B,uBAAwC;YAExC,IAAI,YAAA,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,OAAsB,EAAE;gBAClD,MAAM,IAAI,KAAK,CAAC,mBAAmB,GAAG,OAAO,GAAG,iBAAiB,CAAC,CAAC;aACtE;YAED,YAAA,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,WAAW,CAAC,UAAU,EAAE,eAAe,EAAE,uBAAuB,CAAC,CAAC;QAC7F,CAAC;QAED,GAAG,CAAC,IAAI,OAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,OAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,OAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,OAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,OAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,SAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,OAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,OAAyC,CAAC;QAElD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAElD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAElD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAElD,GAAG,CAAC,IAAI,OAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,OAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,OAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,OAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,OAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,OAAyC,CAAC;QAElD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,WAAiE,CAAC;QAC1E,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QAGjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QACjD,GAAG,CAAC,IAAI,QAAwC,CAAC;QAEjD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,SAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAiD,CAAC;QAC1D,GAAG,CAAC,IAAI,SAAiD,CAAC;QAE1D,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,SAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAiD,CAAC;QAC1D,GAAG,CAAC,IAAI,SAAiD,CAAC;QAE1D,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,SAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAiD,CAAC;QAC1D,GAAG,CAAC,IAAI,SAAiD,CAAC;QAE1D,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAiD,CAAC;QAC1D,GAAG,CAAC,IAAI,QAAyC,CAAC;QAElD,GAAG,CAAC,IAAI,SAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,SAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAiD,CAAC;QAC1D,GAAG,CAAC,IAAI,SAAiD,CAAC;QAE1D,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAA0C,CAAC;QAEnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,SAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAiD,CAAC;QAC1D,GAAG,CAAC,IAAI,SAAiD,CAAC;QAE1D,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAyC,CAAC;QAClD,GAAG,CAAC,IAAI,QAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,SAA0C,CAAC;QACnD,GAAG,CAAC,IAAI,QAAiD,CAAC;QAC1D,GAAG,CAAC,IAAI,SAAiD,CAAC;IAC9D,CAAC,EA/RgB,MAAM,GAAN,kBAAM,KAAN,kBAAM,QA+RtB;AACL,CAAC,EAjSS,WAAW,KAAX,WAAW,QAiSpB;AArSuB,8BAAO;;;;;AC1M/B,+CAAsC;AAEtC,0DAAqD;AAErD,kCAA6B;AAC7B,mCAA8B;AAM9B;IACI,eAAY,UAAgD;QAA5D,iBAWC;QAoID,UAAK,GAAG,IAAI,qBAAK,EAAU,CAAC;QAI5B,SAAI,GAAG,IAAI,qBAAK,EAA8B,CAAC;QAIrC,UAAK,GAAG,KAAK,CAAC;QAGd,eAAU,KAAiC;QAE3C,WAAM,GAAG;YACf,IAAI,EAAE,UAAC,MAAc,IAAa,OAAA,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAlB,CAAkB;YACpD,KAAK,EAAE,UAAC,SAA6B,EAAE,SAAkB,IAAW,OAAA,KAAI,CAAC,MAAM,CAAC,SAAS,EAAE,SAAS,CAAC,EAAjC,CAAiC;YACrG,IAAI,EAAE,cAAY,OAAA,KAAI,CAAC,KAAK,EAAE,EAAZ,CAAY;YAC9B,SAAS,EAAE,cAAe,OAAA,CAAC,CAAC,KAAI,CAAC,QAAQ,EAAf,CAAe;SAC5C,CAAC;QAhKE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;QAE3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAE9B,IAAI,OAAO,UAAU,KAAK,WAAW,EAAE;YACnC,UAAU,GAAG,UAAA,GAAG,IAAI,OAAA,IAAI,aAAG,CAAC,GAAG,CAAC,EAAZ,CAAY,CAAC;SACpC;QAED,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,6BAA6B,CAAC,cAAM,OAAA,KAAI,CAAC,qBAAqB,EAAE,EAA5B,CAA4B,CAAC,CAAC;IAChF,CAAC;IAED,sBAAM,GAAN;QACI,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,sBAAM,GAAN;QACI,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,wBAAQ,GAAR;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,qBAAK,GAAL,UAAM,IAAa;QACf,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAElB,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;SACrB;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,oBAAI,GAAJ;QACI,IAAI,KAAK,GAAG,CAAC,CAAC;QAEd,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,MAAqC,EAAE;YAC/D,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;SACtC;QAED,OAAQ,IAAI,CAAC,IAAI,CAAC,cAA8C,MAAsC,EAAE;YACpG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAClB,KAAK,EAAE,CAAC;SACX;QAED,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,uBAAO,GAAP,cAAiB,CAAC;IAElB,sBAAM,GAAN,cAAgB,CAAC;IAEjB,2BAAW,GAAX,UAAY,MAAiC,EAAE,OAAgB;QAC3D,IAAI,CAAC,KAAK,EAAE,CAAC;QAEb,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACvB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,wBAAc,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;SAC7E;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;SAC5B;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,kCAAkB,GAAlB;QACI,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,4BAAY,GAAZ,UAAa,SAAmC;QAC5C,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAE5B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,4BAAY,GAAZ;QACI,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAES,0BAAU,GAApB;QACI,OAAO,IAAI,gBAAM,EAAE,CAAC;IACxB,CAAC;IAES,qBAAK,GAAf,UAAgB,MAAc;QAC1B,IAAI,CAAC,GAAG,CAAC,EACL,KAAK,GAAG,CAAC,CAAC;QAEd,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,OAAO,CAAC,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YAChC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAClB,KAAK,EAAE,CAAC;YAER,IACI,IAAI,CAAC,UAAU,MAAyC;gBACxD,IAAI,CAAC,IAAI,CAAC,cAAc,MAAsC;gBAC9D,IAAI,CAAC,KAAK,CAAC,WAAW,EACxB;gBACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC3B,KAAK,GAAG,CAAC,CAAC;aACb;SACJ;QAED,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;YACrC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAC9B;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAES,sBAAM,GAAhB,UAAiB,SAA6B,EAAE,SAAkB;QAAlB,0BAAA,EAAA,kBAAkB;QAC9D,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,OAAO;SACV;QAED,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAE5B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IAC9D,CAAC;IAES,6BAAa,GAAvB,UAAwB,KAAY;QAChC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IAClC,CAAC;IAES,qBAAK,GAAf;QACI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,OAAO;SACV;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QAErB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;IAC9B,CAAC;IAES,qCAAqB,GAA/B;QACI,IAAI,CAAC,WAAW,IAAgC,qBAAqB,CAAC,CAAC;IAC3E,CAAC;IAqBL,YAAC;AAAD,CAnKA,AAmKC,IAAA;AAEiB,wBAAO;;;;;AC9KzB;IACI;QAgCU,UAAK,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC;QA/BtC,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAED,sBAAK,GAAL,cAAe,CAAC;IAEhB,sBAAK,GAAL;QACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;YAC9B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACrB;IACL,CAAC;IAED,qBAAI,GAAJ,UAAK,OAAe;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;IAED,qBAAI,GAAJ,UAAK,OAAe;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;IAED,yBAAQ,GAAR,UAAS,OAAe;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,sBAAK,GAAL,UAAM,OAAe,EAAE,KAAa;QAChC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,qBAAI,GAAJ,UAAK,OAAe,EAAE,KAAa;QAC/B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;IAChC,CAAC;IAGL,aAAC;AAAD,CAlCA,AAkCC,IAAA;AAEkB,yBAAO;;;;;ACtC1B,gBAAuB,KAAa,EAAE,KAAc;IAChD,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAEzC,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;QAC9B,OAAO,MAAM,CAAC,MAAM,GAAG,KAAK,EAAE;YAC1B,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC;SACzB;KACJ;IAED,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC;AAClD,CAAC;AAVD,wBAUC;;;;;ACVD,0BAA0B,KAAa,EAAE,KAAc,EAAE,MAAa,EAAE,MAAW;IAA1B,uBAAA,EAAA,aAAa;IAAE,uBAAA,EAAA,WAAW;IAC/E,IAAI,CAAC,MAAM,IAAI,KAAK,GAAG,CAAC,EAAE;QACtB,OAAO,CACH,gBAAgB,CAAC,KAAK,KAAK,EAAE,EAAE,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC;YACjF,gBAAgB,CAAC,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,CACtC,CAAC;KACL;IAED,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;SACvB,QAAQ,CAAC,EAAE,CAAC;SACZ,WAAW,EAAE,CAAC;IAEnB,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;QAC9B,OAAO,MAAM,CAAC,MAAM,GAAG,KAAK,EAAE;YAC1B,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC;SACzB;KACJ;IAED,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC;AACpD,CAAC;AAED,gBAAuB,KAAa,EAAE,KAAc,EAAE,MAAa;IAAb,uBAAA,EAAA,aAAa;IAC/D,OAAO,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;AACvD,CAAC;AAFD,wBAEC;AAED,gBAAuB,KAAa;IAChC,IAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAExC,IAAI,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;IAErD,IAAI,QAAQ,CAAC,KAAK,CAAC,eAAe,CAAC,EAAE;QACjC,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;KAC1C;SAAM,IAAI,QAAQ,CAAC,KAAK,CAAC,eAAe,CAAC,EAAE;QACxC,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;KAC1C;SAAM;QACH,MAAM,IAAI,SAAS,CAAC,qBAAqB,GAAG,KAAK,CAAC,CAAC;KACtD;IAED,OAAO,IAAI,GAAG,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;AACzC,CAAC;AAdD,wBAcC;;;;;ACvCD,kDAA6C;AAC7C,0DAAqD;AACrD,qFAAgF;AAEhF,aACI,QAAqD,EACrD,WAAmB,EACnB,eAAuB,EACvB,WAAmB;IAEnB,IAAM,UAAU,GAAG,IAAI,uCAA6B,CAAC,QAAQ,CAAC,EAC1D,GAAG,GAAG,IAAI,qBAAW,CAAC,UAAU,CAAC,EACjC,MAAM,GAAG,IAAI,yBAAe,CAAC,GAAG,EAAE,WAAW,EAAE;QAC3C,eAAe,iBAAA;QACf,WAAW,aAAA;KACd,CAAC,CAAC;IAEP,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACrB,MAAM,CAAC,OAAO,EAAE,CAAC;AACrB,CAAC;AAfD,kBAeC",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n",
    "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  get: function () {\n    if (!(this instanceof Buffer)) {\n      return undefined\n    }\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  get: function () {\n    if (!(this instanceof Buffer)) {\n      return undefined\n    }\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('Invalid typed array length')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value) || (value && isArrayBuffer(value.buffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return fromObject(value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if (ArrayBuffer.isView(obj) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0)\n      }\n      return fromArrayLike(obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data)\n    }\n  }\n\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (ArrayBuffer.isView(buf)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isArrayBuffer(string)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check\n// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166\nfunction isArrayBuffer (obj) {\n  return obj instanceof ArrayBuffer ||\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\n      typeof obj.byteLength === 'number')\n}\n\nfunction numberIsNaN (obj) {\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n",
    "exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n",
    "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n",
    "\"use strict\";\nvar factories = [];\nfactories[0] = function () {\n    return function dispatcher0() { };\n};\nfactories[1] = function (callback, context) {\n    if (typeof (context) === 'undefined')\n        return callback;\n    return function dispatcher1(payload) {\n        callback(payload, context);\n    };\n};\nfunction getFactory(handlerCount) {\n    if (!factories[handlerCount])\n        factories[handlerCount] = compileFactory(handlerCount);\n    return factories[handlerCount];\n}\nfunction compileFactory(handlerCount) {\n    var src = 'return function dispatcher' + handlerCount + '(payload) {\\n';\n    var argsHandlers = [], argsContexts = [];\n    for (var i = 0; i < handlerCount; i++) {\n        argsHandlers.push('cb' + i);\n        argsContexts.push('ctx' + i);\n        src += '    cb' + i + '(payload, ctx' + i + ');\\n';\n    }\n    src += '};';\n    return new (Function.bind.apply(Function, [void 0].concat(argsHandlers.concat(argsContexts), [src])))();\n}\nvar Event = (function () {\n    function Event() {\n        this.hasHandlers = false;\n        this._handlers = [];\n        this._contexts = [];\n        this._createDispatcher();\n    }\n    Event.prototype.addHandler = function (handler, context) {\n        if (!this.isHandlerAttached(handler, context)) {\n            this._handlers.push(handler);\n            this._contexts.push(context);\n            this._createDispatcher();\n            this._updateHasHandlers();\n        }\n        return this;\n    };\n    Event.prototype.removeHandler = function (handler, context) {\n        var idx = this._getHandlerIndex(handler, context);\n        if (typeof (idx) !== 'undefined') {\n            this._handlers.splice(idx, 1);\n            this._contexts.splice(idx, 1);\n            this._createDispatcher();\n            this._updateHasHandlers();\n        }\n        return this;\n    };\n    Event.prototype.isHandlerAttached = function (handler, context) {\n        return typeof (this._getHandlerIndex(handler, context)) !== 'undefined';\n    };\n    Event.prototype._updateHasHandlers = function () {\n        this.hasHandlers = !!this._handlers.length;\n    };\n    Event.prototype._getHandlerIndex = function (handler, context) {\n        var handlerCount = this._handlers.length;\n        var idx;\n        for (idx = 0; idx < handlerCount; idx++) {\n            if (this._handlers[idx] === handler && this._contexts[idx] === context)\n                break;\n        }\n        return idx < handlerCount ? idx : undefined;\n    };\n    Event.prototype._createDispatcher = function () {\n        this.dispatch = getFactory(this._handlers.length).apply(this, this._handlers.concat(this._contexts));\n    };\n    return Event;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Event;\n",
    "\"use strict\";\nvar Event_1 = require('./Event');\nexports.Event = Event_1.default;\n",
    "// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n",
    "// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result[\"default\"] = mod;\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n});\r\n",
    "module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}",
    "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nabstract class AbstractCLI {\n    events: AbstractCLI.Events = {\n        outputAvailable: new Event<void>(),\n        quit: new Event<void>(),\n        promptChanged: new Event<void>(),\n        prompt: new Event<void>(),\n        availableCommandsChanged: new Event<void>()\n    };\n}\n\nnamespace AbstractCLI {\n    export interface Events {\n        outputAvailable: Event<void>;\n\n        quit: Event<void>;\n\n        promptChanged: Event<void>;\n\n        prompt: Event<void>;\n\n        availableCommandsChanged: Event<void>;\n    }\n}\n\nexport { AbstractCLI as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nclass CommandInterpreter {\n    constructor(commandTable?: CommandInterpreter.CommandTableInterface) {\n        if (typeof commandTable !== 'undefined') {\n            this.registerCommands(commandTable);\n        }\n    }\n\n    public registerCommands(commandTable: CommandInterpreter.CommandTableInterface) {\n        Object.keys(commandTable).forEach((command: string) => (this._commandTable[command] = commandTable[command]));\n    }\n\n    public async execute(cmd: string): Promise<string> {\n        cmd = cmd.replace(/;.*/, '');\n        if (cmd.match(/^\\s*$/)) {\n            return '';\n        }\n\n        const components = cmd.split(/\\s+/).filter((value: string): boolean => !!value),\n            commandName = components.shift();\n\n        return await this._locateCommand(commandName).call(this, components, cmd);\n    }\n\n    public getCommands(): Array<string> {\n        return Object.keys(this._commandTable);\n    }\n\n    private _locateCommand(name: string): CommandInterpreter.CommandInterface {\n        if (this._commandTable[name]) {\n            return this._commandTable[name];\n        }\n\n        if (this._aliasTable[name]) {\n            return this._aliasTable[name];\n        }\n\n        const candidates = Object.keys(this._commandTable).filter((candidate: string) => candidate.indexOf(name) === 0);\n        const nCandidates = candidates.length;\n\n        if (nCandidates > 1) {\n            throw new Error(\n                'ambiguous command ' + name + ', candidates are ' + candidates.join(', ').replace(/, $/, '')\n            );\n        }\n\n        if (nCandidates === 0) {\n            throw new Error('invalid command ' + name);\n        }\n\n        return (this._aliasTable[name] = this._commandTable[candidates[0]]);\n    }\n\n    private _commandTable: CommandInterpreter.CommandTableInterface = {};\n    private _aliasTable: CommandInterpreter.CommandTableInterface = {};\n}\n\nnamespace CommandInterpreter {\n    export interface CommandInterface {\n        (args?: Array<string>, cmdString?: string): string | Promise<string>;\n    }\n\n    export interface CommandTableInterface {\n        [command: string]: CommandInterface;\n    }\n}\n\nexport { CommandInterpreter as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport FilesystemProviderInterface from '../fs/FilesystemProviderInterface';\nimport * as pathlib from 'path';\n\nclass Completer {\n    constructor(private _availableCommands: Array<string>, private _fsProvider: FilesystemProviderInterface) {}\n\n    complete(cmd: string): Completer.CompletionResult {\n        const chunks = cmd.split(/\\s+/);\n\n        if (chunks.length > 0 && chunks[0] === '') {\n            chunks.shift();\n        }\n\n        switch (chunks.length) {\n            case 0:\n                return new Completer.CompletionResult(this._availableCommands, cmd);\n\n            case 1:\n                return new Completer.CompletionResult(\n                    this._availableCommands.filter((candidate: string) => candidate.search(chunks[0]) === 0),\n                    chunks[0]\n                );\n\n            default:\n                const path = chunks[chunks.length - 1];\n\n                return new Completer.CompletionResult(this._completePath(path), path);\n        }\n    }\n\n    private _completePath(path: string): Array<string> {\n        let dirname = pathlib.dirname(path),\n            basename = pathlib.basename(path),\n            directory: Array<string>;\n\n        if (!this._fsProvider) {\n            return [];\n        }\n\n        if ((path && path[path.length - 1] === pathlib.sep) || path[path.length - 1] === '/') {\n            dirname = path;\n            basename = '';\n        }\n\n        try {\n            directory = this._fsProvider.readDirSync(dirname);\n\n            return this._appendSlashesToDirectories(\n                directory\n                    .filter((candidate: string) => candidate.search(basename) === 0)\n                    .map(entry => pathlib.join(dirname, entry))\n            );\n        } catch (e) {}\n\n        return [];\n    }\n\n    private _appendSlashesToDirectories(paths: Array<string>) {\n        return paths.map((path: string): string => {\n            try {\n                return this._fsProvider.getTypeSync(path) === FilesystemProviderInterface.FileType.DIRECTORY\n                    ? pathlib.join(path, pathlib.sep)\n                    : path;\n            } catch (e) {\n                return path;\n            }\n        });\n    }\n}\n\nnamespace Completer {\n    export class CompletionResult {\n        constructor(public candidates: Array<string>, public match: string) {}\n    }\n}\n\nexport { Completer as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport * as path from 'path';\n\nimport Debugger from '../machine/Debugger';\nimport DebuggerFrontend from './DebuggerFrontend';\nimport CommandInterpreter from './CommandInterpreter';\nimport CLIInterface from './CLIInterface';\nimport AbstractCLI from './AbstractCLI';\nimport FilesystemProviderInterface from '../fs/FilesystemProviderInterface';\n\nimport Board from '../machine/vanilla/Board';\nimport BoardInterface from '../machine/board/BoardInterface';\n\nclass DebuggerCLI extends AbstractCLI implements CLIInterface {\n    constructor(protected _fsProvider: FilesystemProviderInterface) {\n        super();\n\n        const dbg = new Debugger(),\n            commandInterpreter = new CommandInterpreter(),\n            debuggerFrontend = new DebuggerFrontend(dbg, this._fsProvider, commandInterpreter);\n\n        this._debugger = dbg;\n        this._commandInterpreter = commandInterpreter;\n        this._extendCommandInterpreter();\n        this._debuggerFrontend = debuggerFrontend;\n    }\n\n    async runDebuggerScript(filename: string): Promise<void> {\n        this._fsProvider.pushd(path.dirname(filename));\n\n        try {\n            for (const line of this._fsProvider.readTextFileSync(path.basename(filename)).split('\\n')) {\n                await this.pushInput(line);\n            }\n        } catch (e) {\n            this._fsProvider.popd();\n            throw e;\n        }\n\n        this._fsProvider.popd();\n    }\n\n    startup(): void {\n        this._initialize();\n        this._prompt();\n    }\n\n    shutdown(): void {}\n\n    async pushInput(input: string): Promise<void> {\n        try {\n            this._outputLine(await this._getCommandInterpreter().execute(input));\n        } catch (e) {\n            this._outputLine('ERROR: ' + e.message);\n        }\n    }\n\n    interrupt(): void {\n        this._quit();\n    }\n\n    outputAvailable(): boolean {\n        return !!this._output;\n    }\n\n    readOutput(): string {\n        const output = this._output;\n\n        this._output = '';\n\n        return output;\n    }\n\n    availableCommands(): Array<string> {\n        return this._getCommandInterpreter().getCommands();\n    }\n\n    getPrompt(): string {\n        return '> ';\n    }\n\n    getFilesystemProvider(): FilesystemProviderInterface {\n        return this._fsProvider;\n    }\n\n    allowQuit(allowQuit: boolean): void {\n        this._allowQuit = allowQuit;\n    }\n\n    protected _initialize() {\n        this._initializeHardware();\n        this._debugger.attach(this._board);\n    }\n\n    protected _initializeHardware(): void {\n        this._board = new Board();\n    }\n\n    protected _extendCommandInterpreter(): void {\n        this._commandInterpreter.registerCommands({\n            quit: (): string => {\n                this._quit();\n                return 'bye';\n            },\n            'run-script': async (args: Array<string>): Promise<string> => {\n                if (!args.length) {\n                    throw new Error('filename required');\n                }\n\n                await this.runDebuggerScript(args[0]);\n                return 'script executed';\n            }\n        });\n    }\n\n    protected _prompt(): void {\n        this.events.prompt.dispatch(undefined);\n    }\n\n    protected _quit(): void {\n        if (this._allowQuit) {\n            this.events.quit.dispatch(undefined);\n        }\n    }\n\n    protected _outputLine(line: string): void {\n        this._output += line + '\\n';\n        this.events.outputAvailable.dispatch(undefined);\n    }\n\n    protected _getCommandInterpreter(): CommandInterpreter {\n        return this._commandInterpreter;\n    }\n\n    protected _board: BoardInterface;\n    protected _commandInterpreter: CommandInterpreter;\n    protected _debuggerFrontend: DebuggerFrontend;\n\n    protected _output = '';\n    protected _allowQuit = true;\n\n    protected _debugger: Debugger;\n}\n\nexport { DebuggerCLI as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Debugger from '../machine/Debugger';\nimport CommandInterpreter from './CommandInterpreter';\nimport FileSystemProviderInterface from '../fs/FilesystemProviderInterface';\nimport BoardInterface from '../machine/board/BoardInterface';\n\nimport * as hex from '../tools/hex';\nimport * as util from 'util';\n\nfunction decodeNumber(value: string): number {\n    try {\n        return hex.decode(value);\n    } catch (e) {\n        if (!value.match(/^-?\\d+$/)) {\n            throw new TypeError('number expected, got ' + value);\n        }\n\n        return Number(value);\n    }\n}\n\nclass DebuggerFrontend {\n    constructor(\n        private _debugger: Debugger,\n        private _fileSystemProvider: FileSystemProviderInterface,\n        private _commandInterpreter: CommandInterpreter\n    ) {\n        this._commandInterpreter.registerCommands({\n            disassemble: this._disassemble.bind(this),\n            dump: this._dump.bind(this),\n            load: this._load.bind(this),\n            hex2dec: this._hex2dec.bind(this),\n            dec2hex: this._dec2hex.bind(this),\n            state: this._state.bind(this),\n            boot: this._boot.bind(this),\n            stack: this._stack.bind(this),\n            step: this._step.bind(this),\n            'step-clock': this._stepClock.bind(this),\n            reset: () => this._reset(false),\n            'reset-hard': () => this._reset(true),\n            'break-on': this._enableBreakpoints.bind(this),\n            'break-off': this._disableBreakpoints.bind(this),\n            break: this._setBreakpoint.bind(this),\n            'break-clear': this._clearBreakpoint.bind(this),\n            'break-dump': this._showBreakpoints.bind(this),\n            'break-clear-all': this._clearAllBreakpoints.bind(this),\n            'trace-on': this._enableTrace.bind(this),\n            'trace-off': this._disableTrace.bind(this),\n            trace: this._trace.bind(this)\n        });\n    }\n\n    describeTrap(trap?: BoardInterface.TrapPayload): string {\n        if (typeof trap === 'undefined') {\n            trap = this._debugger.getLastTrap();\n        }\n\n        if (!trap) {\n            return '';\n        }\n\n        const message = trap.message ? trap.message : 'unknown';\n\n        switch (trap.reason) {\n            case BoardInterface.TrapReason.cpu:\n                return util.format('CPU TRAP: %s', message);\n\n            case BoardInterface.TrapReason.debug:\n                return util.format('DEBUGGER TRAP: %s', message);\n\n            default:\n                return util.format('UNKNOWN TRAP: %s', message);\n        }\n    }\n\n    private _disassemble(args: Array<string>): string {\n        switch (args.length) {\n            case 0:\n                return this._debugger.disassemble(1);\n\n            case 1:\n                return this._debugger.disassemble(decodeNumber(args[0]));\n\n            default:\n                return this._debugger.disassembleAt(decodeNumber(args[0]), decodeNumber(args[1]));\n        }\n    }\n\n    private _dump(args: Array<string>): string {\n        if (args.length < 1) {\n            throw new Error('at least one argument expected');\n        }\n\n        return this._debugger.dumpAt(\n            Math.abs(decodeNumber(args[0])),\n            Math.abs(args.length > 1 ? decodeNumber(args[1]) : 1)\n        );\n    }\n\n    private _load(args: Array<string>): string {\n        if (args.length < 2) {\n            throw new Error('at least two arguments. expected');\n        }\n\n        const file = args[0],\n            base = Math.abs(decodeNumber(args[1])) % 0x10000,\n            buffer = this._fileSystemProvider.readBinaryFileSync(file),\n            offset = args.length > 2 ? Math.min(Math.abs(decodeNumber(args[2])), buffer.length - 1) : 0,\n            count = args.length > 3 ? Math.min(Math.abs(decodeNumber(args[3])), buffer.length) : buffer.length;\n\n        this._debugger.loadBlock(buffer, base, offset, offset + count - 1);\n\n        return 'successfully loaded ' + count + ' bytes at ' + hex.encode(base, 4);\n    }\n\n    private _hex2dec(args: Array<string>): string {\n        return args.map((value: string) => hex.decode(value)).join(' ');\n    }\n\n    private _dec2hex(args: Array<string>): string {\n        return args.map((value: string) => String(hex.encode(Number(value)))).join(' ');\n    }\n\n    private _state(): string {\n        return this._debugger.dumpState();\n    }\n\n    private _boot(): string {\n        const board = this._debugger.getBoard();\n        let cycles = 0;\n\n        const clockHandler = (clock: number) => (cycles += clock);\n\n        board.cpuClock.addHandler(clockHandler);\n\n        let exception: Error;\n        try {\n            this._debugger.getBoard().boot();\n        } catch (e) {\n            exception = e || new Error('unknown exception during boot');\n        }\n\n        board.cpuClock.removeHandler(clockHandler);\n\n        if (exception) {\n            throw exception;\n        }\n\n        return util.format('Boot successful in %s cycles', cycles);\n    }\n\n    private _reset(hard: boolean): string {\n        this._debugger.getBoard().reset(hard);\n\n        return 'reset successful';\n    }\n\n    private _step(args: Array<string>): string {\n        const timestamp = Date.now(),\n            instructionCount = args.length > 0 ? decodeNumber(args[0]) : 1,\n            { cycles, cpuCycles } = this._debugger.step(instructionCount),\n            trap = this._debugger.getLastTrap();\n\n        return util.format(\n            'Used %s cycles (CPU: %s) in %s milliseconds, now at\\n%s\\n%s\\n',\n            cycles,\n            cpuCycles,\n            Date.now() - timestamp,\n            this._debugger.disassemble(1),\n            this.describeTrap(trap)\n        );\n    }\n\n    private _stack(): string {\n        return this._debugger.dumpStack();\n    }\n\n    private _enableBreakpoints(): string {\n        this._debugger.setBreakpointsEnabled(true);\n        return 'Breakpoints enabled';\n    }\n\n    private _disableBreakpoints(): string {\n        this._debugger.setBreakpointsEnabled(false);\n        return 'Breakpoints disabled';\n    }\n\n    private _setBreakpoint(args: Array<string>): string {\n        if (args.length < 1) {\n            throw new Error('at least one argument expected');\n        }\n\n        const name = args.length > 1 ? args[1] : '-',\n            address = decodeNumber(args[0]);\n\n        this._debugger.setBreakpoint(address, name);\n\n        return 'Breakpoint \"' + name + '\" at ' + hex.encode(address, 4);\n    }\n\n    private _clearBreakpoint(args: Array<string>): string {\n        if (args.length < 1) {\n            throw new Error('argument expected');\n        }\n\n        const address = decodeNumber(args[0]);\n\n        this._debugger.clearBreakpoint(address);\n\n        return 'Cleared breakpoint at ' + hex.encode(address, 4);\n    }\n\n    private _showBreakpoints(): string {\n        return this._debugger.dumpBreakpoints();\n    }\n\n    private _clearAllBreakpoints(): string {\n        this._debugger.clearAllBreakpoints();\n\n        return 'All breakpoints cleared';\n    }\n\n    private _enableTrace(): string {\n        this._debugger.setTraceEnabled(true);\n\n        return 'Tracing enabled';\n    }\n\n    private _disableTrace(): string {\n        this._debugger.setTraceEnabled(false);\n\n        return 'Tracing disabled';\n    }\n\n    private _trace(args: Array<string>): string {\n        return this._debugger.trace(args.length > 0 ? decodeNumber(args[0]) : 10);\n    }\n\n    private _stepClock(args: Array<string>): string {\n        const requestedCycles = args.length > 0 ? decodeNumber(args[0]) : 1,\n            timestamp = Date.now();\n\n        const cycles = this._debugger.stepClock(requestedCycles);\n\n        const time = Date.now() - timestamp,\n            trap = this._debugger.getLastTrap();\n\n        return (\n            `clock stepped ${cycles} cycles in ${time} msec; ` +\n            `now at ${this._debugger.disassemble(1)}\\n${trap ? this.describeTrap(trap) : ''}`\n        );\n    }\n}\n\nexport { DebuggerFrontend as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport CLIInterface from './CLIInterface';\nimport Completer from './Completer';\n\nclass JqtermCLIRunner {\n    constructor(private _cli: CLIInterface, terminalElt: JQuery, options: JqtermCLIRunner.Options = {}) {\n        this._updateCompleter();\n\n        this._terminal = terminalElt.terminal(\n            (input: string, terminal: JQueryTerminal): void => this._cli.pushInput(input),\n            {\n                greetings: 'Ready.',\n                completion: this._getCompletionHandler(),\n                exit: false,\n                clear: false\n            }\n        );\n\n        this._cli.events.outputAvailable.addHandler(this._onCLIOutputAvailable, this);\n        this._cli.events.promptChanged.addHandler(this._onCLIPromptChanged, this);\n        this._cli.events.availableCommandsChanged.addHandler(this._updateCompleter.bind(this));\n\n        if (options.interruptButton) {\n            options.interruptButton.mousedown((): void => this._cli.interrupt());\n        }\n\n        if (options.clearButton) {\n            options.clearButton.mousedown((): void => this._terminal.clear());\n        }\n    }\n\n    startup() {\n        this._cli.startup();\n        this._terminal.set_prompt(this._cli.getPrompt());\n    }\n\n    private _updateCompleter() {\n        this._completer = new Completer(this._cli.availableCommands(), this._cli.getFilesystemProvider());\n    }\n\n    private _onCLIOutputAvailable(payload: void, ctx: JqtermCLIRunner): void {\n        ctx._terminal.echo(ctx._cli.readOutput());\n    }\n\n    private _onCLIPromptChanged(payload: void, ctx: JqtermCLIRunner): void {\n        ctx._terminal.set_prompt(ctx._cli.getPrompt());\n    }\n\n    private _getCompletionHandler() {\n        const me = this;\n\n        return function(this: JQueryTerminal, cmd: string, handler: (candidates: Array<string>) => void) {\n            handler(me._completer.complete(this.get_command()).candidates);\n        };\n    }\n\n    private _terminal: JQueryTerminal;\n    private _completer: Completer;\n}\n\nnamespace JqtermCLIRunner {\n    export interface Options {\n        interruptButton?: JQuery;\n        clearButton?: JQuery;\n    }\n}\n\nexport { JqtermCLIRunner as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport * as pathlib from 'path';\n\nabstract class AbstractFileSystemProvider {\n    pushd(path?: string): void {\n        this._directoryStack.unshift(this._cwd);\n\n        if (typeof path !== 'undefined') {\n            this.chdir(path);\n        }\n    }\n\n    popd(): string {\n        if (this._directoryStack.length === 0) {\n            return undefined;\n        }\n\n        const targetDir = this._directoryStack.shift();\n\n        this.chdir(targetDir);\n\n        return targetDir;\n    }\n\n    cwd(): string {\n        return this._cwd;\n    }\n\n    chdir(path: string): void {\n        this._cwd = this._resolvePath(path);\n    }\n\n    protected _resolvePath(path: string): string {\n        return pathlib.resolve(this._cwd, path);\n    }\n\n    protected _directoryStack: Array<string> = [];\n    protected _cwd = '/';\n}\n\nexport { AbstractFileSystemProvider as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport * as util from 'util';\nimport AbstractFileSystemProvider from './AbstractFileSystemProvider';\nimport FilesystemProviderInterface from './FilesystemProviderInterface';\n\nclass PrepackagedFilesystemProvider extends AbstractFileSystemProvider implements FilesystemProviderInterface {\n    constructor(private _blob: PrepackagedFilesystemProvider.BlobInterface) {\n        super();\n        this._cwd = '/';\n    }\n\n    readBinaryFileSync(name: string): Buffer {\n        name = this._resolvePath(name);\n\n        const content = this._lookup(name);\n\n        if (typeof content === 'undefined') {\n            throw new Error(util.format('%s not part of file bundle', name));\n        }\n\n        if (!Buffer.isBuffer(content)) {\n            throw new Error(util.format('%s is a directory, not a file', name));\n        }\n\n        return content;\n    }\n\n    readTextFileSync(name: string): string {\n        const buffer = this.readBinaryFileSync(name);\n\n        return buffer.toString();\n    }\n\n    readDirSync(name: string): Array<string> {\n        name = this._resolvePath(name);\n\n        const content = this._lookup(name);\n\n        if (typeof content === 'undefined') {\n            throw new Error(util.format('%s not part of file bundle', name));\n        }\n\n        if (typeof content === 'string' || Buffer.isBuffer(content)) {\n            throw new Error(util.format('%s is a file, not a directory', name));\n        }\n\n        return Object.keys(content);\n    }\n\n    getTypeSync(name: string): FilesystemProviderInterface.FileType {\n        name = this._resolvePath(name);\n\n        const content = this._lookup(name);\n\n        if (typeof content === 'undefined') {\n            throw new Error(util.format('%s not part of file bundle', name));\n        }\n\n        if (Buffer.isBuffer(content)) {\n            return FilesystemProviderInterface.FileType.FILE;\n        } else {\n            return FilesystemProviderInterface.FileType.DIRECTORY;\n        }\n    }\n\n    private _lookup(path: string): any {\n        const atoms: Array<string> = path.split('/'),\n            natoms = atoms.length;\n\n        let i: number,\n            scope = this._blob;\n\n        const name = atoms[natoms - 1];\n\n        for (i = 0; i < natoms - 1; i++) {\n            if (atoms[i] === '') {\n                continue;\n            } else if (scope.hasOwnProperty(atoms[i])) {\n                scope = scope[atoms[i]];\n            } else {\n                return undefined;\n            }\n        }\n\n        if (name && typeof scope[name] === 'string') {\n            scope[name] = Buffer.from(scope[name], 'base64');\n        }\n\n        return name ? scope[name] : scope;\n    }\n}\n\nnamespace PrepackagedFilesystemProvider {\n    export interface BlobInterface {\n        [index: string]: any;\n    }\n}\n\nexport { PrepackagedFilesystemProvider as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Instruction from './cpu/Instruction';\nimport Disassembler from './cpu/Disassembler';\nimport CpuInterface from './cpu/CpuInterface';\nimport BoardInterface from './board/BoardInterface';\nimport BusInterface from './bus/BusInterface';\n\nimport * as hex from '../tools/hex';\nimport * as binary from '../tools/binary';\nimport * as util from 'util';\n\nclass Debugger {\n    constructor(private _traceSize: number = 2048, private _stepMaxCycles = 10000000) {}\n\n    attach(board: BoardInterface): Debugger {\n        this._board = board;\n        this._bus = this._board.getBus();\n        this._cpu = this._board.getCpu();\n        this._disassembler = new Disassembler(this._bus);\n\n        this._board.trap.addHandler(this._trapHandler, this);\n\n        this._traceLength = 0;\n        this._traceIndex = 0;\n\n        return this;\n    }\n\n    detach(): Debugger {\n        if (!this._board) {\n            return this;\n        }\n\n        this._board.cpuClock.removeHandler(this._cpuClockHandler);\n        this._board.trap.removeHandler(this._trapHandler);\n\n        return this;\n    }\n\n    clearAllBreakpoints(): Debugger {\n        for (let i = 0; i < 0x10000; i++) {\n            this._breakpoints[i] = 0;\n        }\n\n        return this;\n    }\n\n    setBreakpoint(address: number, description: string = '-'): Debugger {\n        address %= 0x10000;\n\n        this._breakpoints[address] = 1;\n        this._breakpointDescriptions[address] = description;\n\n        return this;\n    }\n\n    clearBreakpoint(address: number): Debugger {\n        this._breakpoints[address % 0x10000] = 0;\n\n        return this;\n    }\n\n    dumpBreakpoints(): string {\n        let result = '';\n\n        for (let address = 0; address < 0x10000; address++) {\n            if (this._breakpoints[address]) {\n                result += hex.encode(address, 4) + ': ' + this._breakpointDescriptions[address] + '\\n';\n            }\n        }\n\n        return result.replace(/\\n$/, '');\n    }\n\n    loadBlock(block: Debugger.MemoryBlockInterface, at: number, from: number = 0, to: number = block.length - 1) {\n        for (let i = 0; i <= to - from; i++) {\n            this._poke(at + i, block[i]);\n        }\n    }\n\n    disassembleAt(start: number, length: number): string {\n        let i = 0,\n            result = '',\n            instruction: Instruction,\n            address: number;\n\n        while (i < length) {\n            address = (start + i) % 0x10000;\n\n            instruction = Instruction.opcodes[this._peek(address)];\n            result +=\n                (this._breakpoints[address] ? '(B) ' : '    ') +\n                hex.encode(address, 4) +\n                ':   ' +\n                this._disassembler.disassembleAt(address) +\n                '\\n';\n\n            i += instruction.getSize();\n        }\n\n        return result.replace(/\\n$/, '');\n    }\n\n    disassemble(length: number): string {\n        return this.disassembleAt(this._cpu.state.p, length);\n    }\n\n    trace(length: number = this._traceSize): string {\n        let result = '';\n        length = Math.min(length, this._traceLength);\n\n        for (let i = 0; i < length; i++) {\n            result +=\n                this.disassembleAt(\n                    this._trace[(this._traceSize + this._traceIndex - length + i) % this._traceSize],\n                    1\n                ) + '\\n';\n        }\n\n        return result + this.disassemble(1);\n    }\n\n    dumpAt(start: number, length: number): string {\n        let result = '',\n            address: number;\n\n        for (let i = 0; i < length; i++) {\n            address = (start + i) % 0x10000;\n\n            result += hex.encode(address, 4) + ':   ' + hex.encode(this._peek(address), 2) + '\\n';\n        }\n\n        return result.replace(/\\n$/, '');\n    }\n\n    dumpState(): string {\n        const state = this._cpu.state;\n\n        switch (this._cpu.executionState) {\n            case CpuInterface.ExecutionState.boot:\n        }\n\n        let result =\n            '' +\n            'A = ' +\n            hex.encode(state.a, 2) +\n            '   ' +\n            'X = ' +\n            hex.encode(state.x, 2) +\n            '   ' +\n            'Y = ' +\n            hex.encode(state.y, 2) +\n            '   ' +\n            'S = ' +\n            hex.encode(state.s, 2) +\n            '   ' +\n            'P = ' +\n            hex.encode(state.p, 4) +\n            '\\n' +\n            'flags = ' +\n            binary.encode(state.flags, 8) +\n            '\\n' +\n            'state: ' +\n            this._humanReadableExecutionState();\n\n        const boardState = this._board.getBoardStateDebug();\n\n        if (boardState) {\n            result += '\\n' + '\\n' + boardState;\n        }\n\n        return result;\n    }\n\n    dumpStack(): string {\n        return this.dumpAt(0x0100 + this._cpu.state.s, 0x100 - this._cpu.state.s);\n    }\n\n    step(instructions: number): { cycles: number; cpuCycles: number } {\n        let instruction = 0,\n            cycles = 0,\n            lastExecutionState = this._cpu.executionState,\n            cpuCycles = 0;\n        const timer = this._board.getTimer();\n\n        const cpuClockHandler = (c: number) => (cpuCycles += c);\n        this._board.cpuClock.addHandler(cpuClockHandler);\n\n        this._lastTrap = undefined;\n\n        this._board.resume();\n\n        while (instruction < instructions && !this._lastTrap && cycles < this._stepMaxCycles) {\n            timer.tick(1);\n            cycles++;\n\n            if (lastExecutionState !== this._cpu.executionState) {\n                lastExecutionState = this._cpu.executionState;\n\n                if (lastExecutionState === CpuInterface.ExecutionState.fetch) {\n                    instruction++;\n                }\n            }\n        }\n\n        this._board.cpuClock.removeHandler(cpuClockHandler);\n        this._board.suspend();\n\n        return { cycles, cpuCycles };\n    }\n\n    stepClock(cycles: number): number {\n        this._lastTrap = undefined;\n\n        this._board.resume();\n\n        const usedCycles = this._board.getTimer().tick(cycles);\n\n        this._board.suspend();\n\n        return usedCycles;\n    }\n\n    setBreakpointsEnabled(breakpointsEnabled: boolean): Debugger {\n        this._breakpointsEnabled = breakpointsEnabled;\n\n        this._attachToCpuIfNecessary();\n\n        return this;\n    }\n\n    setTraceEnabled(traceEnabled: boolean): Debugger {\n        this._traceEnabled = traceEnabled;\n\n        this._attachToCpuIfNecessary();\n\n        return this;\n    }\n\n    getBoard(): BoardInterface {\n        return this._board;\n    }\n\n    getLastTrap(): BoardInterface.TrapPayload {\n        return this._lastTrap;\n    }\n\n    private _humanReadableExecutionState() {\n        if (this._cpu.isHalt()) {\n            return 'halted';\n        }\n\n        switch (this._cpu.executionState) {\n            case CpuInterface.ExecutionState.boot:\n                return 'boot';\n\n            case CpuInterface.ExecutionState.fetch:\n                return 'fetch';\n\n            case CpuInterface.ExecutionState.execute:\n                return 'execute';\n        }\n    }\n\n    private _attachToCpuIfNecessary(): void {\n        if (this._traceEnabled || this._breakpointsEnabled) {\n            this._lastInstructionPointer = this._cpu.getLastInstructionPointer() || 0;\n            this._board.cpuClock.addHandler(this._cpuClockHandler, this);\n            this._board.setClockMode(BoardInterface.ClockMode.instruction);\n        } else {\n            this._board.cpuClock.removeHandler(this._cpuClockHandler, this);\n            this._board.setClockMode(BoardInterface.ClockMode.lazy);\n        }\n    }\n\n    private _cpuClockHandler(clocks: number, ctx: Debugger): void {\n        const lastInstructionPointer = ctx._cpu.getLastInstructionPointer();\n\n        if (\n            ctx._cpu.executionState !== CpuInterface.ExecutionState.fetch ||\n            lastInstructionPointer === ctx._lastInstructionPointer\n        ) {\n            return;\n        }\n\n        ctx._lastInstructionPointer = lastInstructionPointer;\n\n        if (ctx._traceEnabled) {\n            ctx._trace[ctx._traceIndex] = lastInstructionPointer;\n            ctx._traceIndex = (ctx._traceIndex + 1) % ctx._traceSize;\n            if (ctx._traceLength < ctx._traceSize) {\n                ctx._traceLength++;\n            }\n        }\n\n        if (ctx._breakpointsEnabled && ctx._breakpoints[ctx._cpu.state.p]) {\n            ctx._board.triggerTrap(\n                BoardInterface.TrapReason.debug,\n                util.format(\n                    'breakpoint \"%s\" at %s',\n                    ctx._breakpointDescriptions[ctx._cpu.state.p] || '',\n                    hex.encode(ctx._cpu.state.p)\n                )\n            );\n        }\n    }\n\n    private _trapHandler(trap: BoardInterface.TrapPayload, dbg: Debugger): void {\n        dbg._lastTrap = trap;\n    }\n\n    private _peek(address: number): number {\n        return this._bus.peek(address % 0x10000);\n    }\n\n    private _poke(address: number, value: number) {\n        this._bus.poke(address % 0x10000, value & 0xff);\n    }\n\n    private _disassembler: Disassembler;\n    private _cpu: CpuInterface;\n    private _bus: BusInterface;\n    private _board: BoardInterface;\n\n    private _breakpoints = new Uint8Array(0x10000);\n    private _breakpointDescriptions: Array<string> = new Array(0x10000);\n    private _breakpointsEnabled = false;\n\n    private _traceEnabled = false;\n    private _trace = new Uint16Array(this._traceSize);\n    private _traceLength = 0;\n    private _traceIndex = 0;\n    private _lastInstructionPointer: number;\n\n    private _lastTrap: BoardInterface.TrapPayload;\n}\n\nnamespace Debugger {\n    export interface MemoryBlockInterface {\n        [index: number]: number;\n        length: number;\n    }\n}\n\nexport { Debugger as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { EventInterface } from 'microevent.ts';\n\nimport BusInterface from '../bus/BusInterface';\nimport CpuInterface from '../cpu/CpuInterface';\nimport TimerInterface from './TimerInterface';\n\ninterface BoardInterface {\n    getBus(): BusInterface;\n\n    getCpu(): CpuInterface;\n\n    getTimer(): TimerInterface;\n\n    reset(hard: boolean): BoardInterface;\n\n    boot(): BoardInterface;\n\n    suspend(): void;\n\n    resume(): void;\n\n    getClockMode(): BoardInterface.ClockMode;\n\n    setClockMode(clockMode: BoardInterface.ClockMode): BoardInterface;\n\n    triggerTrap(reason: BoardInterface.TrapReason, message?: string): BoardInterface;\n\n    getBoardStateDebug(): string;\n\n    trap: EventInterface<BoardInterface.TrapPayload>;\n\n    cpuClock: EventInterface<number>;\n\n    clock: EventInterface<number>;\n}\n\nnamespace BoardInterface {\n    export const enum TrapReason {\n        cpu,\n        bus,\n        debug,\n        board\n    }\n\n    export const enum ClockMode {\n        instruction,\n        lazy\n    }\n\n    export class TrapPayload {\n        constructor(public reason: TrapReason, public board: BoardInterface, public message?: string) {}\n    }\n}\n\nexport { BoardInterface as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Instruction from './Instruction';\nimport BusInterface from '../bus/BusInterface';\nimport CpuInterface from './CpuInterface';\n\nimport RngInterface from '../../tools/rng/GeneratorInterface';\n\nconst enum InterruptCheck {\n    endOfInstruction,\n    beforeOp\n}\n\nfunction restoreFlagsFromStack(state: CpuInterface.State, bus: BusInterface): void {\n    state.s = (state.s + 0x01) & 0xff;\n    state.flags = (bus.read(0x0100 + state.s) | CpuInterface.Flags.e) & ~CpuInterface.Flags.b;\n}\n\nfunction setFlagsNZ(state: CpuInterface.State, operand: number): void {\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z)) |\n        (operand & 0x80) |\n        (operand ? 0 : CpuInterface.Flags.z);\n}\n\nfunction dispatchInterrupt(state: CpuInterface.State, bus: BusInterface, vector: number): void {\n    const nextOpAddr = state.p;\n\n    if (state.nmi) {\n        vector = 0xfffa;\n    }\n\n    state.nmi = state.irq = false;\n\n    bus.write(state.s + 0x0100, (nextOpAddr >>> 8) & 0xff);\n    state.s = (state.s + 0xff) & 0xff;\n    bus.write(state.s + 0x0100, nextOpAddr & 0xff);\n    state.s = (state.s + 0xff) & 0xff;\n\n    bus.write(state.s + 0x0100, state.flags & ~CpuInterface.Flags.b);\n    state.s = (state.s + 0xff) & 0xff;\n\n    state.flags |= CpuInterface.Flags.i;\n\n    state.p = bus.readWord(vector);\n}\n\nfunction opIrq(state: CpuInterface.State, bus: BusInterface) {\n    dispatchInterrupt(state, bus, 0xfffe);\n}\n\nfunction opNmi(state: CpuInterface.State, bus: BusInterface) {\n    dispatchInterrupt(state, bus, 0xfffa);\n}\n\nfunction opBoot(state: CpuInterface.State, bus: BusInterface): void {\n    state.p = bus.readWord(0xfffc);\n}\n\nfunction opAdc(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    if (state.flags & CpuInterface.Flags.d) {\n        const d0 = (operand & 0x0f) + (state.a & 0x0f) + (state.flags & CpuInterface.Flags.c),\n            d1 = (operand >>> 4) + (state.a >>> 4) + (d0 > 9 ? 1 : 0);\n\n        state.a = (d0 % 10) | ((d1 % 10) << 4);\n\n        state.flags =\n            (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n            (state.a & 0x80) | // negative\n            (state.a ? 0 : CpuInterface.Flags.z) | // zero\n            (d1 > 9 ? CpuInterface.Flags.c : 0); // carry\n    } else {\n        const sum = state.a + operand + (state.flags & CpuInterface.Flags.c),\n            result = sum & 0xff;\n\n        state.flags =\n            (state.flags &\n                ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c | CpuInterface.Flags.v)) |\n            (result & 0x80) | // negative\n            (result ? 0 : CpuInterface.Flags.z) | // zero\n            (sum >>> 8) | // carry\n            ((~(operand ^ state.a) & (result ^ operand) & 0x80) >>> 1); // overflow\n\n        state.a = result;\n    }\n}\n\nfunction opAnd(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a &= operand;\n    setFlagsNZ(state, state.a);\n}\n\nfunction opAslAcc(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = (state.a << 1) & 0xff;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nfunction opAslMem(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = (old << 1) & 0xff;\n    bus.write(operand, value);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (value & 0x80) |\n        (value ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nfunction opBit(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.v | CpuInterface.Flags.z)) |\n        (operand & (CpuInterface.Flags.n | CpuInterface.Flags.v)) |\n        (operand & state.a ? 0 : CpuInterface.Flags.z);\n}\n\nfunction opBrk(state: CpuInterface.State, bus: BusInterface): void {\n    const nextOpAddr = (state.p + 1) & 0xffff;\n    let vector = 0xfffe;\n\n    if (state.nmi) {\n        vector = 0xfffa;\n        state.nmi = false;\n    }\n\n    state.nmi = state.irq = false;\n\n    bus.write(state.s + 0x0100, (nextOpAddr >>> 8) & 0xff);\n    state.s = (state.s + 0xff) & 0xff;\n    bus.write(state.s + 0x0100, nextOpAddr & 0xff);\n    state.s = (state.s + 0xff) & 0xff;\n\n    bus.write(state.s + 0x0100, state.flags | CpuInterface.Flags.b);\n    state.s = (state.s + 0xff) & 0xff;\n\n    state.flags |= CpuInterface.Flags.i;\n\n    state.p = bus.readWord(vector);\n}\n\nfunction opClc(state: CpuInterface.State): void {\n    state.flags &= ~CpuInterface.Flags.c;\n}\n\nfunction opCld(state: CpuInterface.State): void {\n    state.flags &= ~CpuInterface.Flags.d;\n}\n\nfunction opCli(state: CpuInterface.State): void {\n    state.flags &= ~CpuInterface.Flags.i;\n}\n\nfunction opClv(state: CpuInterface.State): void {\n    state.flags &= ~CpuInterface.Flags.v;\n}\n\nfunction opCmp(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const diff = state.a + (~operand & 0xff) + 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        (diff & 0xff ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n}\n\nfunction opCpx(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const diff = state.x + (~operand & 0xff) + 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        (diff & 0xff ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n}\n\nfunction opCpy(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const diff = state.y + (~operand & 0xff) + 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        (diff & 0xff ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n}\n\nfunction opDec(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = (bus.read(operand) + 0xff) & 0xff;\n    bus.write(operand, value);\n    setFlagsNZ(state, value);\n}\n\nfunction opDex(state: CpuInterface.State): void {\n    state.x = (state.x + 0xff) & 0xff;\n    setFlagsNZ(state, state.x);\n}\n\nfunction opEor(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a = state.a ^ operand;\n    setFlagsNZ(state, state.a);\n}\n\nfunction opDey(state: CpuInterface.State): void {\n    state.y = (state.y + 0xff) & 0xff;\n    setFlagsNZ(state, state.y);\n}\n\nfunction opInc(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = (bus.read(operand) + 1) & 0xff;\n    bus.write(operand, value);\n    setFlagsNZ(state, value);\n}\n\nfunction opInx(state: CpuInterface.State): void {\n    state.x = (state.x + 0x01) & 0xff;\n    setFlagsNZ(state, state.x);\n}\n\nfunction opIny(state: CpuInterface.State): void {\n    state.y = (state.y + 0x01) & 0xff;\n    setFlagsNZ(state, state.y);\n}\n\nfunction opJmp(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.p = operand;\n}\n\nfunction opJsr(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const returnPtr = (state.p + 1) & 0xffff,\n        addrLo = bus.read(state.p);\n\n    bus.read(0x0100 + state.s);\n    bus.write(0x0100 + state.s, returnPtr >>> 8);\n    state.s = (state.s + 0xff) & 0xff;\n    bus.write(0x0100 + state.s, returnPtr & 0xff);\n    state.s = (state.s + 0xff) & 0xff;\n\n    state.p = addrLo | (bus.read((state.p + 1) & 0xffff) << 8);\n}\n\nfunction opLda(\n    state: CpuInterface.State,\n    bus: BusInterface,\n    operand: number,\n    addressingMode: Instruction.AddressingMode\n): void {\n    state.a = addressingMode === Instruction.AddressingMode.immediate ? operand : bus.read(operand);\n    setFlagsNZ(state, state.a);\n}\n\nfunction opLdx(\n    state: CpuInterface.State,\n    bus: BusInterface,\n    operand: number,\n    addressingMode: Instruction.AddressingMode\n): void {\n    state.x = addressingMode === Instruction.AddressingMode.immediate ? operand : bus.read(operand);\n    setFlagsNZ(state, state.x);\n}\n\nfunction opLdy(\n    state: CpuInterface.State,\n    bus: BusInterface,\n    operand: number,\n    addressingMode: Instruction.AddressingMode\n): void {\n    state.y = addressingMode === Instruction.AddressingMode.immediate ? operand : bus.read(operand);\n    setFlagsNZ(state, state.y);\n}\n\nfunction opLsrAcc(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = state.a >>> 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nfunction opLsrMem(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = old >>> 1;\n    bus.write(operand, value);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (value & 0x80) |\n        (value ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nfunction opNop(): void { }\n\nfunction opOra(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a |= operand;\n    setFlagsNZ(state, state.a);\n}\n\nfunction opPhp(state: CpuInterface.State, bus: BusInterface): void {\n    bus.write(0x0100 + state.s, state.flags | CpuInterface.Flags.b);\n    state.s = (state.s + 0xff) & 0xff;\n}\n\nfunction opPlp(state: CpuInterface.State, bus: BusInterface): void {\n    restoreFlagsFromStack(state, bus);\n}\n\nfunction opPha(state: CpuInterface.State, bus: BusInterface): void {\n    bus.write(0x0100 + state.s, state.a);\n    state.s = (state.s + 0xff) & 0xff;\n}\n\nfunction opPla(state: CpuInterface.State, bus: BusInterface): void {\n    state.s = (state.s + 0x01) & 0xff;\n    state.a = bus.read(0x0100 + state.s);\n    setFlagsNZ(state, state.a);\n}\n\nfunction opRolAcc(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = ((state.a << 1) & 0xff) | (state.flags & CpuInterface.Flags.c);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nfunction opRolMem(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = ((old << 1) & 0xff) | (state.flags & CpuInterface.Flags.c);\n    bus.write(operand, value);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (value & 0x80) |\n        (value ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nfunction opRorAcc(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = (state.a >>> 1) | ((state.flags & CpuInterface.Flags.c) << 7);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nfunction opRorMem(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = (old >>> 1) | ((state.flags & CpuInterface.Flags.c) << 7);\n    bus.write(operand, value);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (value & 0x80) |\n        (value ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nfunction opRti(state: CpuInterface.State, bus: BusInterface): void {\n    let returnPtr: number;\n\n    restoreFlagsFromStack(state, bus);\n\n    state.s = (state.s + 1) & 0xff;\n    returnPtr = bus.read(0x0100 + state.s);\n    state.s = (state.s + 1) & 0xff;\n    returnPtr |= bus.read(0x0100 + state.s) << 8;\n\n    state.p = returnPtr;\n}\n\nfunction opRts(state: CpuInterface.State, bus: BusInterface): void {\n    let returnPtr: number;\n\n    bus.read(0x0100 + state.s);\n    state.s = (state.s + 1) & 0xff;\n    returnPtr = bus.read(0x0100 + state.s);\n    state.s = (state.s + 1) & 0xff;\n    returnPtr += bus.read(0x0100 + state.s) << 8;\n\n    state.p = (returnPtr + 1) & 0xffff;\n}\n\nfunction opSbc(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    if (state.flags & CpuInterface.Flags.d) {\n        const d0 = (state.a & 0x0f) - (operand & 0x0f) - (~state.flags & CpuInterface.Flags.c),\n            d1 = (state.a >>> 4) - (operand >>> 4) - (d0 < 0 ? 1 : 0);\n\n        state.a = (d0 < 0 ? 10 + d0 : d0) | ((d1 < 0 ? 10 + d1 : d1) << 4);\n\n        state.flags =\n            (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n            (state.a & 0x80) | // negative\n            (state.a ? 0 : CpuInterface.Flags.z) | // zero\n            (d1 < 0 ? 0 : CpuInterface.Flags.c); // carry / borrow\n    } else {\n        operand = ~operand & 0xff;\n\n        const sum = state.a + operand + (state.flags & CpuInterface.Flags.c),\n            result = sum & 0xff;\n\n        state.flags =\n            (state.flags &\n                ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c | CpuInterface.Flags.v)) |\n            (result & 0x80) | // negative\n            (result ? 0 : CpuInterface.Flags.z) | // zero\n            (sum >>> 8) | // carry / borrow\n            ((~(operand ^ state.a) & (result ^ operand) & 0x80) >>> 1); // overflow\n\n        state.a = result;\n    }\n}\n\nfunction opSec(state: CpuInterface.State): void {\n    state.flags |= CpuInterface.Flags.c;\n}\n\nfunction opSed(state: CpuInterface.State): void {\n    state.flags |= CpuInterface.Flags.d;\n}\n\nfunction opSei(state: CpuInterface.State): void {\n    state.flags |= CpuInterface.Flags.i;\n}\n\nfunction opSta(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    bus.write(operand, state.a);\n}\n\nfunction opStx(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    bus.write(operand, state.x);\n}\n\nfunction opSty(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    bus.write(operand, state.y);\n}\n\nfunction opTax(state: CpuInterface.State): void {\n    state.x = state.a;\n    setFlagsNZ(state, state.a);\n}\n\nfunction opTay(state: CpuInterface.State): void {\n    state.y = state.a;\n    setFlagsNZ(state, state.a);\n}\n\nfunction opTsx(state: CpuInterface.State): void {\n    state.x = state.s;\n    setFlagsNZ(state, state.x);\n}\n\nfunction opTxa(state: CpuInterface.State): void {\n    state.a = state.x;\n    setFlagsNZ(state, state.a);\n}\n\nfunction opTxs(state: CpuInterface.State): void {\n    state.s = state.x;\n}\n\nfunction opTya(state: CpuInterface.State): void {\n    state.a = state.y;\n    setFlagsNZ(state, state.a);\n}\n\nfunction opAlr(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const i = state.a & operand;\n    state.a = i >>> 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (i & CpuInterface.Flags.c);\n}\n\nfunction opAxs(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = (state.a & state.x) + (~operand & 0xff) + 1;\n\n    state.x = value & 0xff;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.x & 0x80) |\n        (state.x & 0xff ? 0 : CpuInterface.Flags.z) |\n        (value >>> 8);\n}\n\nfunction opDcp(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = (bus.read(operand) + 0xff) & 0xff;\n    bus.write(operand, value);\n\n    const diff = state.a + (~value & 0xff) + 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        (diff & 0xff ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n}\n\nfunction opLax(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a = operand;\n    state.x = operand;\n    setFlagsNZ(state, operand);\n}\n\nfunction opArr(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a = ((state.a & operand) >>> 1) | (state.flags & CpuInterface.Flags.c ? 0x80 : 0);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.c | CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.v)) |\n        ((state.a & 0x40) >>> 6) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (state.a & 0x80) |\n        ((state.a & 0x40) ^ ((state.a & 0x20) << 1));\n}\n\nfunction opSlo(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    let value = bus.read(operand);\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | (value >>> 7);\n    value = value << 1;\n\n    bus.write(operand, value);\n\n    state.a = state.a | value;\n    setFlagsNZ(state, state.a);\n}\n\nfunction opAax(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = state.x & state.a;\n    bus.write(operand, value);\n    setFlagsNZ(state, value);\n}\n\nfunction opLar(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.s = state.a = state.x = state.s & operand;\n    setFlagsNZ(state, state.a);\n}\n\nfunction opIsc(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = (bus.read(operand) + 1) & 0xff;\n    bus.write(operand, value);\n\n    opSbc(state, bus, value);\n}\n\nfunction opAac(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a &= operand;\n    setFlagsNZ(state, state.a);\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | ((state.a & 0x80) >>> 7);\n}\n\nfunction opAtx(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a &= operand;\n    state.x = state.a;\n    setFlagsNZ(state, state.a);\n}\n\nfunction opRra(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = (old >>> 1) | ((state.flags & CpuInterface.Flags.c) << 7);\n    bus.write(operand, value);\n\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | (old & CpuInterface.Flags.c);\n\n    opAdc(state, bus, value);\n}\n\nfunction opRla(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = ((old << 1) & 0xff) | (state.flags & CpuInterface.Flags.c);\n    bus.write(operand, value);\n\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | (old >>> 7);\n\n    opAnd(state, bus, value);\n}\n\nclass Cpu {\n    constructor(private _bus: BusInterface, private _rng?: RngInterface) {\n        this.reset();\n    }\n\n    setInterrupt(irq: boolean): Cpu {\n        this._interruptPending = irq;\n        return this;\n    }\n\n    isInterrupt(): boolean {\n        return this._interruptPending;\n    }\n\n    nmi(): Cpu {\n        this._nmiPending = true;\n        return this;\n    }\n\n    halt(): Cpu {\n        this._halted = true;\n        return this;\n    }\n\n    resume(): Cpu {\n        this._halted = false;\n        return this;\n    }\n\n    isHalt(): boolean {\n        return this._halted;\n    }\n\n    setInvalidInstructionCallback(callback: CpuInterface.InvalidInstructionCallbackInterface): Cpu {\n        this._invalidInstructionCallback = callback;\n        return this;\n    }\n\n    getInvalidInstructionCallback(): CpuInterface.InvalidInstructionCallbackInterface {\n        return this._invalidInstructionCallback;\n    }\n\n    getLastInstructionPointer(): number {\n        return this._lastInstructionPointer;\n    }\n\n    reset(): Cpu {\n        this.state.a = this._rng ? this._rng.int(0xff) : 0;\n        this.state.x = this._rng ? this._rng.int(0xff) : 0;\n        this.state.y = this._rng ? this._rng.int(0xff) : 0;\n        this.state.s = 0xfd;\n        this.state.p = this._rng ? this._rng.int(0xffff) : 0;\n        this.state.flags =\n            (this._rng ? this._rng.int(0xff) : 0) | CpuInterface.Flags.i | CpuInterface.Flags.e | CpuInterface.Flags.b;\n        this.state.irq = false;\n        this.state.nmi = false;\n\n        this.executionState = CpuInterface.ExecutionState.boot;\n        this._opCycles = 7;\n        this._interruptPending = false;\n        this._nmiPending = false;\n\n        this._instructionCallback = opBoot;\n\n        return this;\n    }\n\n    cycle(): Cpu {\n        if (this._halted) {\n            return this;\n        }\n\n        switch (this.executionState) {\n            case CpuInterface.ExecutionState.boot:\n            case CpuInterface.ExecutionState.execute:\n                if (--this._opCycles === 0) {\n                    if (this._dereference) {\n                        this._operand = this._bus.read(this._operand);\n                    }\n\n                    if (this._interuptCheck === InterruptCheck.beforeOp) {\n                        this._checkForInterrupts();\n                    }\n\n                    this._instructionCallback(this.state, this._bus, this._operand, this._currentAddressingMode);\n                    this.executionState = CpuInterface.ExecutionState.fetch;\n\n                    if (this._interuptCheck === InterruptCheck.endOfInstruction) {\n                        this._checkForInterrupts();\n                    }\n                }\n\n                break;\n\n            case CpuInterface.ExecutionState.fetch:\n                if (this.state.nmi) {\n                    this._instructionCallback = opNmi;\n                    this._opCycles = 6;\n                    this.state.nmi = this.state.irq = false;\n                    this._interuptCheck = InterruptCheck.beforeOp;\n                    this.executionState = CpuInterface.ExecutionState.execute;\n\n                    return this;\n                }\n\n                if (this.state.irq) {\n                    this._instructionCallback = opIrq;\n                    this._opCycles = 6;\n                    this.state.nmi = this.state.irq = false;\n                    this._interuptCheck = InterruptCheck.beforeOp;\n                    this.executionState = CpuInterface.ExecutionState.execute;\n\n                    return this;\n                }\n\n                this._fetch();\n                break;\n        }\n\n        return this;\n    }\n\n    private _fetch() {\n        const instruction = Instruction.opcodes[this._bus.read(this.state.p)];\n\n        let addressingMode = instruction.addressingMode,\n            dereference = false,\n            slowIndexedAccess = false;\n\n        this._lastInstructionPointer = this.state.p;\n        this._currentAddressingMode = addressingMode;\n        this._interuptCheck = InterruptCheck.endOfInstruction;\n\n        switch (instruction.operation) {\n            case Instruction.Operation.adc:\n                this._opCycles = 0;\n                this._instructionCallback = opAdc;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.and:\n                this._opCycles = 0;\n                this._instructionCallback = opAnd;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.asl:\n                if (addressingMode === Instruction.AddressingMode.implied) {\n                    this._opCycles = 1;\n                    this._instructionCallback = opAslAcc;\n                } else {\n                    this._opCycles = 3;\n                    this._instructionCallback = opAslMem;\n                    slowIndexedAccess = true;\n                }\n                break;\n\n            case Instruction.Operation.bcc:\n                if (this.state.flags & CpuInterface.Flags.c) {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                } else {\n                    this._instructionCallback = opJmp;\n                    this._opCycles = 0;\n                }\n                break;\n\n            case Instruction.Operation.bcs:\n                if (this.state.flags & CpuInterface.Flags.c) {\n                    this._instructionCallback = opJmp;\n                    this._opCycles = 0;\n                } else {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                }\n                break;\n\n            case Instruction.Operation.beq:\n                if (this.state.flags & CpuInterface.Flags.z) {\n                    this._instructionCallback = opJmp;\n                    this._opCycles = 0;\n                } else {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                }\n                break;\n\n            case Instruction.Operation.bit:\n                this._opCycles = 0;\n                this._instructionCallback = opBit;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.bmi:\n                if (this.state.flags & CpuInterface.Flags.n) {\n                    this._instructionCallback = opJmp;\n                    this._opCycles = 0;\n                } else {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                }\n                break;\n\n            case Instruction.Operation.bne:\n                if (this.state.flags & CpuInterface.Flags.z) {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                } else {\n                    this._instructionCallback = opJmp;\n                    this._opCycles = 0;\n                }\n                break;\n\n            case Instruction.Operation.bpl:\n                if (this.state.flags & CpuInterface.Flags.n) {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                } else {\n                    this._instructionCallback = opJmp;\n                    this._opCycles = 0;\n                }\n                break;\n\n            case Instruction.Operation.bvc:\n                if (this.state.flags & CpuInterface.Flags.v) {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                } else {\n                    this._instructionCallback = opJmp;\n                    this._opCycles = 0;\n                }\n                break;\n\n            case Instruction.Operation.bvs:\n                if (this.state.flags & CpuInterface.Flags.v) {\n                    this._instructionCallback = opJmp;\n                    this._opCycles = 0;\n                } else {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                }\n                break;\n\n            case Instruction.Operation.brk:\n                this._opCycles = 6;\n                this._instructionCallback = opBrk;\n                this._interuptCheck = InterruptCheck.beforeOp;\n                break;\n\n            case Instruction.Operation.clc:\n                this._opCycles = 1;\n                this._instructionCallback = opClc;\n                break;\n\n            case Instruction.Operation.cld:\n                this._opCycles = 1;\n                this._instructionCallback = opCld;\n                break;\n\n            case Instruction.Operation.cli:\n                this._opCycles = 1;\n                this._instructionCallback = opCli;\n                this._interuptCheck = InterruptCheck.beforeOp;\n                break;\n\n            case Instruction.Operation.clv:\n                this._opCycles = 1;\n                this._instructionCallback = opClv;\n                break;\n\n            case Instruction.Operation.cmp:\n                this._opCycles = 0;\n                this._instructionCallback = opCmp;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.cpx:\n                this._opCycles = 0;\n                this._instructionCallback = opCpx;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.cpy:\n                this._opCycles = 0;\n                this._instructionCallback = opCpy;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.dec:\n                this._opCycles = 3;\n                this._instructionCallback = opDec;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.dex:\n                this._opCycles = 1;\n                this._instructionCallback = opDex;\n                break;\n\n            case Instruction.Operation.dey:\n                this._opCycles = 1;\n                this._instructionCallback = opDey;\n                break;\n\n            case Instruction.Operation.eor:\n                this._opCycles = 0;\n                this._instructionCallback = opEor;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.inc:\n                this._opCycles = 3;\n                this._instructionCallback = opInc;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.inx:\n                this._opCycles = 1;\n                this._instructionCallback = opInx;\n                break;\n\n            case Instruction.Operation.iny:\n                this._opCycles = 1;\n                this._instructionCallback = opIny;\n                break;\n\n            case Instruction.Operation.jmp:\n                this._opCycles = 0;\n                this._instructionCallback = opJmp;\n                break;\n\n            case Instruction.Operation.jsr:\n                this._opCycles = 5;\n                this._instructionCallback = opJsr;\n                break;\n\n            case Instruction.Operation.lda:\n                this._opCycles = addressingMode === Instruction.AddressingMode.immediate ? 0 : 1;\n                this._instructionCallback = opLda;\n                break;\n\n            case Instruction.Operation.ldx:\n                this._opCycles = addressingMode === Instruction.AddressingMode.immediate ? 0 : 1;\n                this._instructionCallback = opLdx;\n                break;\n\n            case Instruction.Operation.ldy:\n                this._opCycles = addressingMode === Instruction.AddressingMode.immediate ? 0 : 1;\n                this._instructionCallback = opLdy;\n                break;\n\n            case Instruction.Operation.lsr:\n                if (addressingMode === Instruction.AddressingMode.implied) {\n                    this._opCycles = 1;\n                    this._instructionCallback = opLsrAcc;\n                } else {\n                    this._opCycles = 3;\n                    this._instructionCallback = opLsrMem;\n                    slowIndexedAccess = true;\n                }\n                break;\n\n            case Instruction.Operation.nop:\n                this._opCycles = 1;\n\n                this._instructionCallback = opNop;\n                break;\n\n            case Instruction.Operation.dop:\n            case Instruction.Operation.top:\n                this._opCycles = 0;\n                dereference = true;\n\n                this._instructionCallback = opNop;\n                break;\n\n            case Instruction.Operation.ora:\n                this._opCycles = 0;\n                this._instructionCallback = opOra;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.php:\n                this._opCycles = 2;\n                this._instructionCallback = opPhp;\n                break;\n\n            case Instruction.Operation.pha:\n                this._opCycles = 2;\n                this._instructionCallback = opPha;\n                break;\n\n            case Instruction.Operation.pla:\n                this._opCycles = 3;\n                this._instructionCallback = opPla;\n                break;\n\n            case Instruction.Operation.plp:\n                this._opCycles = 3;\n                this._instructionCallback = opPlp;\n                this._interuptCheck = InterruptCheck.beforeOp;\n                break;\n\n            case Instruction.Operation.rol:\n                if (addressingMode === Instruction.AddressingMode.implied) {\n                    this._opCycles = 1;\n                    this._instructionCallback = opRolAcc;\n                } else {\n                    this._opCycles = 3;\n                    this._instructionCallback = opRolMem;\n                    slowIndexedAccess = true;\n                }\n                break;\n\n            case Instruction.Operation.ror:\n                if (addressingMode === Instruction.AddressingMode.implied) {\n                    this._opCycles = 1;\n                    this._instructionCallback = opRorAcc;\n                } else {\n                    this._opCycles = 3;\n                    this._instructionCallback = opRorMem;\n                    slowIndexedAccess = true;\n                }\n                break;\n\n            case Instruction.Operation.rti:\n                this._opCycles = 5;\n                this._instructionCallback = opRti;\n                break;\n\n            case Instruction.Operation.rts:\n                this._opCycles = 5;\n                this._instructionCallback = opRts;\n                break;\n\n            case Instruction.Operation.sbc:\n                this._opCycles = 0;\n                this._instructionCallback = opSbc;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.sec:\n                this._opCycles = 1;\n                this._instructionCallback = opSec;\n                break;\n\n            case Instruction.Operation.sed:\n                this._opCycles = 1;\n                this._instructionCallback = opSed;\n                break;\n\n            case Instruction.Operation.sei:\n                this._opCycles = 1;\n                this._instructionCallback = opSei;\n                this._interuptCheck = InterruptCheck.beforeOp;\n                break;\n\n            case Instruction.Operation.sta:\n                this._opCycles = 1;\n                this._instructionCallback = opSta;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.stx:\n                this._opCycles = 1;\n                this._instructionCallback = opStx;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.sty:\n                this._opCycles = 1;\n                this._instructionCallback = opSty;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.tax:\n                this._opCycles = 1;\n                this._instructionCallback = opTax;\n                break;\n\n            case Instruction.Operation.tay:\n                this._opCycles = 1;\n                this._instructionCallback = opTay;\n                break;\n\n            case Instruction.Operation.tsx:\n                this._opCycles = 1;\n                this._instructionCallback = opTsx;\n                break;\n\n            case Instruction.Operation.txa:\n                this._opCycles = 1;\n                this._instructionCallback = opTxa;\n                break;\n\n            case Instruction.Operation.txs:\n                this._opCycles = 1;\n                this._instructionCallback = opTxs;\n                break;\n\n            case Instruction.Operation.tya:\n                this._opCycles = 1;\n                this._instructionCallback = opTya;\n                break;\n\n            case Instruction.Operation.arr:\n                this._opCycles = 0;\n                this._instructionCallback = opArr;\n                break;\n\n            case Instruction.Operation.alr:\n                this._opCycles = 0;\n                this._instructionCallback = opAlr;\n                break;\n\n            case Instruction.Operation.axs:\n                this._opCycles = 0;\n                this._instructionCallback = opAxs;\n                break;\n\n            case Instruction.Operation.dcp:\n                this._opCycles = 3;\n                this._instructionCallback = opDcp;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.lax:\n                this._opCycles = 0;\n                this._instructionCallback = opLax;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.slo:\n                this._opCycles = 2;\n                this._instructionCallback = opSlo;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.aax:\n                this._opCycles = 1;\n                this._instructionCallback = opAax;\n                break;\n\n            case Instruction.Operation.lar:\n                this._opCycles = 0;\n                this._instructionCallback = opLar;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.isc:\n                this._opCycles = 3;\n                this._instructionCallback = opIsc;\n                break;\n\n            case Instruction.Operation.aac:\n                this._opCycles = 0;\n                this._instructionCallback = opAac;\n                break;\n\n            case Instruction.Operation.atx:\n                this._opCycles = 0;\n                this._instructionCallback = opAtx;\n                break;\n\n            case Instruction.Operation.rra:\n                this._opCycles = 3;\n                dereference = false;\n                slowIndexedAccess = true;\n                this._instructionCallback = opRra;\n                break;\n\n            case Instruction.Operation.rla:\n                this._opCycles = 3;\n                dereference = false;\n                slowIndexedAccess = true;\n                this._instructionCallback = opRla;\n                break;\n\n            default:\n                if (this._invalidInstructionCallback) {\n                    this._invalidInstructionCallback(this);\n                }\n                return;\n        }\n\n        this.state.p = (this.state.p + 1) & 0xffff;\n\n        let value: number, base: number;\n\n        switch (addressingMode) {\n            case Instruction.AddressingMode.immediate:\n                this._operand = this._bus.read(this.state.p);\n                dereference = false;\n                this.state.p = (this.state.p + 1) & 0xffff;\n                this._opCycles++;\n                break;\n\n            case Instruction.AddressingMode.zeroPage:\n                this._operand = this._bus.read(this.state.p);\n                this.state.p = (this.state.p + 1) & 0xffff;\n                this._opCycles++;\n                break;\n\n            case Instruction.AddressingMode.absolute:\n                this._operand = this._bus.readWord(this.state.p);\n                this.state.p = (this.state.p + 2) & 0xffff;\n                this._opCycles += 2;\n                break;\n\n            case Instruction.AddressingMode.indirect:\n                value = this._bus.readWord(this.state.p);\n                if ((value & 0xff) === 0xff) {\n                    this._operand = this._bus.read(value) + (this._bus.read(value & 0xff00) << 8);\n                } else {\n                    this._operand = this._bus.readWord(value);\n                }\n                this.state.p = (this.state.p + 2) & 0xffff;\n                this._opCycles += 4;\n                break;\n\n            case Instruction.AddressingMode.relative:\n                value = this._bus.read(this.state.p);\n                value = value & 0x80 ? -(~(value - 1) & 0xff) : value;\n                this._operand = (this.state.p + value + 0x10001) & 0xffff;\n                this.state.p = (this.state.p + 1) & 0xffff;\n                this._opCycles += (this._operand & 0xff00) !== (this.state.p & 0xff00) ? 3 : 2;\n                break;\n\n            case Instruction.AddressingMode.zeroPageX:\n                base = this._bus.read(this.state.p);\n                this._bus.read(base);\n\n                this._operand = (base + this.state.x) & 0xff;\n                this.state.p = (this.state.p + 1) & 0xffff;\n                this._opCycles += 2;\n                break;\n\n            case Instruction.AddressingMode.absoluteX:\n                value = this._bus.readWord(this.state.p);\n                this._operand = (value + this.state.x) & 0xffff;\n\n                if ((this._operand & 0xff00) !== (value & 0xff00)) {\n                    this._bus.read((value & 0xff00) | (this._operand & 0xff));\n                }\n\n                this._opCycles += slowIndexedAccess || (this._operand & 0xff00) !== (value & 0xff00) ? 3 : 2;\n                this.state.p = (this.state.p + 2) & 0xffff;\n                break;\n\n            case Instruction.AddressingMode.zeroPageY:\n                base = this._bus.read(this.state.p);\n                this._bus.read(base);\n\n                this._operand = (base + this.state.y) & 0xff;\n                this.state.p = (this.state.p + 1) & 0xffff;\n                this._opCycles += 2;\n                break;\n\n            case Instruction.AddressingMode.absoluteY:\n                value = this._bus.readWord(this.state.p);\n                this._operand = (value + this.state.y) & 0xffff;\n\n                if ((this._operand & 0xff00) !== (value & 0xff00)) {\n                    this._bus.read((value & 0xff00) | (this._operand & 0xff));\n                }\n\n                this._opCycles += slowIndexedAccess || (this._operand & 0xff00) !== (value & 0xff00) ? 3 : 2;\n                this.state.p = (this.state.p + 2) & 0xffff;\n                break;\n\n            case Instruction.AddressingMode.indexedIndirectX:\n                base = this._bus.read(this.state.p);\n                this._bus.read(base);\n\n                value = (base + this.state.x) & 0xff;\n\n                if (value === 0xff) {\n                    this._operand = this._bus.read(0xff) + (this._bus.read(0x00) << 8);\n                } else {\n                    this._operand = this._bus.readWord(value);\n                }\n\n                this._opCycles += 4;\n                this.state.p = (this.state.p + 1) & 0xffff;\n                break;\n\n            case Instruction.AddressingMode.indirectIndexedY:\n                value = this._bus.read(this.state.p);\n\n                if (value === 0xff) {\n                    value = this._bus.read(0xff) + (this._bus.read(0x00) << 8);\n                } else {\n                    value = this._bus.readWord(value);\n                }\n\n                this._operand = (value + this.state.y) & 0xffff;\n\n                if ((this._operand & 0xff00) !== (value & 0xff00)) {\n                    this._bus.read((value & 0xff00) | (this._operand & 0xff));\n                }\n\n                this._opCycles += slowIndexedAccess || (value & 0xff00) !== (this._operand & 0xff00) ? 4 : 3;\n                this.state.p = (this.state.p + 1) & 0xffff;\n                break;\n        }\n\n        this._dereference = dereference;\n        if (dereference) {\n            this._opCycles++;\n        }\n\n        this.executionState = CpuInterface.ExecutionState.execute;\n    }\n\n    private _checkForInterrupts(): void {\n        if (this._nmiPending) {\n            this.state.irq = false;\n            this.state.nmi = true;\n            this._nmiPending = false;\n        }\n\n        if (this._interruptPending && !this.state.nmi && !(this.state.flags & CpuInterface.Flags.i)) {\n            this.state.irq = true;\n        }\n    }\n\n    executionState: CpuInterface.ExecutionState = CpuInterface.ExecutionState.boot;\n    state: CpuInterface.State = new CpuInterface.State();\n\n    private _opCycles: number = 0;\n    private _instructionCallback: InstructionCallbackInterface = null;\n    private _invalidInstructionCallback: CpuInterface.InvalidInstructionCallbackInterface = null;\n\n    private _interruptPending: boolean = false;\n    private _nmiPending: boolean = false;\n    private _interuptCheck = InterruptCheck.endOfInstruction;\n\n    private _halted: boolean = false;\n\n    private _operand: number = 0;\n    private _lastInstructionPointer: number = 0;\n    private _currentAddressingMode: Instruction.AddressingMode = Instruction.AddressingMode.invalid;\n\n    private _dereference = false;\n}\n\ninterface InstructionCallbackInterface {\n    (\n        state?: CpuInterface.State,\n        bus?: BusInterface,\n        operand?: number,\n        addressingMode?: Instruction.AddressingMode\n    ): void;\n}\n\nexport { Cpu as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\ninterface CpuInterface {\n    setInterrupt(irq: boolean): CpuInterface;\n\n    isInterrupt(): boolean;\n\n    nmi(): CpuInterface;\n\n    halt(): CpuInterface;\n\n    resume(): CpuInterface;\n\n    isHalt(): boolean;\n\n    setInvalidInstructionCallback(callback: CpuInterface.InvalidInstructionCallbackInterface): CpuInterface;\n\n    getInvalidInstructionCallback(): CpuInterface.InvalidInstructionCallbackInterface;\n\n    getLastInstructionPointer(): number;\n\n    reset(): CpuInterface;\n\n    cycle(): CpuInterface;\n\n    executionState: CpuInterface.ExecutionState;\n    state: CpuInterface.State;\n}\n\nnamespace CpuInterface {\n    export const enum ExecutionState {\n        boot,\n        fetch,\n        execute\n    }\n\n    export class State {\n        a: number = 0;\n        x: number = 0;\n        y: number = 0;\n        s: number = 0;\n        p: number = 0;\n        flags: number = 0;\n\n        irq = false;\n        nmi = false;\n    }\n\n    export const enum Flags {\n        c = 0x01, // carry\n        z = 0x02, // zero\n        i = 0x04, // interrupt\n        d = 0x08, // decimal mode\n        b = 0x10, // break\n        e = 0x20, // reserved\n        v = 0x40, // overflow\n        n = 0x80 // sign\n    }\n\n    export interface InvalidInstructionCallbackInterface {\n        (cpu?: CpuInterface): void;\n    }\n}\n\nexport { CpuInterface as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Instruction from './Instruction';\nimport BusInterface from '../bus/BusInterface';\n\nimport * as hex from '../../tools/hex';\n\nclass Disassembler {\n    constructor(private _bus?: BusInterface) {}\n\n    setBus(bus: BusInterface): Disassembler {\n        this._bus = bus;\n        return this;\n    }\n\n    getBus(): BusInterface {\n        return this._bus;\n    }\n\n    disassembleAt(address: number): string {\n        const instruction = Instruction.opcodes[this._peek(address)],\n            operation = Instruction.OperationMap[instruction.operation].toUpperCase();\n\n        const read8 = (a: number = address + 1) => hex.encode(this._peek(a), 2);\n\n        const read16 = (a: number = address + 1) => hex.encode(this._peek(a) + (this._peek(a + 1) << 8), 4);\n\n        const decodeSint8 = (value: number) => (value & 0x80 ? -(~(value - 1) & 0xff) : value);\n\n        switch (instruction.effectiveAddressingMode) {\n            case Instruction.AddressingMode.implied:\n                return operation;\n\n            case Instruction.AddressingMode.immediate:\n                return operation + ' #' + read8();\n\n            case Instruction.AddressingMode.zeroPage:\n                return operation + ' ' + read8();\n\n            case Instruction.AddressingMode.absolute:\n                return operation + ' ' + read16();\n\n            case Instruction.AddressingMode.indirect:\n                return operation + ' (' + read16() + ')';\n\n            case Instruction.AddressingMode.relative:\n                const distance = decodeSint8(this._peek(address + 1));\n\n                return (\n                    operation +\n                    ' ' +\n                    hex.encode(distance, 2) +\n                    ' ; -> ' +\n                    hex.encode((0x10002 + address + distance) % 0x10000, 4)\n                );\n\n            case Instruction.AddressingMode.zeroPageX:\n                return operation + ' ' + read8() + ',X';\n\n            case Instruction.AddressingMode.absoluteX:\n                return operation + ' ' + read16() + ',X';\n\n            case Instruction.AddressingMode.indexedIndirectX:\n                return operation + ' (' + read8() + ',X)';\n\n            case Instruction.AddressingMode.zeroPageY:\n                return operation + ' ' + read8() + ',Y';\n\n            case Instruction.AddressingMode.absoluteY:\n                return operation + ' ' + read16() + ',Y';\n\n            case Instruction.AddressingMode.indirectIndexedY:\n                return operation + ' (' + read8() + '),Y';\n\n            default:\n                return 'INVALID';\n        }\n    }\n\n    private _peek(address: number) {\n        return this._bus.peek(address % 0x10000);\n    }\n}\n\nexport { Disassembler as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nclass Instruction {\n    constructor(\n        public readonly operation: Instruction.Operation,\n        public readonly addressingMode: Instruction.AddressingMode,\n        public readonly effectiveAddressingMode = addressingMode\n    ) {}\n\n    getSize(): number {\n        switch (this.effectiveAddressingMode) {\n            case Instruction.AddressingMode.immediate:\n            case Instruction.AddressingMode.zeroPage:\n            case Instruction.AddressingMode.zeroPageX:\n            case Instruction.AddressingMode.zeroPageY:\n            case Instruction.AddressingMode.indexedIndirectX:\n            case Instruction.AddressingMode.indirectIndexedY:\n            case Instruction.AddressingMode.relative:\n                return 2;\n\n            case Instruction.AddressingMode.absolute:\n            case Instruction.AddressingMode.absoluteX:\n            case Instruction.AddressingMode.absoluteY:\n            case Instruction.AddressingMode.indirect:\n                return 3;\n\n            default:\n                return 1;\n        }\n    }\n}\n\nnamespace Instruction {\n    export const enum Operation {\n        adc,\n        and,\n        asl,\n        bcc,\n        bcs,\n        beq,\n        bit,\n        bmi,\n        bne,\n        bpl,\n        brk,\n        bvc,\n        bvs,\n        clc,\n        cld,\n        cli,\n        clv,\n        cmp,\n        cpx,\n        cpy,\n        dec,\n        dex,\n        dey,\n        eor,\n        inc,\n        inx,\n        iny,\n        jmp,\n        jsr,\n        lda,\n        ldx,\n        ldy,\n        lsr,\n        nop,\n        ora,\n        pha,\n        php,\n        pla,\n        plp,\n        rol,\n        ror,\n        rti,\n        rts,\n        sbc,\n        sec,\n        sed,\n        sei,\n        sta,\n        stx,\n        sty,\n        tax,\n        tay,\n        tsx,\n        txa,\n        txs,\n        tya,\n        // undocumented operations\n        dop,\n        top,\n        alr,\n        axs,\n        dcp,\n        lax,\n        arr,\n        slo,\n        aax,\n        lar,\n        isc,\n        aac,\n        atx,\n        rra,\n        rla,\n        invalid\n    }\n\n    export enum OperationMap {\n        adc,\n        and,\n        asl,\n        bcc,\n        bcs,\n        beq,\n        bit,\n        bmi,\n        bne,\n        bpl,\n        brk,\n        bvc,\n        bvs,\n        clc,\n        cld,\n        cli,\n        clv,\n        cmp,\n        cpx,\n        cpy,\n        dec,\n        dex,\n        dey,\n        eor,\n        inc,\n        inx,\n        iny,\n        jmp,\n        jsr,\n        lda,\n        ldx,\n        ldy,\n        lsr,\n        nop,\n        ora,\n        pha,\n        php,\n        pla,\n        plp,\n        rol,\n        ror,\n        rti,\n        rts,\n        sbc,\n        sec,\n        sed,\n        sei,\n        sta,\n        stx,\n        sty,\n        tax,\n        tay,\n        tsx,\n        txa,\n        txs,\n        tya,\n        // undocumented operations\n        dop,\n        top,\n        alr,\n        axs,\n        dcp,\n        lax,\n        arr,\n        slo,\n        aax,\n        lar,\n        isc,\n        aac,\n        atx,\n        rra,\n        rla,\n        invalid\n    }\n\n    export const enum AddressingMode {\n        implied,\n        immediate,\n        zeroPage,\n        absolute,\n        indirect,\n        relative,\n        zeroPageX,\n        absoluteX,\n        indexedIndirectX,\n        zeroPageY,\n        absoluteY,\n        indirectIndexedY,\n        invalid\n    }\n\n    export const opcodes = new Array<Instruction>(256);\n}\n\nexport { Instruction as default };\n\n// Opcodes init\n\nnamespace Instruction {\n    export namespace __init {\n        for (let i = 0; i < 256; i++) {\n            opcodes[i] = new Instruction(Operation.invalid, AddressingMode.invalid);\n        }\n\n        let operation: Operation, addressingMode: AddressingMode, opcode: number;\n\n        for (let i = 0; i < 8; i++) {\n            switch (i) {\n                case 0:\n                    operation = Operation.ora;\n                    break;\n                case 1:\n                    operation = Operation.and;\n                    break;\n                case 2:\n                    operation = Operation.eor;\n                    break;\n                case 3:\n                    operation = Operation.adc;\n                    break;\n                case 4:\n                    operation = Operation.sta;\n                    break;\n                case 5:\n                    operation = Operation.lda;\n                    break;\n                case 6:\n                    operation = Operation.cmp;\n                    break;\n                case 7:\n                    operation = Operation.sbc;\n                    break;\n            }\n            for (let j = 0; j < 8; j++) {\n                switch (j) {\n                    case 0:\n                        addressingMode = AddressingMode.indexedIndirectX;\n                        break;\n                    case 1:\n                        addressingMode = AddressingMode.zeroPage;\n                        break;\n                    case 2:\n                        addressingMode = AddressingMode.immediate;\n                        break;\n                    case 3:\n                        addressingMode = AddressingMode.absolute;\n                        break;\n                    case 4:\n                        addressingMode = AddressingMode.indirectIndexedY;\n                        break;\n                    case 5:\n                        addressingMode = AddressingMode.zeroPageX;\n                        break;\n                    case 6:\n                        addressingMode = AddressingMode.absoluteY;\n                        break;\n                    case 7:\n                        addressingMode = AddressingMode.absoluteX;\n                        break;\n                }\n\n                if (operation === Operation.sta && addressingMode === AddressingMode.immediate) {\n                    addressingMode = AddressingMode.invalid;\n                }\n\n                if (operation !== Operation.invalid && addressingMode !== AddressingMode.invalid) {\n                    opcode = (i << 5) | (j << 2) | 1;\n                    opcodes[opcode] = new Instruction(operation, addressingMode);\n                }\n            }\n        }\n\n        function set(\n            _opcode: number,\n            _operation: Operation,\n            _addressingMode: AddressingMode,\n            _effectiveAdressingMode?: AddressingMode\n        ): void {\n            if (opcodes[_opcode].operation !== Operation.invalid) {\n                throw new Error('entry for opcode ' + _opcode + ' already exists');\n            }\n\n            opcodes[_opcode] = new Instruction(_operation, _addressingMode, _effectiveAdressingMode);\n        }\n\n        set(0x06, Operation.asl, AddressingMode.zeroPage);\n        set(0x0a, Operation.asl, AddressingMode.implied);\n        set(0x0e, Operation.asl, AddressingMode.absolute);\n        set(0x16, Operation.asl, AddressingMode.zeroPageX);\n        set(0x1e, Operation.asl, AddressingMode.absoluteX);\n\n        set(0x26, Operation.rol, AddressingMode.zeroPage);\n        set(0x2a, Operation.rol, AddressingMode.implied);\n        set(0x2e, Operation.rol, AddressingMode.absolute);\n        set(0x36, Operation.rol, AddressingMode.zeroPageX);\n        set(0x3e, Operation.rol, AddressingMode.absoluteX);\n\n        set(0x46, Operation.lsr, AddressingMode.zeroPage);\n        set(0x4a, Operation.lsr, AddressingMode.implied);\n        set(0x4e, Operation.lsr, AddressingMode.absolute);\n        set(0x56, Operation.lsr, AddressingMode.zeroPageX);\n        set(0x5e, Operation.lsr, AddressingMode.absoluteX);\n\n        set(0x66, Operation.ror, AddressingMode.zeroPage);\n        set(0x6a, Operation.ror, AddressingMode.implied);\n        set(0x6e, Operation.ror, AddressingMode.absolute);\n        set(0x76, Operation.ror, AddressingMode.zeroPageX);\n        set(0x7e, Operation.ror, AddressingMode.absoluteX);\n\n        set(0x86, Operation.stx, AddressingMode.zeroPage);\n        set(0x8e, Operation.stx, AddressingMode.absolute);\n        set(0x96, Operation.stx, AddressingMode.zeroPageY);\n\n        set(0xa2, Operation.ldx, AddressingMode.immediate);\n        set(0xa6, Operation.ldx, AddressingMode.zeroPage);\n        set(0xae, Operation.ldx, AddressingMode.absolute);\n        set(0xb6, Operation.ldx, AddressingMode.zeroPageY);\n        set(0xbe, Operation.ldx, AddressingMode.absoluteY);\n\n        set(0xc6, Operation.dec, AddressingMode.zeroPage);\n        set(0xce, Operation.dec, AddressingMode.absolute);\n        set(0xd6, Operation.dec, AddressingMode.zeroPageX);\n        set(0xde, Operation.dec, AddressingMode.absoluteX);\n\n        set(0xe6, Operation.inc, AddressingMode.zeroPage);\n        set(0xee, Operation.inc, AddressingMode.absolute);\n        set(0xf6, Operation.inc, AddressingMode.zeroPageX);\n        set(0xfe, Operation.inc, AddressingMode.absoluteX);\n\n        set(0x24, Operation.bit, AddressingMode.zeroPage);\n        set(0x2c, Operation.bit, AddressingMode.absolute);\n\n        set(0x4c, Operation.jmp, AddressingMode.absolute);\n        set(0x6c, Operation.jmp, AddressingMode.indirect);\n\n        set(0x84, Operation.sty, AddressingMode.zeroPage);\n        set(0x8c, Operation.sty, AddressingMode.absolute);\n        set(0x94, Operation.sty, AddressingMode.zeroPageX);\n\n        set(0xa0, Operation.ldy, AddressingMode.immediate);\n        set(0xa4, Operation.ldy, AddressingMode.zeroPage);\n        set(0xac, Operation.ldy, AddressingMode.absolute);\n        set(0xb4, Operation.ldy, AddressingMode.zeroPageX);\n        set(0xbc, Operation.ldy, AddressingMode.absoluteX);\n\n        set(0xc0, Operation.cpy, AddressingMode.immediate);\n        set(0xc4, Operation.cpy, AddressingMode.zeroPage);\n        set(0xcc, Operation.cpy, AddressingMode.absolute);\n\n        set(0xe0, Operation.cpx, AddressingMode.immediate);\n        set(0xe4, Operation.cpx, AddressingMode.zeroPage);\n        set(0xec, Operation.cpx, AddressingMode.absolute);\n\n        set(0x10, Operation.bpl, AddressingMode.relative);\n        set(0x30, Operation.bmi, AddressingMode.relative);\n        set(0x50, Operation.bvc, AddressingMode.relative);\n        set(0x70, Operation.bvs, AddressingMode.relative);\n        set(0x90, Operation.bcc, AddressingMode.relative);\n        set(0xb0, Operation.bcs, AddressingMode.relative);\n        set(0xd0, Operation.bne, AddressingMode.relative);\n        set(0xf0, Operation.beq, AddressingMode.relative);\n\n        set(0x00, Operation.brk, AddressingMode.implied);\n        set(0x20, Operation.jsr, AddressingMode.implied, AddressingMode.absolute);\n        set(0x40, Operation.rti, AddressingMode.implied);\n        set(0x60, Operation.rts, AddressingMode.implied);\n        set(0x08, Operation.php, AddressingMode.implied);\n        set(0x28, Operation.plp, AddressingMode.implied);\n        set(0x48, Operation.pha, AddressingMode.implied);\n        set(0x68, Operation.pla, AddressingMode.implied);\n        set(0x88, Operation.dey, AddressingMode.implied);\n        set(0xa8, Operation.tay, AddressingMode.implied);\n        set(0xc8, Operation.iny, AddressingMode.implied);\n        set(0xe8, Operation.inx, AddressingMode.implied);\n        set(0x18, Operation.clc, AddressingMode.implied);\n        set(0x38, Operation.sec, AddressingMode.implied);\n        set(0x58, Operation.cli, AddressingMode.implied);\n        set(0x78, Operation.sei, AddressingMode.implied);\n        set(0x98, Operation.tya, AddressingMode.implied);\n        set(0xb8, Operation.clv, AddressingMode.implied);\n        set(0xd8, Operation.cld, AddressingMode.implied);\n        set(0xf8, Operation.sed, AddressingMode.implied);\n        set(0x8a, Operation.txa, AddressingMode.implied);\n        set(0x9a, Operation.txs, AddressingMode.implied);\n        set(0xaa, Operation.tax, AddressingMode.implied);\n        set(0xba, Operation.tsx, AddressingMode.implied);\n        set(0xca, Operation.dex, AddressingMode.implied);\n        set(0xea, Operation.nop, AddressingMode.implied);\n\n        // instructions for undocumented opcodes\n        set(0x1a, Operation.nop, AddressingMode.implied);\n        set(0x3a, Operation.nop, AddressingMode.implied);\n        set(0x5a, Operation.nop, AddressingMode.implied);\n        set(0x7a, Operation.nop, AddressingMode.implied);\n        set(0xda, Operation.nop, AddressingMode.implied);\n        set(0xfa, Operation.nop, AddressingMode.implied);\n\n        set(0x04, Operation.dop, AddressingMode.zeroPage);\n        set(0x14, Operation.dop, AddressingMode.zeroPageX);\n        set(0x34, Operation.dop, AddressingMode.zeroPageX);\n        set(0x44, Operation.dop, AddressingMode.zeroPage);\n        set(0x54, Operation.dop, AddressingMode.zeroPageX);\n        set(0x64, Operation.dop, AddressingMode.zeroPage);\n        set(0x74, Operation.dop, AddressingMode.zeroPageX);\n        set(0x80, Operation.dop, AddressingMode.immediate);\n        set(0x82, Operation.dop, AddressingMode.immediate);\n        set(0x89, Operation.dop, AddressingMode.immediate);\n        set(0xc2, Operation.dop, AddressingMode.immediate);\n        set(0xd4, Operation.dop, AddressingMode.zeroPageX);\n        set(0xe2, Operation.dop, AddressingMode.immediate);\n        set(0xf4, Operation.dop, AddressingMode.zeroPageX);\n\n        set(0x0c, Operation.top, AddressingMode.absolute);\n        set(0x1c, Operation.top, AddressingMode.absoluteX);\n        set(0x3c, Operation.top, AddressingMode.absoluteX);\n        set(0x5c, Operation.top, AddressingMode.absoluteX);\n        set(0x7c, Operation.top, AddressingMode.absoluteX);\n        set(0xdc, Operation.top, AddressingMode.absoluteX);\n        set(0xfc, Operation.top, AddressingMode.absoluteX);\n\n        set(0xeb, Operation.sbc, AddressingMode.immediate);\n\n        set(0x4b, Operation.alr, AddressingMode.immediate);\n\n        set(0xcb, Operation.axs, AddressingMode.immediate);\n\n        set(0xc7, Operation.dcp, AddressingMode.zeroPage);\n        set(0xd7, Operation.dcp, AddressingMode.zeroPageX);\n        set(0xcf, Operation.dcp, AddressingMode.absolute);\n        set(0xdf, Operation.dcp, AddressingMode.absoluteX);\n        set(0xdb, Operation.dcp, AddressingMode.absoluteY);\n        set(0xc3, Operation.dcp, AddressingMode.indexedIndirectX);\n        set(0xd3, Operation.dcp, AddressingMode.indirectIndexedY);\n\n        set(0xa7, Operation.lax, AddressingMode.zeroPage);\n        set(0xb7, Operation.lax, AddressingMode.zeroPageY);\n        set(0xaf, Operation.lax, AddressingMode.absolute);\n        set(0xbf, Operation.lax, AddressingMode.absoluteY);\n        set(0xa3, Operation.lax, AddressingMode.indexedIndirectX);\n        set(0xb3, Operation.lax, AddressingMode.indirectIndexedY);\n\n        set(0x6b, Operation.arr, AddressingMode.immediate);\n\n        set(0x07, Operation.slo, AddressingMode.zeroPage);\n        set(0x17, Operation.slo, AddressingMode.zeroPageX);\n        set(0x0f, Operation.slo, AddressingMode.absolute);\n        set(0x1f, Operation.slo, AddressingMode.absoluteX);\n        set(0x1b, Operation.slo, AddressingMode.absoluteY);\n        set(0x03, Operation.slo, AddressingMode.indexedIndirectX);\n        set(0x13, Operation.slo, AddressingMode.indirectIndexedY);\n\n        set(0x87, Operation.aax, AddressingMode.zeroPage);\n        set(0x97, Operation.aax, AddressingMode.zeroPageY);\n        set(0x83, Operation.aax, AddressingMode.indexedIndirectX);\n        set(0x8f, Operation.aax, AddressingMode.absolute);\n\n        set(0xbb, Operation.lar, AddressingMode.absoluteY);\n\n        set(0xe7, Operation.isc, AddressingMode.zeroPage);\n        set(0xf7, Operation.isc, AddressingMode.zeroPageX);\n        set(0xef, Operation.isc, AddressingMode.absolute);\n        set(0xff, Operation.isc, AddressingMode.absoluteX);\n        set(0xfb, Operation.isc, AddressingMode.absoluteY);\n        set(0xe3, Operation.isc, AddressingMode.indexedIndirectX);\n        set(0xf3, Operation.isc, AddressingMode.indirectIndexedY);\n\n        set(0x0b, Operation.aac, AddressingMode.immediate);\n        set(0x2b, Operation.aac, AddressingMode.immediate);\n\n        set(0xab, Operation.atx, AddressingMode.immediate);\n\n        set(0x67, Operation.rra, AddressingMode.zeroPage);\n        set(0x77, Operation.rra, AddressingMode.zeroPageX);\n        set(0x6f, Operation.rra, AddressingMode.absolute);\n        set(0x7f, Operation.rra, AddressingMode.absoluteX);\n        set(0x7b, Operation.rra, AddressingMode.absoluteY);\n        set(0x63, Operation.rra, AddressingMode.indexedIndirectX);\n        set(0x73, Operation.rra, AddressingMode.indirectIndexedY);\n\n        set(0x27, Operation.rla, AddressingMode.zeroPage);\n        set(0x37, Operation.rla, AddressingMode.zeroPageX);\n        set(0x2f, Operation.rla, AddressingMode.absolute);\n        set(0x3f, Operation.rla, AddressingMode.absoluteX);\n        set(0x3b, Operation.rla, AddressingMode.absoluteY);\n        set(0x23, Operation.rla, AddressingMode.indexedIndirectX);\n        set(0x33, Operation.rla, AddressingMode.indirectIndexedY);\n    }\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport BoardInterface from '../board/BoardInterface';\nimport CpuInterface from '../cpu/CpuInterface';\nimport Cpu from '../cpu/Cpu';\nimport Memory from './Memory';\nimport BusInterface from '../bus/BusInterface';\nimport TimerInterface from '../board/TimerInterface';\nimport SchedulerInterface from '../../tools/scheduler/SchedulerInterface';\nimport TaskInterface from '../../tools/scheduler/TaskInterface';\n\nclass Board implements BoardInterface {\n    constructor(cpuFactory?: (bus: BusInterface) => CpuInterface) {\n        this.cpuClock = this.clock;\n\n        this._bus = this._createBus();\n\n        if (typeof cpuFactory === 'undefined') {\n            cpuFactory = bus => new Cpu(bus);\n        }\n\n        this._cpu = cpuFactory(this._bus);\n        this._cpu.setInvalidInstructionCallback(() => this._onInvalidInstruction());\n    }\n\n    getCpu(): CpuInterface {\n        return this._cpu;\n    }\n\n    getBus(): BusInterface {\n        return this._bus;\n    }\n\n    getTimer(): TimerInterface {\n        return this._timer;\n    }\n\n    reset(hard: boolean): Board {\n        this._cpu.reset();\n        this._bus.reset();\n\n        if (hard) {\n            this._bus.clear();\n        }\n\n        return this;\n    }\n\n    boot(): Board {\n        let clock = 0;\n\n        if (this._cpu.executionState !== CpuInterface.ExecutionState.boot) {\n            throw new Error('Already booted!');\n        }\n\n        while ((this._cpu.executionState as CpuInterface.ExecutionState) !== CpuInterface.ExecutionState.fetch) {\n            this._cpu.cycle();\n            clock++;\n        }\n\n        this.clock.dispatch(clock);\n        return this;\n    }\n\n    suspend(): void {}\n\n    resume(): void {}\n\n    triggerTrap(reason: BoardInterface.TrapReason, message?: string): Board {\n        this._stop();\n\n        this._trap = true;\n\n        if (this.trap.hasHandlers) {\n            this.trap.dispatch(new BoardInterface.TrapPayload(reason, this, message));\n        } else {\n            throw new Error(message);\n        }\n\n        return this;\n    }\n\n    getBoardStateDebug(): string {\n        return undefined;\n    }\n\n    setClockMode(clockMode: BoardInterface.ClockMode): Board {\n        this._clockMode = clockMode;\n\n        return this;\n    }\n\n    getClockMode(): BoardInterface.ClockMode {\n        return this._clockMode;\n    }\n\n    protected _createBus() {\n        return new Memory();\n    }\n\n    protected _tick(clocks: number): number {\n        let i = 0,\n            clock = 0;\n\n        this._trap = false;\n\n        while (i++ < clocks && !this._trap) {\n            this._cpu.cycle();\n            clock++;\n\n            if (\n                this._clockMode === BoardInterface.ClockMode.instruction &&\n                this._cpu.executionState === CpuInterface.ExecutionState.fetch &&\n                this.clock.hasHandlers\n            ) {\n                this.clock.dispatch(clock);\n                clock = 0;\n            }\n        }\n\n        if (clock > 0 && this.clock.hasHandlers) {\n            this.clock.dispatch(clock);\n        }\n\n        return clock;\n    }\n\n    protected _start(scheduler: SchedulerInterface, sliceHint = 100000) {\n        if (this._runTask) {\n            return;\n        }\n\n        this._sliceHint = sliceHint;\n\n        this._runTask = scheduler.start(this._executeSlice, this);\n    }\n\n    protected _executeSlice(board: Board) {\n        board._tick(board._sliceHint);\n    }\n\n    protected _stop() {\n        if (!this._runTask) {\n            return;\n        }\n\n        this._runTask.stop();\n\n        this._runTask = undefined;\n    }\n\n    protected _onInvalidInstruction() {\n        this.triggerTrap(BoardInterface.TrapReason.cpu, 'invalid instruction');\n    }\n\n    clock = new Event<number>();\n\n    cpuClock: Event<number>;\n\n    trap = new Event<BoardInterface.TrapPayload>();\n\n    protected _cpu: CpuInterface;\n    protected _bus: Memory;\n    protected _trap = false;\n    protected _sliceHint: number;\n    protected _runTask: TaskInterface;\n    protected _clockMode = BoardInterface.ClockMode.lazy;\n\n    protected _timer = {\n        tick: (clocks: number): number => this._tick(clocks),\n        start: (scheduler: SchedulerInterface, sliceHint?: number): void => this._start(scheduler, sliceHint),\n        stop: (): void => this._stop(),\n        isRunning: (): boolean => !!this._runTask\n    };\n}\n\nexport { Board as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport BusInterface from '../bus/BusInterface';\n\nclass Memory implements BusInterface {\n    constructor() {\n        this.clear();\n    }\n\n    reset(): void {}\n\n    clear(): void {\n        for (let i = 0; i < 0x10000; i++) {\n            this._data[i] = 0;\n        }\n    }\n\n    read(address: number): number {\n        return this._data[address];\n    }\n\n    peek(address: number): number {\n        return this._data[address];\n    }\n\n    readWord(address: number): number {\n        return this._data[address] + (this._data[(address + 1) & 0xffff] << 8);\n    }\n\n    write(address: number, value: number) {\n        this._data[address] = value;\n    }\n\n    poke(address: number, value: number) {\n        this._data[address] = value;\n    }\n\n    protected _data = new Uint8Array(0x10000);\n}\n\nexport { Memory as default };\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nexport function encode(value: number, width?: number): string {\n    let result = Math.abs(value).toString(2);\n\n    if (typeof width !== 'undefined') {\n        while (result.length < width) {\n            result = '0' + result;\n        }\n    }\n\n    return (value < 0 ? '-' : '') + '0b' + result;\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nfunction encodeWithPrefix(value: number, width?: number, signed = true, prefix = ''): string {\n    if (!signed && value < 0) {\n        return (\n            encodeWithPrefix(value >>> 16, width && width > 8 ? width - 4 : 4, false, prefix) +\n            encodeWithPrefix(value & 0xffff, 4)\n        );\n    }\n\n    let result = Math.abs(value)\n        .toString(16)\n        .toUpperCase();\n\n    if (typeof width !== 'undefined') {\n        while (result.length < width) {\n            result = '0' + result;\n        }\n    }\n\n    return (value < 0 ? '-' : '') + prefix + result;\n}\n\nexport function encode(value: number, width?: number, signed = true): string {\n    return encodeWithPrefix(value, width, signed, '$');\n}\n\nexport function decode(value: string): number {\n    const sign = value.match(/^-/) ? -1 : 1;\n\n    let stripped = value.replace(/^-/, '').toUpperCase();\n\n    if (stripped.match(/^0X[0-9A-F]+$/)) {\n        stripped = stripped.replace(/^0x/, '');\n    } else if (stripped.match(/^\\$[0-9A-F]+$/)) {\n        stripped = stripped.replace(/^\\$/, '');\n    } else {\n        throw new TypeError('invalid hex number ' + value);\n    }\n\n    return sign * parseInt(stripped, 16);\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport DebuggerCLI from '../cli/DebuggerCLI';\nimport JqtermCLIRunner from '../cli/JqtermCLIRunner';\nimport PrepackagedFilesystemProvider from '../fs/PrepackagedFilesystemProvider';\n\nexport function run(\n    fileBlob: PrepackagedFilesystemProvider.BlobInterface,\n    terminalElt: JQuery,\n    interruptButton: JQuery,\n    clearButton: JQuery\n) {\n    const fsProvider = new PrepackagedFilesystemProvider(fileBlob),\n        cli = new DebuggerCLI(fsProvider),\n        runner = new JqtermCLIRunner(cli, terminalElt, {\n            interruptButton,\n            clearButton\n        });\n\n    cli.allowQuit(false);\n    runner.startup();\n}\n"
  ]
}