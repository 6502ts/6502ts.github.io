{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/async-mutex/lib/Mutex.js","node_modules/async-mutex/lib/index.js","node_modules/microevent.ts/lib/Event.js","node_modules/microevent.ts/lib/index.js","node_modules/screenfull/dist/screenfull.js","node_modules/tslib/tslib.js","node_modules/worker-rpc/lib/RpcProvider.js","node_modules/worker-rpc/lib/index.js","src/machine/io/DigitalJoystick.ts","src/machine/io/Paddle.ts","src/machine/io/Switch.ts","src/machine/stella/Config.ts","src/machine/stella/ControlPanel.ts","src/machine/stella/cartridge/CartridgeInfo.ts","src/machine/stella/tia/ToneGenerator.ts","src/tools/AudioOutputBuffer.ts","src/tools/RingBuffer.ts","src/tools/base64.ts","src/tools/pool/Pool.ts","src/tools/pool/PoolMember.ts","src/web/driver/FullscreenVideo.ts","src/web/driver/Gamepad.ts","src/web/driver/MouseAsPaddle.ts","src/web/driver/SimpleCanvasVideo.ts","src/web/driver/WebAudio.ts","src/web/driver/audio/LinearResampler.ts","src/web/driver/audio/PCMChannel.ts","src/web/driver/audio/WaveformChannel.ts","src/web/driver/webgl/WebglVideo.ts","src/web/driver/webgl/shader.ts","src/web/embedded/stellerator/ControlPanelProxy.ts","src/web/embedded/stellerator/Stellerator.ts","src/web/embedded/stellerator/SwitchProxy.ts","src/web/embedded/stellerator/index.ts","src/web/stella/driver/KeyboardIO.ts","src/web/stella/driver/WebAudio.ts","src/web/stella/service/DriverManager.ts","src/web/stella/service/EmulationServiceInterface.ts","src/web/stella/service/worker/ControlProxy.ts","src/web/stella/service/worker/EmulationContext.ts","src/web/stella/service/worker/EmulationService.ts","src/web/stella/service/worker/PCMAudioProxy.ts","src/web/stella/service/worker/VideoProxy.ts","src/web/stella/service/worker/WaveformAudioProxy.ts","src/web/stella/service/worker/messages.ts"],"names":["f","exports","module","define","amd","window","global","self","this","$6502","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","Object","defineProperty","value","Mutex","_queue","_pending","prototype","isLocked","acquire","_this","ticket","Promise","resolve","push","_dispatchNext","runExclusive","callback","then","release","result","x","shift","bind","default","Mutex_1","factories","context","payload","getFactory","handlerCount","src","argsHandlers","argsContexts","Function","apply","concat","compileFactory","Event","hasHandlers","_handlers","_contexts","_createDispatcher","addHandler","handler","isHandlerAttached","_updateHasHandlers","removeHandler","idx","_getHandlerIndex","splice","undefined","dispatch","Event_1","document","isCommonjs","keyboardAllowed","Element","fn","val","fnMap","ret","eventNameMap","change","fullscreenchange","error","fullscreenerror","screenfull","request","elem","requestFullscreen","documentElement","test","navigator","userAgent","ALLOW_KEYBOARD_INPUT","exit","exitFullscreen","toggle","isFullscreen","onchange","on","onerror","event","eventName","addEventListener","off","removeEventListener","raw","defineProperties","get","Boolean","fullscreenElement","element","enumerable","enabled","fullscreenEnabled","__extends","__assign","__rest","__decorate","__param","__metadata","__awaiter","__generator","__exportStar","__values","__read","__spread","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","factory","root","createExporter","previous","create","__esModule","id","v","exporter","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","assign","arguments","indexOf","getOwnPropertySymbols","decorators","target","key","desc","c","getOwnPropertyDescriptor","Reflect","decorate","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","reject","fulfilled","step","next","rejected","done","body","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","op","TypeError","pop","m","ar","asyncIterator","q","resume","fulfill","settle","cooked","RpcProvider","microevent_ts_1","MessageType","_dispatch","_rpcTimeout","_rpcHandlers","_signalHandlers","_pendingTransactions","_nextTransactionId","message","type","signal","_handleSignal","rpc","_handeRpc","internal","_handleInternal","_raiseError","transfer","transactionId","transaction","timeoutHandle","setTimeout","_transactionTimeout","registerRpcHandler","registerSignalHandler","deregisterRpcHandler","deregisterSignalHandler","filter","h","forEach","reason","_clearTransaction","clearTimeout","RpcProvider_1","Switch_1","DigitalJoystick","_left","_right","_up","_down","_fire","getLeft","getRight","getUp","getDown","getFire","Paddle","valueChanged","_fireSwitch","_value","setValue","getValue","Switch","_state","stateChanged","beforeRead","read","peek","state","Config","config","tslib_1","tvMode","enableAudio","randomSeed","emulatePaddles","frameStart","pcmAudio","getClockHz","ControlPanel","_selectSwitch","_resetButton","_colorSwitch","_difficutlyP0","_difficutlyP1","getSelectSwitch","getResetButton","getColorSwitch","getDifficultySwitchP0","getDifficultySwitchP1","CartridgeInfo","CartridgeType","getAllTypes","vanilla_2k","vanilla_4k","bankswitch_8k_F8","bankswitch_8k_E0","bankswitch_8k_3F","bankswitch_8k_FE","bankswitch_8k_UA","bankswitch_8k_econobanking","bankswitch_12k_FA","bankswitch_8k_DPC","bankswitch_16k_F6","bankswitch_16k_E7","bankswitch_FA2","bankswitch_32k_F4","bankswitch_3E","bankswitch_64k_F0","bankswitch_64k_EF","bankswitch_supercharger","bankswitch_dpc_plus","bankswitch_cdf","unknown","describeCartridgeType","cartridgeType","Config_1","AudioOutputBuffer_1","base64_1","FREQUENCY_DIVISIORS","decode","POLY0","Int8Array","POLY1","POLY2","POLY4","POLY5","POLY9","POLY68","POLYS","ToneGenerator","_config","setConfig","getKey","tone","frequency","getBuffer","poly","content","Float32Array","sampleRate","count","offset","AudioOutputBuffer","_content","_sampleRate","getLength","getContent","getSampleRate","replaceUnderlyingBuffer","buffer","RingBuffer","_capacity","_size","_index","_buffer","size","item","clear","encodings","Uint8Array","__init","charCodeAt","decodeChar","data","nibbles","decodedSize","padding","getPadding","decoded","nibble","j","PoolMember_1","Pool","_factory","dispose","_pool","_poolSize","member","newItem","victim","_releaseMember","_disposeMember","_isAvailable","_isDisposed","position","_poolPosition","PoolMember","_releaseCB","_disposeCB","adopt","FullscreenVideoDriver","_videoDriver","_resizeListener","_adjustSizeForFullscreen","_changeListener","_onChange","_engaged","engage","getCanvas","disengage","isEngaged","_resetSize","style","width","height","maxWidth","maxHeight","resize","innerWidth","innerHeight","standardMappings","_a","GamepadDriver","_onGamepadConnect","_probeGamepads","_onGamepadDisconnect","gamepadCountChanged","_bound","_gamepadCount","_lastPoll","_joysticks","_start","_select","_joysticksShadow","_startShadow","_selectShadow","init","getGamepads","deinit","unbind","_b","joysticks","_c","start","_d","select","map","ShadowSwitch","createShadowJoystick","_controlledSwitches","swtch","_onBeforeSwitchRead","_initShadows","getGamepadCount","now","Date","gamepadCount","joystickIndex","gamepads","gamepad","_updateJoystickState","_readState","_syncShadows","switches","joystick","mapping","button","buttons","pressed","axes","original","shadow","setState","sync","cnt","_dirty","MouseAsPaddleDriver","_x","_listener","_onDocumentMouseMove","paddle","_paddle","dx","screenX","SMOOTHING_PROPS","INITIAL_RENDER_CANVAS_SIZE","SimpleCanvasVideo","_canvas","_aspect","_syncRendering","_animationFrameHandle","_pendingFrame","_video","_interpolate","_context","getContext","_renderCanvas","createElement","_renderContext","clientWidth","clientHeight","pixelRatio","devicePixelRatio","_clearCanvas","_recalculateBlittingMetrics","_applyInterpolationSettings","_blitToCanvas","enableInterpolation","_clearRenderCanvas","close","enableSyncRendering","syncRendering","_cancelPendingFrame","syncRenderingEnabled","video","_videoWidth","getWidth","_videoHeight","getHeight","newFrame","_frameHandler","enable","interpolationEnabled","imageDataPoolMember","_scheduleDraw","_draw","fillStyle","fillRect","_blitToRenderCanvas","putImageData","drawImage","_renderX","_renderY","_renderWidth","_renderHeight","requestAnimationFrame","cancelAnimationFrame","targetWidth","targetHeight","Math","floor","SMOOTHING_PROPS_1","SMOOTHING_PROPS_1_1","prop","async_mutex_1","WaveformChannel_1","PCMChannel_1","WebAudioDriver","waveformChannels","pcmChannels","fragmentSize","_merger","_waveformChannels","_pcmChannels","_channels","_cache","Map","_mutex","_isBound","ctor","AudioContext","webkitAudioContext","destination","channelCount","console","warn","createChannelMerger","connect","channel","waveformSources","pcmSources","pause","setMasterVolume","volume","suspend","LinearReasmpler","_fractionalIndex","_needsData","_ratio","reset","sourceRate","targetRate","sample","needsData","RingBuffer_1","LinearResampler_1","PCMChannel","_hostFragmentSize","_outputSampleRate","_bufferSize","_volume","_gain","_processor","_bufferUnderrun","_fragmentRing","_fragmentSize","_inputSampleRate","_fragmentIndex","_currentFragment","_lastFragment","_resampler","createGain","gain","createScriptProcessor","bufferSize","onaudioprocess","_processAudio","createBuffer","getChannelData","set","audio","_audio","getFrameSize","ceil","_onNewFragment","fragment","outputBuffer","bufferIndex","fillBuffer","until","previousFragmentBuffer","isPaused","fragmentBuffer","WaveformChannel","_source","_masterVolume","getVolume","_updateGain","volumeChanged","_onVolumeChanged","bufferChanged","_onBufferChanged","stop","_onStop","has","sampleBuffer","audioBuffer","source","createBufferSource","loop","shader_1","CONTEXT_IDS","WebglVideoDriver","_gl","_program","_vertexBuffer","_textureCoordinateBuffer","_currentFrameIndex","_frameCount","_gamma","_povEmulation","_interpolation","aspect","gamma","povEmulation","CONTEXT_IDS_1","CONTEXT_IDS_1_1","contextId","alpha","_createTextureArrays","clearColor","_createProgram","_createBuffers","_allocateTextures","_configureTextures","_setupAttribs","deleteProgram","_vertexShader","deleteShader","_fragmentShader","_textures","deleteTexture","_imageData","deleteBuffer","viewport","_recalculateVertexBuffer","_cancelDraw","setGamma","getGamma","enablePovEmulation","emulatePov","_reinit","povEmulationEnabled","oldImageData","_imageDataGeneration","_numberOfFramesToCompose","_textureGeneration","gl","frameIndex","activeTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","uniform1i","_getUniformLocation","uniform1f","COLOR_BUFFER_BIT","drawArrays","TRIANGLE_STRIP","vertexShader","createShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fragmentShaderPov","fragmentShaderPlain","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","_allocateTexture","_configureTexture","index","texture","createTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","NEAREST","TEXTURE_MAG_FILTER","pixelStorei","UNPACK_FLIP_Y_WEBGL","vertexBuffer","textureCoordinateBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","west","north","scaleX","scaleY","vertexData","_getAttribLocation","name","location","getAttribLocation","getUniformLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","SwitchProxy_1","ControlPanelProxy","_reset","_difficultyPlayer1","_difficultyPlayer2","_color","_boundControlPanel","controlPanel","difficultyPlayer1","difficultyPlayer2","color","EmulationServiceInterface_1","EmulationService_1","DriverManager_1","SimpleCanvasVideo_1","WebglVideo_1","WebAudio_1","KeyboardIO_1","MouseAsPaddle_1","Gamepad_1","FullscreenVideo_1","CartridgeInfo_1","ControlPanelProxy_1","Stellerator","canvasElt","workerUrl","_emulationService","_serviceInitialized","_webglVideo","_fullscreenVideo","_audioDriver","_keyboardIO","_gamepad","_controlPanel","State","stopped","_driverManager","_canvasElt","smoothScaling","simulatePov","enableKeyboard","keyboardTarget","fullscreenViaKeyboard","paddleViaMouse","pauseViaKeyboard","enableGamepad","resetViaKeyboard","frequencyUpdate","stateChange","newState","_mapState","_createDrivers","addDriver","getControlPanel","log","enablePovSimulation","povEnabled","isPovSimulationEnabled","enableSmoothScaling","smoothScalingEnabled","toggleFullscreen","fullscreen","setVolume","max","min","audioEnabled","getMasterVolume","getState","cartridge","stellaConfig","_convertTvMode","run","paused","lastError","getLastError","TvMode","ntsc","pal","secam","getVideo","getPCMChannel","getJoystick","togglePause","running","hardReset","getPaddle","allCartridgeTypes","SwitchProxy","_boundSwitch","_onBoundStateChange","_setState","Stellerator_1","mkSwitch","mkTrigger","trigger","KeyboardIO","_target","mappings","defaultMappings","_keydownListener","_keyupListener","_joystick0","_joystick1","_dispatchTable","_compiledMappings","_compileMappings","joystick0","joystick1","_updateActionTable","keyCode","modifiers","shiftKey","ctrlKey","altKey","action","preventDefault","values","isArray","spec","keycode","compileMapping","_pcmAudio","channels","_driver","DriverManager","_drivers","_driversBound","emulationService","_shouldBindDrivers","_bindDrivers","_onEmuStateChange","_unbindDrivers","driver","binder","DriverContext","getEmulationContext","removeDriver","delete","driverContext","EmulationServiceInterface","DigitalJoystick_1","ControlPanel_1","Paddle_1","messages_1","ControlProxy","_rpc","_paddles","sendUpdate","SIGNAL_TYPE","controlStateUpdate","joystickState","_joystickState","paddleState","_paddleState","controlPanelState","_controlPanelState","up","down","left","right","fire","difficulty0","difficulty1","EmulationContext","_videoProxy","_controlProxy","_pcmChannel","getConfig","getWaveformChannels","getVideoProxy","worker_rpc_1","EmulationContext_1","VideoProxy_1","ControlProxy_1","WaveformAudioProxy_1","PCMAudioProxy_1","EmulationService","_stellaWorkerUri","_videoWorkerUri","_rateLimitEnforced","_worker","_lastError","_emulationContext","_frequency","_controlProxyUpdateHandle","_proxyState","_saveConfig","Worker","postMessage","videoProxy","controlProxy","onmessage","messageEvent","emulationFrequencyUpdate","_onFrequencyUpdate","emulationError","_onEmulationError","_startVideoProcessingPipeline","setRateLimit","videoProcessing","RPC_TYPE","emulationStart","_startProxies","_applyState","emulationPause","_pauseProxies","emulationStop","_stopProxies","emulationReset","emulationResume","_resumeProxies","enforce","emulationSetRateLimit","getFrequency","getRateLimit","_fetchLastError","emulationFetchLastError","_startControlUpdates","_stopControlUpdates","setInterval","clearInterval","MessageChannel","worker_1","rpc_1","port1","setup","videoProcessorPort","port2","Pool_1","PCMAudioProxy","_frameSize","_paused","_framePool","_frameMap","WeakMap","_enabled","_signalReturnFrame","_onReleaseFragment","pcmAudioReturnFrame","pcmAudioNewFrame","_onNewFrame","pcmAudioTogglePause","_onTogglePause","getPCMAudioParameters","params","frameSize","frame","msg","VideoProxy","_active","_width","_height","_ids","videoNewFrame","getVideoParameters","videoParameters","Set","add","imageData","ImageData","Uint8ClampedArray","videoReturnSurface","ToneGenerator_1","WaveformAudioProxy","_toneGenerator","waveformAudioBufferChange","_onBufferChangeSignal","waveformAudioVolumeChange","_onVolumeChangeSignal","audioStop","_onStopSignal","getWaveformAudioParameters","parameters","freeze"],"mappings":"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","file":"stellerator_embedded.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Mutex = /** @class */ (function () {\n    function Mutex() {\n        this._queue = [];\n        this._pending = false;\n    }\n    Mutex.prototype.isLocked = function () {\n        return this._pending;\n    };\n    Mutex.prototype.acquire = function () {\n        var _this = this;\n        var ticket = new Promise(function (resolve) { return _this._queue.push(resolve); });\n        if (!this._pending) {\n            this._dispatchNext();\n        }\n        return ticket;\n    };\n    Mutex.prototype.runExclusive = function (callback) {\n        return this\n            .acquire()\n            .then(function (release) {\n            var result;\n            try {\n                result = callback();\n            }\n            catch (e) {\n                release();\n                throw (e);\n            }\n            return Promise\n                .resolve(result)\n                .then(function (x) { return (release(), x); }, function (e) {\n                release();\n                throw e;\n            });\n        });\n    };\n    Mutex.prototype._dispatchNext = function () {\n        if (this._queue.length > 0) {\n            this._pending = true;\n            this._queue.shift()(this._dispatchNext.bind(this));\n        }\n        else {\n            this._pending = false;\n        }\n    };\n    return Mutex;\n}());\nexports.default = Mutex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Mutex_1 = require(\"./Mutex\");\nexports.Mutex = Mutex_1.default;\n","\"use strict\";\nvar factories = [];\nfactories[0] = function () {\n    return function dispatcher0() { };\n};\nfactories[1] = function (callback, context) {\n    if (typeof (context) === 'undefined')\n        return callback;\n    return function dispatcher1(payload) {\n        callback(payload, context);\n    };\n};\nfunction getFactory(handlerCount) {\n    if (!factories[handlerCount])\n        factories[handlerCount] = compileFactory(handlerCount);\n    return factories[handlerCount];\n}\nfunction compileFactory(handlerCount) {\n    var src = 'return function dispatcher' + handlerCount + '(payload) {\\n';\n    var argsHandlers = [], argsContexts = [];\n    for (var i = 0; i < handlerCount; i++) {\n        argsHandlers.push('cb' + i);\n        argsContexts.push('ctx' + i);\n        src += '    cb' + i + '(payload, ctx' + i + ');\\n';\n    }\n    src += '};';\n    return new (Function.bind.apply(Function, [void 0].concat(argsHandlers.concat(argsContexts), [src])))();\n}\nvar Event = (function () {\n    function Event() {\n        this.hasHandlers = false;\n        this._handlers = [];\n        this._contexts = [];\n        this._createDispatcher();\n    }\n    Event.prototype.addHandler = function (handler, context) {\n        if (!this.isHandlerAttached(handler, context)) {\n            this._handlers.push(handler);\n            this._contexts.push(context);\n            this._createDispatcher();\n            this._updateHasHandlers();\n        }\n        return this;\n    };\n    Event.prototype.removeHandler = function (handler, context) {\n        var idx = this._getHandlerIndex(handler, context);\n        if (typeof (idx) !== 'undefined') {\n            this._handlers.splice(idx, 1);\n            this._contexts.splice(idx, 1);\n            this._createDispatcher();\n            this._updateHasHandlers();\n        }\n        return this;\n    };\n    Event.prototype.isHandlerAttached = function (handler, context) {\n        return typeof (this._getHandlerIndex(handler, context)) !== 'undefined';\n    };\n    Event.prototype._updateHasHandlers = function () {\n        this.hasHandlers = !!this._handlers.length;\n    };\n    Event.prototype._getHandlerIndex = function (handler, context) {\n        var handlerCount = this._handlers.length;\n        var idx;\n        for (idx = 0; idx < handlerCount; idx++) {\n            if (this._handlers[idx] === handler && this._contexts[idx] === context)\n                break;\n        }\n        return idx < handlerCount ? idx : undefined;\n    };\n    Event.prototype._createDispatcher = function () {\n        this.dispatch = getFactory(this._handlers.length).apply(this, this._handlers.concat(this._contexts));\n    };\n    return Event;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Event;\n","\"use strict\";\nvar Event_1 = require('./Event');\nexports.Event = Event_1.default;\n","/*!\n* screenfull\n* v3.3.2 - 2017-10-27\n* (c) Sindre Sorhus; MIT License\n*/\n(function () {\n\t'use strict';\n\n\tvar document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\tvar isCommonjs = typeof module !== 'undefined' && module.exports;\n\tvar keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\n\n\tvar fn = (function () {\n\t\tvar val;\n\n\t\tvar fnMap = [\n\t\t\t[\n\t\t\t\t'requestFullscreen',\n\t\t\t\t'exitFullscreen',\n\t\t\t\t'fullscreenElement',\n\t\t\t\t'fullscreenEnabled',\n\t\t\t\t'fullscreenchange',\n\t\t\t\t'fullscreenerror'\n\t\t\t],\n\t\t\t// New WebKit\n\t\t\t[\n\t\t\t\t'webkitRequestFullscreen',\n\t\t\t\t'webkitExitFullscreen',\n\t\t\t\t'webkitFullscreenElement',\n\t\t\t\t'webkitFullscreenEnabled',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t// Old WebKit (Safari 5.1)\n\t\t\t[\n\t\t\t\t'webkitRequestFullScreen',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitCurrentFullScreenElement',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t[\n\t\t\t\t'mozRequestFullScreen',\n\t\t\t\t'mozCancelFullScreen',\n\t\t\t\t'mozFullScreenElement',\n\t\t\t\t'mozFullScreenEnabled',\n\t\t\t\t'mozfullscreenchange',\n\t\t\t\t'mozfullscreenerror'\n\t\t\t],\n\t\t\t[\n\t\t\t\t'msRequestFullscreen',\n\t\t\t\t'msExitFullscreen',\n\t\t\t\t'msFullscreenElement',\n\t\t\t\t'msFullscreenEnabled',\n\t\t\t\t'MSFullscreenChange',\n\t\t\t\t'MSFullscreenError'\n\t\t\t]\n\t\t];\n\n\t\tvar i = 0;\n\t\tvar l = fnMap.length;\n\t\tvar ret = {};\n\n\t\tfor (; i < l; i++) {\n\t\t\tval = fnMap[i];\n\t\t\tif (val && val[1] in document) {\n\t\t\t\tfor (i = 0; i < val.length; i++) {\n\t\t\t\t\tret[fnMap[0][i]] = val[i];\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t})();\n\n\tvar eventNameMap = {\n\t\tchange: fn.fullscreenchange,\n\t\terror: fn.fullscreenerror\n\t};\n\n\tvar screenfull = {\n\t\trequest: function (elem) {\n\t\t\tvar request = fn.requestFullscreen;\n\n\t\t\telem = elem || document.documentElement;\n\n\t\t\t// Work around Safari 5.1 bug: reports support for\n\t\t\t// keyboard in fullscreen even though it doesn't.\n\t\t\t// Browser sniffing, since the alternative with\n\t\t\t// setTimeout is even worse.\n\t\t\tif (/ Version\\/5\\.1(?:\\.\\d+)? Safari\\//.test(navigator.userAgent)) {\n\t\t\t\telem[request]();\n\t\t\t} else {\n\t\t\t\telem[request](keyboardAllowed && Element.ALLOW_KEYBOARD_INPUT);\n\t\t\t}\n\t\t},\n\t\texit: function () {\n\t\t\tdocument[fn.exitFullscreen]();\n\t\t},\n\t\ttoggle: function (elem) {\n\t\t\tif (this.isFullscreen) {\n\t\t\t\tthis.exit();\n\t\t\t} else {\n\t\t\t\tthis.request(elem);\n\t\t\t}\n\t\t},\n\t\tonchange: function (callback) {\n\t\t\tthis.on('change', callback);\n\t\t},\n\t\tonerror: function (callback) {\n\t\t\tthis.on('error', callback);\n\t\t},\n\t\ton: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.addEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\toff: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.removeEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\traw: fn\n\t};\n\n\tif (!fn) {\n\t\tif (isCommonjs) {\n\t\t\tmodule.exports = false;\n\t\t} else {\n\t\t\twindow.screenfull = false;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tObject.defineProperties(screenfull, {\n\t\tisFullscreen: {\n\t\t\tget: function () {\n\t\t\t\treturn Boolean(document[fn.fullscreenElement]);\n\t\t\t}\n\t\t},\n\t\telement: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn document[fn.fullscreenElement];\n\t\t\t}\n\t\t},\n\t\tenabled: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\t// Coerce to boolean in case of old WebKit\n\t\t\t\treturn Boolean(document[fn.fullscreenEnabled]);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (isCommonjs) {\n\t\tmodule.exports = screenfull;\n\t} else {\n\t\twindow.screenfull = screenfull;\n\t}\n})();\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [0, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator];\r\n        return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n});\r\n","\"use strict\";\nvar microevent_ts_1 = require('microevent.ts');\nvar MSG_RESOLVE_TRANSACTION = \"resolve_transaction\", MSG_REJECT_TRANSACTION = \"reject_transaction\", MSG_ERROR = \"error\";\nvar RpcProvider = (function () {\n    function RpcProvider(_dispatch, _rpcTimeout) {\n        if (_rpcTimeout === void 0) { _rpcTimeout = 0; }\n        this._dispatch = _dispatch;\n        this._rpcTimeout = _rpcTimeout;\n        this.error = new microevent_ts_1.Event();\n        this._rpcHandlers = {};\n        this._signalHandlers = {};\n        this._pendingTransactions = {};\n        this._nextTransactionId = 0;\n    }\n    RpcProvider.prototype.dispatch = function (payload) {\n        var message = payload;\n        switch (message.type) {\n            case RpcProvider.MessageType.signal:\n                return this._handleSignal(message);\n            case RpcProvider.MessageType.rpc:\n                return this._handeRpc(message);\n            case RpcProvider.MessageType.internal:\n                return this._handleInternal(message);\n            default:\n                this._raiseError(\"invalid message type \" + message.type);\n        }\n    };\n    RpcProvider.prototype.rpc = function (id, payload, transfer) {\n        var _this = this;\n        var transactionId = this._nextTransactionId++;\n        this._dispatch({\n            type: RpcProvider.MessageType.rpc,\n            transactionId: transactionId,\n            id: id,\n            payload: payload\n        }, transfer ? transfer : undefined);\n        return new Promise(function (resolve, reject) {\n            var transaction = _this._pendingTransactions[transactionId] = {\n                id: transactionId,\n                resolve: resolve,\n                reject: reject\n            };\n            if (_this._rpcTimeout > 0) {\n                _this._pendingTransactions[transactionId].timeoutHandle =\n                    setTimeout(function () { return _this._transactionTimeout(transaction); }, _this._rpcTimeout);\n            }\n        });\n    };\n    ;\n    RpcProvider.prototype.signal = function (id, payload, transfer) {\n        this._dispatch({\n            type: RpcProvider.MessageType.signal,\n            id: id,\n            payload: payload,\n        }, transfer ? transfer : undefined);\n        return this;\n    };\n    RpcProvider.prototype.registerRpcHandler = function (id, handler) {\n        if (this._rpcHandlers[id]) {\n            throw new Error(\"rpc handler for \" + id + \" already registered\");\n        }\n        this._rpcHandlers[id] = handler;\n        return this;\n    };\n    ;\n    RpcProvider.prototype.registerSignalHandler = function (id, handler) {\n        if (!this._signalHandlers[id]) {\n            this._signalHandlers[id] = [];\n        }\n        this._signalHandlers[id].push(handler);\n        return this;\n    };\n    RpcProvider.prototype.deregisterRpcHandler = function (id, handler) {\n        if (this._rpcHandlers[id]) {\n            delete this._rpcHandlers[id];\n        }\n        return this;\n    };\n    ;\n    RpcProvider.prototype.deregisterSignalHandler = function (id, handler) {\n        if (this._signalHandlers[id]) {\n            this._signalHandlers[id] = this._signalHandlers[id].filter(function (h) { return handler !== h; });\n        }\n        return this;\n    };\n    RpcProvider.prototype._raiseError = function (error) {\n        this.error.dispatch(new Error(error));\n        this._dispatch({\n            type: RpcProvider.MessageType.internal,\n            id: MSG_ERROR,\n            payload: error\n        });\n    };\n    RpcProvider.prototype._handleSignal = function (message) {\n        if (!this._signalHandlers[message.id]) {\n            return this._raiseError(\"invalid signal \" + message.id);\n        }\n        this._signalHandlers[message.id].forEach(function (handler) { return handler(message.payload); });\n    };\n    RpcProvider.prototype._handeRpc = function (message) {\n        var _this = this;\n        if (!this._rpcHandlers[message.id]) {\n            return this._raiseError(\"invalid rpc \" + message.id);\n        }\n        Promise.resolve(this._rpcHandlers[message.id](message.payload))\n            .then(function (result) { return _this._dispatch({\n            type: RpcProvider.MessageType.internal,\n            id: MSG_RESOLVE_TRANSACTION,\n            transactionId: message.transactionId,\n            payload: result\n        }); }, function (reason) { return _this._dispatch({\n            type: RpcProvider.MessageType.internal,\n            id: MSG_REJECT_TRANSACTION,\n            transactionId: message.transactionId,\n            payload: reason\n        }); });\n    };\n    RpcProvider.prototype._handleInternal = function (message) {\n        switch (message.id) {\n            case MSG_RESOLVE_TRANSACTION:\n                if (!this._pendingTransactions[message.transactionId]) {\n                    return this._raiseError(\"no pending transaction with id \" + message.transactionId);\n                }\n                this._pendingTransactions[message.transactionId].resolve(message.payload);\n                this._clearTransaction(this._pendingTransactions[message.transactionId]);\n                break;\n            case MSG_REJECT_TRANSACTION:\n                if (!this._pendingTransactions[message.transactionId]) {\n                    return this._raiseError(\"no pending transaction with id \" + message.transactionId);\n                }\n                this._pendingTransactions[message.transactionId].reject(message.payload);\n                this._clearTransaction(this._pendingTransactions[message.transactionId]);\n                break;\n            case MSG_ERROR:\n                this.error.dispatch(new Error(\"remote error: \" + message.payload));\n                break;\n            default:\n                this._raiseError(\"unhandled internal message \" + message.id);\n                break;\n        }\n    };\n    RpcProvider.prototype._transactionTimeout = function (transaction) {\n        transaction.reject('transaction timed out');\n        this._raiseError(\"transaction \" + transaction.id + \" timed out\");\n        delete this._pendingTransactions[transaction.id];\n        return;\n    };\n    RpcProvider.prototype._clearTransaction = function (transaction) {\n        if (typeof (transaction.timeoutHandle) !== 'undefined') {\n            clearTimeout(transaction.timeoutHandle);\n        }\n        delete this._pendingTransactions[transaction.id];\n    };\n    return RpcProvider;\n}());\nvar RpcProvider;\n(function (RpcProvider) {\n    (function (MessageType) {\n        MessageType[MessageType[\"signal\"] = 0] = \"signal\";\n        MessageType[MessageType[\"rpc\"] = 1] = \"rpc\";\n        MessageType[MessageType[\"internal\"] = 2] = \"internal\";\n    })(RpcProvider.MessageType || (RpcProvider.MessageType = {}));\n    var MessageType = RpcProvider.MessageType;\n    ;\n})(RpcProvider || (RpcProvider = {}));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RpcProvider;\n","\"use strict\";\nvar RpcProvider_1 = require('./RpcProvider');\nexports.RpcProvider = RpcProvider_1.default;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport DigitalJoystickInterface from './DigitalJoystickInterface';\nimport Switch from './Switch';\nimport SwitchInterface from './SwitchInterface';\n\nexport default class DigitalJoystick implements DigitalJoystickInterface {\n    getLeft(): SwitchInterface {\n        return this._left;\n    }\n\n    getRight(): SwitchInterface {\n        return this._right;\n    }\n\n    getUp(): SwitchInterface {\n        return this._up;\n    }\n\n    getDown(): SwitchInterface {\n        return this._down;\n    }\n\n    getFire(): SwitchInterface {\n        return this._fire;\n    }\n\n    private _left = new Switch();\n    private _right = new Switch();\n    private _up = new Switch();\n    private _down = new Switch();\n\n    private _fire = new Switch();\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport Switch from './Switch';\nimport PaddleInterface from './PaddleInterface';\n\nexport default class Paddle implements PaddleInterface {\n    setValue(value: number): void {\n        this._value = value;\n        this.valueChanged.dispatch(value);\n    }\n\n    getValue(): number {\n        return this._value;\n    }\n\n    getFire(): Switch {\n        return this._fireSwitch;\n    }\n\n    valueChanged = new Event<number>();\n\n    protected _fireSwitch = new Switch();\n    protected _value = 0.5;\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport SwitchInterface from './SwitchInterface';\n\nexport default class Switch implements SwitchInterface {\n    constructor(private _state: boolean = false) {}\n\n    read(): boolean {\n        this.beforeRead.dispatch(this);\n        return this._state;\n    }\n\n    peek(): boolean {\n        return this._state;\n    }\n\n    toggle(state: boolean): void {\n        if (this._state === state) {\n            return;\n        }\n\n        this._state = state;\n        this.stateChanged.dispatch(state);\n    }\n\n    stateChanged = new Event<boolean>();\n    beforeRead = new Event<this>();\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\ninterface Config {\n    tvMode: Config.TvMode;\n    enableAudio: boolean;\n    randomSeed: number;\n    emulatePaddles: boolean;\n    frameStart: number;\n    pcmAudio: boolean;\n}\n\nnamespace Config {\n    export const enum TvMode {\n        ntsc,\n        pal,\n        secam\n    }\n\n    export function create(config: Partial<Config> = {}): Config {\n        return {\n            tvMode: TvMode.ntsc,\n            enableAudio: true,\n            randomSeed: -1,\n            emulatePaddles: true,\n            frameStart: -1,\n            pcmAudio: false,\n\n            ...config\n        };\n    }\n\n    export function getClockHz(config: Config): number {\n        switch (config.tvMode) {\n            case Config.TvMode.ntsc:\n                return 262 * 228 * 60;\n\n            case Config.TvMode.pal:\n            case Config.TvMode.secam:\n                return 312 * 228 * 50;\n        }\n    }\n}\n\nexport { Config as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Switch from '../io/Switch';\nimport SwitchInterface from '../io/SwitchInterface';\nimport ControlPanelInterface from './ControlPanelInterface';\n\nclass ControlPanel implements ControlPanelInterface {\n    getSelectSwitch(): SwitchInterface {\n        return this._selectSwitch;\n    }\n\n    getResetButton(): SwitchInterface {\n        return this._resetButton;\n    }\n\n    getColorSwitch(): SwitchInterface {\n        return this._colorSwitch;\n    }\n\n    getDifficultySwitchP0(): SwitchInterface {\n        return this._difficutlyP0;\n    }\n\n    getDifficultySwitchP1(): SwitchInterface {\n        return this._difficutlyP1;\n    }\n\n    private _selectSwitch = new Switch();\n    private _resetButton = new Switch();\n    private _colorSwitch = new Switch();\n    private _difficutlyP0 = new Switch();\n    private _difficutlyP1 = new Switch();\n}\n\nexport { ControlPanel as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nnamespace CartridgeInfo {\n    export enum CartridgeType {\n        vanilla_2k = 'vanilla_2k',\n        vanilla_4k = 'vanilla_4k',\n\n        bankswitch_8k_F8 = 'bankswitch_8k_F8',\n        bankswitch_8k_E0 = 'bankswitch_8k_E0',\n        bankswitch_8k_3F = 'bankswitch_8k_3F',\n        bankswitch_8k_FE = 'bankswitch_8k_FE',\n        bankswitch_8k_UA = 'bankswitch_8k_UA',\n        bankswitch_8k_DPC = 'bankswitch_8k_DPC',\n        bankswitch_8k_econobanking = 'bankswitch_8k_econobanking',\n\n        bankswitch_12k_FA = 'bankswitch_12k_FA',\n\n        bankswitch_16k_F6 = 'bankswitch_16k_F6',\n        bankswitch_16k_E7 = 'bankswitch_16k_E7',\n\n        bankswitch_FA2 = 'bankswitch_FA2',\n\n        bankswitch_32k_F4 = 'bankswitch_32k_F4',\n\n        bankswitch_64k_F0 = 'bankswitch_64k_F0',\n        bankswitch_64k_EF = 'bankswitch_64k_EF',\n\n        bankswitch_3E = 'bankswitch_3E',\n        bankswitch_supercharger = 'bankswitch_supercharger',\n        bankswitch_dpc_plus = 'bankswitch_dpc_plus',\n        bankswitch_cdf = 'bankswitch_cdf',\n\n        unknown = 'unknown'\n    }\n\n    export function getAllTypes(): Array<CartridgeType> {\n        return [\n            CartridgeType.vanilla_2k,\n            CartridgeType.vanilla_4k,\n            CartridgeType.bankswitch_8k_F8,\n            CartridgeType.bankswitch_8k_E0,\n            CartridgeType.bankswitch_8k_3F,\n            CartridgeType.bankswitch_8k_FE,\n            CartridgeType.bankswitch_8k_UA,\n            CartridgeType.bankswitch_8k_econobanking,\n            CartridgeType.bankswitch_12k_FA,\n            CartridgeType.bankswitch_8k_DPC,\n            CartridgeType.bankswitch_16k_F6,\n            CartridgeType.bankswitch_16k_E7,\n            CartridgeType.bankswitch_FA2,\n            CartridgeType.bankswitch_32k_F4,\n            CartridgeType.bankswitch_3E,\n            CartridgeType.bankswitch_64k_F0,\n            CartridgeType.bankswitch_64k_EF,\n            CartridgeType.bankswitch_supercharger,\n            CartridgeType.bankswitch_dpc_plus,\n            CartridgeType.bankswitch_cdf,\n            CartridgeType.unknown\n        ];\n    }\n\n    export function describeCartridgeType(cartridgeType: CartridgeType): string {\n        switch (cartridgeType) {\n            case CartridgeType.vanilla_2k:\n                return 'plain 2k';\n\n            case CartridgeType.vanilla_4k:\n                return 'plain 4k';\n\n            case CartridgeType.bankswitch_8k_F8:\n                return 'bankswitched 8k, F8 (Atari) scheme';\n\n            case CartridgeType.bankswitch_8k_E0:\n                return 'bankswitched 8k, E0 (Parker Bros.) scheme';\n\n            case CartridgeType.bankswitch_8k_3F:\n                return 'bankswitched 8k, 3F (Tigervision) scheme';\n\n            case CartridgeType.bankswitch_8k_FE:\n                return 'bankswitched 8k, FE (Activision) scheme';\n\n            case CartridgeType.bankswitch_8k_UA:\n                return 'bankswitched 8k, UA (Pleiades) scheme';\n\n            case CartridgeType.bankswitch_12k_FA:\n                return 'bankswitched 12k, FA (CBS) scheme';\n\n            case CartridgeType.bankswitch_8k_DPC:\n                return 'bankswitched 8k + DPC';\n\n            case CartridgeType.bankswitch_8k_econobanking:\n                return 'bankswitched 8k, econobanking scheme';\n\n            case CartridgeType.bankswitch_16k_F6:\n                return 'bankswitched 16k, F6 (Atari) scheme';\n\n            case CartridgeType.bankswitch_16k_E7:\n                return 'bankswitched 16k, E7 (M-Network) scheme';\n\n            case CartridgeType.bankswitch_FA2:\n                return 'bankswitched 28k/29k, FA2 (modified CBS) scheme';\n\n            case CartridgeType.bankswitch_32k_F4:\n                return 'bankswitched 32k, F4 (Atari) scheme';\n\n            case CartridgeType.bankswitch_3E:\n                return 'bankswitched 3E (Tigervision + RAM) scheme';\n\n            case CartridgeType.bankswitch_64k_F0:\n                return 'bankswitched 64k, F0 (Megaboy) scheme';\n\n            case CartridgeType.bankswitch_64k_EF:\n                return 'bankswitched 64k, EFSC (Homestar Runner) scheme';\n\n            case CartridgeType.bankswitch_supercharger:\n                return 'bankswitched supercharger';\n\n            case CartridgeType.bankswitch_dpc_plus:\n                return 'bankswitched DPC+';\n\n            case CartridgeType.bankswitch_cdf:\n                return 'bankswitched CDF';\n\n            case CartridgeType.unknown:\n                return 'unknown';\n        }\n    }\n}\n\nexport { CartridgeInfo as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\n/*\n * The tone generator has been heavily influenced by the code found at\n * http://www.biglist.com/lists/stella/archives/200311/msg00156.html with following licence:\n *\n * sound.c\n * version 0.2\n *\n * Copyright (c) 2003 Adam Wozniak (adam@wozniakconsulting.com)\n * All Rights Reserved\n *\n * Permission granted to freely copy and use for any purpose, provided\n * this copyright header remains intact.\n */\nimport Config from '../Config';\nimport AudioOutputBuffer from '../../../tools/AudioOutputBuffer';\nimport { decode as decodeBase64 } from '../../../tools/base64';\n\nconst FREQUENCY_DIVISIORS = decodeBase64('AQEPAQEBAQEBAQEBAwMDAQ==');\n\n// all ones\nconst POLY0 = new Int8Array([1]);\n\n// 50% duty cycle\nconst POLY1 = new Int8Array([1, 1]);\n\n// 16/31 duty cycle\nconst POLY2 = new Int8Array([16, 15]);\n\n// 4 bit LFSR\nconst POLY4 = decodeBase64('AQICAQEBBAM=');\n\n// 5 bit LFSR\nconst POLY5 = decodeBase64('AQIBAQICBQQCAQMBAQEBBA==');\n\n// 9 bit LFSR\nconst POLY9 = decodeBase64(\n    'AQQBAwIEAQIDAgEBAQEBAQIEAgEEAQECAgEDAgEDAQEBBAEBAQECAQECBgECAgECAQIBAQIBBg' +\n        'IBAgIBAQEBAgICAgcCAwICAQEBAwIBAQIBAQcBAQMBAQIDAwEBAQICAQECAgQDBQEDAQEFAgEB' +\n        'AQIBAgEDAQIFAQECAQEBBQEBAQEBAQEBBgEBAQIBAQEBBAIBAQMBAwYDAgMBAQIBAgQBAQEDAQ' +\n        'EBAQMBAgEEAgIDBAEBBAECAQICAgEBBAMBBAQJBQQBBQMBAQMCAgIBBQECAQEBAgMBAgEBAwQC' +\n        'BQICAQIDAQEBAQECAQMDAwIBAgEBAQEBAwMBAgIDAQMBCA=='\n);\n\n// used by mode 15\nconst POLY68 = decodeBase64('BQYEBQoFAwcECgYDBgQJBg==');\n\n// used by mode 3\nconst POLY465 = decodeBase64(\n    'AgMCAQQBBgoCBAIBAQQFCQMDBAEBAQgFBQUEAQEBCAQCCAMDAQEHBAIHBQEDAQcEAQQIAgEDBA' +\n        'cBAwcDAgEGBgICBAUDAgYGAQMDAgUDBwMEAwICAgUJAwEFAwECAgsFAQUDAQECDAUBAgUCAQEM' +\n        'BgECBQECAQoGAwICBAECBgo='\n);\n\nconst POLYS = [\n    POLY0,\n    POLY4,\n    POLY4,\n    POLY465,\n    POLY1,\n    POLY1,\n    POLY2,\n    POLY5,\n    POLY9,\n    POLY5,\n    POLY2,\n    POLY0,\n    POLY1,\n    POLY1,\n    POLY2,\n    POLY68\n];\n\nclass ToneGenerator {\n    constructor(private _config?: Config) {}\n\n    setConfig(config: Config) {\n        this._config = config;\n    }\n\n    getKey(tone: number, frequency: number): number {\n        // Hack: this is at the boundary of hearing anyway and causes nasty artifacts during\n        // resampling, so we kill it right away.\n        if (POLYS[tone] === POLY1 && FREQUENCY_DIVISIORS[tone] * (frequency + 1) === 1) {\n            return 0;\n        }\n\n        return (tone << 5) | frequency;\n    }\n\n    getBuffer(key: number): AudioOutputBuffer {\n        const tone = (key >>> 5) & 0x0f,\n            frequency = key & 0x1f;\n\n        const poly = POLYS[tone];\n\n        let length = 0;\n        for (let i = 0; i < poly.length; i++) {\n            length += poly[i];\n        }\n\n        length = length * FREQUENCY_DIVISIORS[tone] * (frequency + 1);\n\n        const content = new Float32Array(length);\n\n        const sampleRate = Config.getClockHz(this._config) / 114;\n\n        let f = 0;\n        let count = 0;\n        let offset = 0;\n        let state = true;\n\n        for (let i = 0; i < length; i++) {\n            f++;\n\n            if (f === FREQUENCY_DIVISIORS[tone] * (frequency + 1)) {\n                f = 0;\n                count++;\n\n                if (count === poly[offset]) {\n                    offset++;\n                    count = 0;\n\n                    if (poly.length === offset) {\n                        offset = 0;\n                    }\n                }\n\n                state = !(offset & 0x01);\n            }\n\n            content[i] = state ? 1 : -1;\n        }\n\n        return new AudioOutputBuffer(content, sampleRate);\n    }\n}\n\nexport { ToneGenerator as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nclass AudioOutputBuffer {\n    constructor(private _content: Float32Array, private _sampleRate: number) {}\n\n    getLength(): number {\n        return this._content.length;\n    }\n\n    getContent(): Float32Array {\n        return this._content;\n    }\n\n    getSampleRate(): number {\n        return this._sampleRate;\n    }\n\n    replaceUnderlyingBuffer(buffer: Float32Array): void {\n        this._content = buffer;\n    }\n}\n\nexport { AudioOutputBuffer as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nclass RingBuffer<T> {\n    constructor(private _capacity: number) {\n        this._buffer = new Array<T>(this._capacity);\n\n        for (let i = 0; i < this._capacity; i++) {\n            this._buffer[i] = null;\n        }\n    }\n\n    size(): number {\n        return this._size;\n    }\n\n    pop(): T {\n        if (this._size === 0) {\n            return undefined;\n        }\n\n        const item = this._buffer[this._index];\n        this._buffer[this._index] = null;\n\n        this._index = (this._index + 1) % this._capacity;\n        this._size--;\n\n        return item;\n    }\n\n    push(item: T): this {\n        if (this._size === this._capacity) {\n            this.pop();\n        }\n\n        this._buffer[(this._index + this._size++) % this._capacity] = item;\n\n        return this;\n    }\n\n    forEach(fn: (item: T) => void): this {\n        for (let i = 0; i < this._size; i++) {\n            fn(this._buffer[(this._index + i) % this._capacity]);\n        }\n\n        return this;\n    }\n\n    clear(): this {\n        for (let i = 0; i < this._capacity; i++) {\n            this._buffer[i] = null;\n        }\n\n        this._size = 0;\n        this._index = 0;\n\n        return this;\n    }\n\n    private _size = 0;\n    private _index = 0;\n    private _buffer: Array<T>;\n}\n\nexport { RingBuffer as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nconst encodingsString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n    encodings = new Uint8Array(256);\n\nexport namespace __init {\n    let i: number;\n\n    for (i = 0; i < 256; i++) {\n        encodings[i] = 255;\n    }\n    for (i = 0; i < 64; i++) {\n        encodings[encodingsString.charCodeAt(i)] = i;\n    }\n\n    encodings['='.charCodeAt(0)] = 0;\n}\n\nfunction decodeChar(data: string, idx: number): number {\n    const value = encodings[data.charCodeAt(idx)];\n\n    if (value > 63) {\n        throw new Error('invalid base64 character \"' + data[idx] + '\" at index ' + idx);\n    }\n\n    return value;\n}\n\nfunction decodeNibble(data: string, idx: number): number {\n    return (\n        (decodeChar(data, idx) << 18) +\n        (decodeChar(data, idx + 1) << 12) +\n        (decodeChar(data, idx + 2) << 6) +\n        decodeChar(data, idx + 3)\n    );\n}\n\nfunction getPadding(data: string): number {\n    let padding = 0,\n        idx = data.length - 1;\n\n    while (idx >= 0 && data[idx--] === '=') {\n        padding++;\n    }\n\n    return padding;\n}\n\nexport function decode(data: string): Uint8Array {\n    if (data.length % 4 !== 0) {\n        throw new Error('invalid base64 data --- char count mismatch');\n    }\n\n    const nibbles = data.length / 4,\n        decodedSize = nibbles * 3 - getPadding(data),\n        decoded = new Uint8Array(decodedSize);\n\n    let idx = 0;\n\n    for (let i = 0; i < nibbles; i++) {\n        const nibble = decodeNibble(data, i * 4);\n\n        for (let j = 0; j < 3 && idx < decodedSize; j++) {\n            decoded[idx++] = (nibble >>> (8 * (2 - j))) & 0xff;\n        }\n    }\n\n    return decoded;\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport PoolMember from './PoolMember';\nimport PoolInterface from './PoolInterface';\n\nclass Pool<T> implements PoolInterface<T> {\n    constructor(private _factory: Pool.FactoryInterface<T>) {}\n\n    get(): PoolMember<T> {\n        let member: PoolMember<T>;\n\n        if (this._poolSize === 0) {\n            const newItem = this._factory();\n\n            member = new PoolMember<T>(\n                newItem,\n                (victim: PoolMember<T>) => this._releaseMember(victim),\n                (victim: PoolMember<T>) => this._disposeMember(victim)\n            );\n        } else {\n            member = this._pool[--this._poolSize];\n            member._isAvailable = false;\n        }\n\n        return member;\n    }\n\n    private _releaseMember(victim: PoolMember<T>) {\n        if (victim._isAvailable) {\n            throw new Error('Trying to release an already released pool member');\n        }\n\n        if (victim._isDisposed) {\n            throw new Error('Trying to release an already disposed pool member');\n        }\n\n        const position = this._poolSize++;\n\n        this._pool[position] = victim;\n\n        victim._isAvailable = true;\n        victim._poolPosition = position;\n\n        this.event.release.dispatch(victim.get());\n    }\n\n    private _disposeMember(victim: PoolMember<T>) {\n        if (victim._isDisposed) {\n            throw new Error('Trying to dispose of an already disposed pool member');\n        }\n\n        if (victim._isAvailable) {\n            if (this._poolSize > 1) {\n                this._pool[victim._poolPosition] = this._pool[this._poolSize - 1];\n            }\n\n            this._poolSize--;\n        }\n\n        victim._isDisposed = true;\n\n        this.event.dispose.dispatch(victim.get());\n    }\n\n    event = {\n        release: new Event<T>(),\n        dispose: new Event<T>()\n    };\n\n    private _pool: Array<PoolMember<T>> = [];\n\n    private _poolSize = 0;\n}\n\nnamespace Pool {\n    export interface FactoryInterface<T> {\n        (): T;\n    }\n\n    export interface RecycleCallbackInterface<T> {\n        (value: T): void;\n    }\n\n    export interface DisposeCallbackInterface<T> {\n        (value: T): void;\n    }\n}\n\nexport { Pool as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport PoolMemberInterface from './PoolMemberInterface';\n\nclass PoolMember<T> implements PoolMemberInterface<T> {\n    constructor(\n        private _value: T,\n        private _releaseCB: (victim: PoolMember<T>) => void,\n        private _disposeCB: (victim: PoolMember<T>) => void\n    ) {}\n\n    adopt(target: T): void {\n        this._value = target;\n    }\n\n    get(): T {\n        return this._value;\n    }\n\n    release(): void {\n        this._releaseCB(this);\n    }\n\n    dispose(): void {\n        this._disposeCB(this);\n    }\n\n    public _isAvailable = false;\n    public _isDisposed = false;\n    public _poolPosition: number;\n}\n\nexport { PoolMember as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport * as screenfull from 'screenfull';\nimport VideoDriver from './VideoDriverInterface';\n\nexport default class FullscreenVideoDriver {\n    constructor(private _videoDriver: VideoDriver) {}\n\n    engage(): void {\n        if (this._engaged) {\n            return;\n        }\n\n        this._engaged = true;\n\n        screenfull.on('change', this._changeListener);\n        screenfull.request(this._videoDriver.getCanvas());\n    }\n\n    disengage(): void {\n        if (!this._engaged) {\n            return;\n        }\n\n        screenfull.exit();\n    }\n\n    toggle(): void {\n        if (this._engaged) {\n            this.disengage();\n        } else {\n            this.engage();\n        }\n    }\n\n    isEngaged(): boolean {\n        return this._engaged;\n    }\n\n    private _onChange(): void {\n        if (screenfull.isFullscreen) {\n            window.addEventListener('resize', this._resizeListener);\n            this._adjustSizeForFullscreen();\n        } else {\n            this._resetSize();\n            window.removeEventListener('resize', this._resizeListener);\n            screenfull.off('change', this._changeListener);\n\n            this._engaged = false;\n        }\n    }\n\n    private _resetSize() {\n        const element = this._videoDriver.getCanvas();\n\n        element.style.width = '';\n        element.style.height = '';\n        element.style.maxWidth = '';\n        element.style.maxHeight = '';\n\n        setTimeout(() => this._videoDriver.resize(), 0);\n    }\n\n    private _adjustSizeForFullscreen() {\n        const element = this._videoDriver.getCanvas();\n\n        this._videoDriver.resize(window.innerWidth, window.innerHeight);\n        element.style.width = window.innerWidth + 'px';\n        element.style.height = window.innerHeight + 'px';\n        element.style.maxWidth = window.innerWidth + 'px';\n        element.style.maxHeight = window.innerHeight + 'px';\n    }\n\n    private _resizeListener: () => void = this._adjustSizeForFullscreen.bind(this);\n\n    private _changeListener: () => void = this._onChange.bind(this);\n\n    private _engaged = false;\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport DigitalJoystickInterface from '../../machine/io/DigitalJoystickInterface';\nimport SwitchInterface from '../../machine/io/SwitchInterface';\n\nconst MIN_POLL_INTERVAL = 50;\n\nconst enum MappingButton {\n    left = 'left',\n    right = 'right',\n    up = 'up',\n    down = 'down',\n    fire = 'fire',\n    start = 'start',\n    select = 'select'\n}\n\nconst standardMappings: { [button: string]: Array<number> } = {\n    [MappingButton.up]: [12],\n    [MappingButton.down]: [13],\n    [MappingButton.left]: [14],\n    [MappingButton.right]: [15],\n    [MappingButton.fire]: [0, 1, 2, 3, 10, 11],\n    [MappingButton.select]: [8],\n    [MappingButton.start]: [9]\n};\n\nexport default class GamepadDriver {\n    init(): void {\n        if (!navigator.getGamepads) {\n            throw new Error(`gamepad API not available`);\n        }\n\n        this._probeGamepads();\n        window.addEventListener('gamepadconnected', this._onGamepadConnect);\n        window.addEventListener('gamepaddisconnected', this._onGamepadDisconnect);\n    }\n\n    deinit(): void {\n        this.unbind();\n\n        window.removeEventListener('gamepadconnected', this._onGamepadConnect);\n        window.removeEventListener('gamepaddisconnected', this._onGamepadDisconnect);\n    }\n\n    bind({\n        joysticks = null,\n        start = null,\n        select = null\n    }: {\n        joysticks?: Array<DigitalJoystickInterface>;\n        start?: SwitchInterface;\n        select?: SwitchInterface;\n    }): void {\n        if (this._bound) {\n            return;\n        }\n\n        this._joysticks = joysticks || [];\n        this._start = start;\n        this._select = select;\n        this._bound = true;\n\n        this._joysticksShadow = this._joysticks.map(x => createShadowJoystick());\n        this._startShadow = this._start ? new ShadowSwitch() : null;\n        this._selectShadow = this._select ? new ShadowSwitch() : null;\n\n        this._controlledSwitches().forEach(swtch =>\n            swtch.beforeRead.addHandler(GamepadDriver._onBeforeSwitchRead, this)\n        );\n\n        this._initShadows();\n    }\n\n    unbind(): void {\n        if (!this._bound) {\n            return;\n        }\n\n        this._controlledSwitches().forEach(swtch =>\n            swtch.beforeRead.removeHandler(GamepadDriver._onBeforeSwitchRead, this)\n        );\n\n        this._joysticks = this._start = this._select = null;\n        this._bound = false;\n    }\n\n    getGamepadCount(): number {\n        return this._gamepadCount;\n    }\n\n    private static _onBeforeSwitchRead(swtch: SwitchInterface, self: GamepadDriver) {\n        const now = Date.now();\n\n        if (self._gamepadCount === 0 || now - self._lastPoll < MIN_POLL_INTERVAL) {\n            return;\n        }\n\n        self._lastPoll = now;\n\n        let gamepadCount = 0,\n            joystickIndex = 0,\n            start = false,\n            select = false;\n\n        const gamepads = navigator.getGamepads();\n\n        for (let i = 0; i < gamepads.length; i++) {\n            const gamepad = gamepads[i];\n\n            if (!gamepad) {\n                continue;\n            }\n\n            gamepadCount++;\n\n            self._updateJoystickState(gamepad, joystickIndex++);\n\n            start = start || self._readState(standardMappings[MappingButton.start], gamepad);\n            select = select || self._readState(standardMappings[MappingButton.select], gamepad);\n        }\n\n        if (gamepadCount > 0) {\n            if (self._start) {\n                self._startShadow.toggle(start);\n            }\n\n            if (self._select) {\n                self._selectShadow.toggle(select);\n            }\n        }\n\n        self._syncShadows();\n    }\n\n    private _controlledSwitches(): Array<SwitchInterface> {\n        const switches: Array<SwitchInterface> = [];\n\n        for (const joystick of this._joysticks) {\n            switches.push(\n                joystick.getLeft(),\n                joystick.getRight(),\n                joystick.getUp(),\n                joystick.getDown(),\n                joystick.getFire()\n            );\n        }\n\n        if (this._select) {\n            switches.push(this._select);\n        }\n\n        if (this._start) {\n            switches.push(this._start);\n        }\n\n        return switches;\n    }\n\n    private _readState(mapping: Array<number>, gamepad: Gamepad): boolean {\n        let state = false;\n\n        for (let i = 0; i < mapping.length; i++) {\n            const button: GamepadButton | number = gamepad.buttons[mapping[i]];\n\n            state = state || (typeof button === 'object' ? button.pressed : button >= 0.5);\n        }\n\n        return state;\n    }\n\n    private _updateJoystickState(gamepad: Gamepad, joystickIndex: number): void {\n        if (!this._joysticks || joystickIndex >= this._joysticks.length) {\n            return;\n        }\n\n        const joystick = this._joysticksShadow[joystickIndex];\n\n        joystick[MappingButton.left].toggle(this._readState(standardMappings[MappingButton.left], gamepad));\n        joystick[MappingButton.right].toggle(this._readState(standardMappings[MappingButton.right], gamepad));\n        joystick[MappingButton.up].toggle(this._readState(standardMappings[MappingButton.up], gamepad));\n        joystick[MappingButton.down].toggle(this._readState(standardMappings[MappingButton.down], gamepad));\n        joystick[MappingButton.fire].toggle(this._readState(standardMappings[MappingButton.fire], gamepad));\n\n        if (gamepad.axes[0] < -0.5 || gamepad.axes[2] < -0.5) {\n            joystick[MappingButton.left].toggle(true);\n        }\n\n        if (gamepad.axes[0] > 0.5 || gamepad.axes[2] > 0.5) {\n            joystick[MappingButton.right].toggle(true);\n        }\n\n        if (gamepad.axes[1] < -0.5 || gamepad.axes[3] < -0.5) {\n            joystick[MappingButton.up].toggle(true);\n        }\n\n        if (gamepad.axes[1] > 0.5 || gamepad.axes[3] > 0.5) {\n            joystick[MappingButton.down].toggle(true);\n        }\n    }\n\n    private _initShadows(): void {\n        if (this._joysticks) {\n            for (let i = 0; i < this._joysticks.length; i++) {\n                const original = this._joysticks[i],\n                    shadow = this._joysticksShadow[i];\n\n                shadow[MappingButton.left].setState(original.getLeft().peek());\n                shadow[MappingButton.right].setState(original.getRight().peek());\n                shadow[MappingButton.up].setState(original.getUp().peek());\n                shadow[MappingButton.down].setState(original.getDown().peek());\n                shadow[MappingButton.fire].setState(original.getFire().peek());\n            }\n        }\n\n        if (this._start) {\n            this._startShadow.setState(this._start.peek());\n        }\n\n        if (this._select) {\n            this._selectShadow.setState(this._select.peek());\n        }\n    }\n\n    private _syncShadows(): void {\n        if (this._joysticks) {\n            for (let i = 0; i < this._joysticks.length; i++) {\n                const original = this._joysticks[i],\n                    shadow = this._joysticksShadow[i];\n\n                shadow[MappingButton.left].sync(original.getLeft());\n                shadow[MappingButton.right].sync(original.getRight());\n                shadow[MappingButton.up].sync(original.getUp());\n                shadow[MappingButton.down].sync(original.getDown());\n                shadow[MappingButton.fire].sync(original.getFire());\n            }\n        }\n\n        if (this._start) {\n            this._startShadow.sync(this._start);\n        }\n\n        if (this._select) {\n            this._selectShadow.sync(this._select);\n        }\n    }\n\n    private _probeGamepads(): void {\n        let cnt = 0;\n\n        const gamepads = navigator.getGamepads();\n\n        for (let i = 0; i < gamepads.length; i++) {\n            if (gamepads[i]) {\n                cnt++;\n            }\n        }\n\n        if (cnt !== this._gamepadCount) {\n            this._gamepadCount = cnt;\n            this.gamepadCountChanged.dispatch(this._gamepadCount);\n        }\n    }\n\n    private _onGamepadConnect = () => this._probeGamepads();\n    private _onGamepadDisconnect = () => this._probeGamepads();\n\n    gamepadCountChanged = new Event<number>();\n\n    private _bound = false;\n    private _gamepadCount = 0;\n    private _lastPoll = 0;\n\n    private _joysticks: Array<DigitalJoystickInterface> = null;\n    private _start: SwitchInterface = null;\n    private _select: SwitchInterface = null;\n\n    private _joysticksShadow: Array<ShadowJoystick> = null;\n    private _startShadow: ShadowSwitch = null;\n    private _selectShadow: ShadowSwitch = null;\n}\n\nclass ShadowSwitch {\n    toggle(state: boolean): void {\n        if (state === this._state) {\n            return;\n        }\n\n        this._state = state;\n        this._dirty = true;\n    }\n\n    setState(state: boolean): void {\n        this._state = state;\n        this._dirty = false;\n    }\n\n    sync(swtch: SwitchInterface): void {\n        if (this._dirty) {\n            swtch.toggle(this._state);\n            this._dirty = false;\n        }\n    }\n\n    private _state = false;\n    private _dirty = false;\n}\n\ninterface ShadowJoystick {\n    [button: string]: ShadowSwitch;\n}\n\nfunction createShadowJoystick(): ShadowJoystick {\n    return {\n        [MappingButton.left]: new ShadowSwitch(),\n        [MappingButton.right]: new ShadowSwitch(),\n        [MappingButton.up]: new ShadowSwitch(),\n        [MappingButton.down]: new ShadowSwitch(),\n        [MappingButton.fire]: new ShadowSwitch()\n    };\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport PaddleInterface from '../../machine/io/PaddleInterface';\n\nexport default class MouseAsPaddleDriver {\n    bind(paddle: PaddleInterface): void {\n        if (this._paddle) {\n            return;\n        }\n\n        this._paddle = paddle;\n        this._x = -1;\n\n        document.addEventListener('mousemove', this._listener);\n    }\n\n    unbind(): void {\n        if (!this._paddle) {\n            return;\n        }\n\n        document.removeEventListener('mousemove', this._listener);\n        this._paddle = null;\n    }\n\n    private _onDocumentMouseMove(e: MouseEvent) {\n        if (this._x >= 0) {\n            const dx = e.screenX - this._x;\n            let value = this._paddle.getValue();\n\n            value += -dx / window.innerWidth / 0.9;\n            if (value < 0) {\n                value = 0;\n            }\n            if (value > 1) {\n                value = 1;\n            }\n\n            this._paddle.setValue(value);\n        }\n\n        this._x = e.screenX;\n    }\n\n    private _paddle: PaddleInterface;\n    private _x = -1;\n    private _listener: (e: MouseEvent) => void = this._onDocumentMouseMove.bind(this);\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport VideoEndpointInterface from './VideoEndpointInterface';\nimport PoolMemberInterface from '../../tools/pool/PoolMemberInterface';\nimport VideoDriverInterface from './VideoDriverInterface';\n\nconst SMOOTHING_PROPS = [\n    'imageSmoothingEnabled',\n    'mozImageSmoothingEnabled',\n    'webkitImageSmoothingEnabled',\n    'msImageSmoothingEnabled'\n];\n\nconst INITIAL_RENDER_CANVAS_SIZE = 100;\n\nexport default class SimpleCanvasVideo implements VideoDriverInterface {\n    constructor(private _canvas: HTMLCanvasElement, private _aspect = 4 / 3) {\n        this._context = this._canvas.getContext('2d');\n\n        this._renderCanvas = document.createElement('canvas');\n        this._renderCanvas.width = this._renderCanvas.height = INITIAL_RENDER_CANVAS_SIZE;\n        this._renderContext = this._renderCanvas.getContext('2d');\n    }\n\n    resize(width?: number, height?: number): this {\n        if (typeof width === 'undefined' || typeof height === 'undefined') {\n            width = this._canvas.clientWidth;\n            height = this._canvas.clientHeight;\n        }\n\n        const pixelRatio = window.devicePixelRatio || 1;\n\n        this._canvas.width = width * pixelRatio;\n        this._canvas.height = height * pixelRatio;\n\n        this._clearCanvas();\n        this._recalculateBlittingMetrics();\n        this._applyInterpolationSettings();\n\n        if (this._video) {\n            this._blitToCanvas();\n        }\n\n        return this;\n    }\n\n    init(): this {\n        this.enableInterpolation(true);\n        this._clearRenderCanvas();\n        this.resize();\n\n        return this;\n    }\n\n    close(): this {\n        return this;\n    }\n\n    enableSyncRendering(syncRendering: boolean): this {\n        if (syncRendering === this._syncRendering) {\n            return this;\n        }\n\n        this._cancelPendingFrame();\n\n        this._syncRendering = syncRendering;\n\n        return this;\n    }\n\n    syncRenderingEnabled(): boolean {\n        return this._syncRendering;\n    }\n\n    bind(video: VideoEndpointInterface): this {\n        if (this._video) {\n            return this;\n        }\n\n        this._video = video;\n\n        this._videoWidth = this._renderCanvas.width = this._video.getWidth();\n        this._videoHeight = this._renderCanvas.height = this._video.getHeight();\n\n        this.resize();\n        this._clearRenderCanvas();\n\n        this._video.newFrame.addHandler(SimpleCanvasVideo._frameHandler, this);\n\n        return this;\n    }\n\n    unbind(): this {\n        if (!this._video) {\n            return this;\n        }\n\n        this._video.newFrame.removeHandler(SimpleCanvasVideo._frameHandler, this);\n        this._video = null;\n\n        this._cancelPendingFrame();\n        this._clearCanvas();\n\n        return this;\n    }\n\n    enableInterpolation(enable: boolean): this {\n        if (this._interpolate === enable) {\n            return this;\n        }\n\n        this._interpolate = enable;\n\n        this._applyInterpolationSettings();\n\n        return this;\n    }\n\n    interpolationEnabled(): boolean {\n        return this._interpolate;\n    }\n\n    getCanvas(): HTMLCanvasElement {\n        return this._canvas;\n    }\n\n    private static _frameHandler(imageDataPoolMember: PoolMemberInterface<ImageData>, self: SimpleCanvasVideo): void {\n        if (self._pendingFrame) {\n            self._pendingFrame.release();\n        }\n\n        self._pendingFrame = imageDataPoolMember;\n\n        if (self._syncRendering) {\n            if (!self._animationFrameHandle) {\n                self._scheduleDraw();\n            }\n        } else {\n            self._draw();\n        }\n    }\n\n    private _clearCanvas(): void {\n        this._context.fillStyle = 'solid black';\n        this._context.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n\n    private _clearRenderCanvas(): void {\n        this._renderContext.fillStyle = 'solid black';\n        this._renderContext.fillRect(0, 0, this._renderCanvas.width, this._renderCanvas.height);\n    }\n\n    private _draw(): void {\n        this._blitToRenderCanvas();\n        this._blitToCanvas();\n\n        this._pendingFrame.release();\n        this._pendingFrame = null;\n    }\n\n    private _blitToRenderCanvas(): void {\n        this._renderContext.putImageData(this._pendingFrame.get(), 0, 0);\n    }\n\n    private _blitToCanvas(): void {\n        this._context.drawImage(\n            this._renderCanvas,\n            0,\n            0,\n            this._videoWidth,\n            this._videoHeight,\n            this._renderX,\n            this._renderY,\n            this._renderWidth,\n            this._renderHeight\n        );\n    }\n\n    private _scheduleDraw(): void {\n        if (!this._animationFrameHandle) {\n            this._animationFrameHandle = requestAnimationFrame(() => {\n                this._draw();\n                this._animationFrameHandle = 0;\n            });\n        }\n    }\n\n    private _cancelPendingFrame(): void {\n        if (this._animationFrameHandle) {\n            cancelAnimationFrame(this._animationFrameHandle);\n            this._animationFrameHandle = 0;\n        }\n\n        if (this._pendingFrame) {\n            this._pendingFrame.release();\n            this._pendingFrame = null;\n        }\n    }\n\n    private _recalculateBlittingMetrics(): void {\n        const targetWidth = this._canvas.width,\n            targetHeight = this._canvas.height;\n\n        if (this._aspect * targetHeight <= targetWidth) {\n            this._renderHeight = targetHeight;\n            this._renderWidth = this._aspect * targetHeight;\n            this._renderY = 0;\n            this._renderX = Math.floor((targetWidth - this._renderWidth) / 2);\n        } else {\n            this._renderHeight = targetWidth / this._aspect;\n            this._renderWidth = targetWidth;\n            this._renderY = Math.floor((targetHeight - this._renderHeight) / 2);\n            this._renderX = 0;\n        }\n    }\n\n    private _applyInterpolationSettings(): void {\n        for (const prop of SMOOTHING_PROPS) {\n            (this._context as any)[prop] = this._interpolate;\n        }\n    }\n\n    private _syncRendering = true;\n    private _animationFrameHandle = 0;\n    private _pendingFrame: PoolMemberInterface<ImageData> = null;\n\n    private _context: CanvasRenderingContext2D;\n    private _video: VideoEndpointInterface = null;\n\n    private _renderCanvas: HTMLCanvasElement;\n    private _renderContext: CanvasRenderingContext2D;\n\n    private _interpolate = true;\n\n    private _renderX: number;\n    private _renderY: number;\n    private _renderWidth: number;\n    private _renderHeight: number;\n\n    private _videoWidth: number;\n    private _videoHeight: number;\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Mutex } from 'async-mutex';\n\nimport ChannelInterface from './audio/ChannelInterface';\nimport WaveformChannel from './audio/WaveformChannel';\nimport PCMChannel from './audio/PCMChannel';\n\nimport WaveformAudioOutputInterface from '../../machine/io/WaveformAudioOutputInterface';\nimport PCMAudioEndpointInterface from './PCMAudioEndpointInterface';\n\ntype AudioContextType = typeof AudioContext;\n\ndeclare namespace window {\n    const webkitAudioContext: AudioContextType;\n    // tslint:disable-next-line:variable-name\n    const AudioContext: AudioContextType;\n}\n\nclass WebAudioDriver {\n    constructor(waveformChannels = 0, pcmChannels = 0, fragmentSize?: number) {\n        this._waveformChannels = new Array<WaveformChannel>(waveformChannels);\n        this._pcmChannels = new Array<PCMChannel>(pcmChannels);\n\n        for (let i = 0; i < waveformChannels; i++) {\n            this._waveformChannels[i] = new WaveformChannel(this._cache);\n        }\n\n        for (let i = 0; i < pcmChannels; i++) {\n            this._pcmChannels[i] = new PCMChannel(fragmentSize);\n        }\n\n        this._channels = [...this._waveformChannels, ...this._pcmChannels];\n    }\n\n    init(): void {\n        const ctor = window.AudioContext || window.webkitAudioContext;\n\n        if (!ctor) {\n            throw new Error(`web audio is not supported by runtime`);\n        }\n\n        this._context = new ctor();\n\n        try {\n            this._context.destination.channelCount = 1;\n        } catch (e) {\n            console.warn('audio driver: failed to set channel count');\n        }\n\n        this._merger = this._context.createChannelMerger(this._channels.length);\n        this._merger.connect(this._context.destination);\n\n        this._channels.forEach(channel => channel.init(this._context, this._merger));\n    }\n\n    bind(\n        waveformSources: Array<WaveformAudioOutputInterface> = [],\n        pcmSources: Array<PCMAudioEndpointInterface> = []\n    ): void {\n        if (this._isBound) {\n            return;\n        }\n\n        if (waveformSources.length !== this._waveformChannels.length) {\n            throw new Error(\n                `invalid number of waveform sources: expected ${this._waveformChannels.length}, got ${\n                    waveformSources.length\n                }`\n            );\n        }\n\n        if (pcmSources.length !== this._pcmChannels.length) {\n            throw new Error(\n                `invalid number of waveform sources: expected ${this._pcmChannels.length}, got ${pcmSources.length}`\n            );\n        }\n\n        this._waveformChannels.forEach((channel, i) => channel.bind(waveformSources[i]));\n        this._pcmChannels.forEach((channel, i) => channel.bind(pcmSources[i]));\n\n        this._isBound = true;\n\n        this.resume();\n    }\n\n    unbind(): void {\n        if (!this._isBound) {\n            return;\n        }\n\n        this._channels.forEach(channel => channel.unbind());\n\n        this._isBound = false;\n\n        this.pause();\n    }\n\n    setMasterVolume(channel: number, volume: number): void {\n        this._channels[channel].setMasterVolume(volume);\n    }\n\n    pause(): Promise<void> {\n        return this._mutex.runExclusive(\n            () =>\n                new Promise(resolve => {\n                    this._context.suspend().then(resolve, resolve);\n                    setTimeout(resolve, 200);\n                })\n        );\n    }\n\n    resume(): Promise<void> {\n        return this._mutex.runExclusive(\n            () =>\n                new Promise(resolve => {\n                    this._context.resume().then(resolve, resolve);\n                    setTimeout(resolve, 200);\n                })\n        );\n    }\n\n    close(): void {\n        this._mutex.runExclusive(() => this._context.close());\n    }\n\n    private _context: AudioContext = null;\n    private _merger: ChannelMergerNode = null;\n    private _waveformChannels: Array<WaveformChannel> = null;\n    private _pcmChannels: Array<PCMChannel> = null;\n    private _channels: Array<ChannelInterface> = null;\n    private _cache = new Map<number, AudioBuffer>();\n    private _mutex = new Mutex();\n\n    private _isBound = false;\n}\n\nexport { WebAudioDriver as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport ResamplerInterface from './ResamplerInterface';\n\nclass LinearReasmpler implements ResamplerInterface {\n    constructor() {\n        this.reset(1, 1);\n    }\n\n    reset(sourceRate: number, targetRate: number) {\n        this._ratio = sourceRate / targetRate;\n        this._needsData = false;\n        this._fractionalIndex = 0;\n\n        for (let i = 0; i < 2; i++) {\n            this._buffer[i] = 0;\n        }\n    }\n\n    get(): number {\n        const x = (1 - this._fractionalIndex) * this._buffer[0] + this._fractionalIndex * this._buffer[1];\n\n        this._fractionalIndex += this._ratio;\n        if (this._fractionalIndex > 1) {\n            this._fractionalIndex -= 1;\n            this._needsData = true;\n        }\n\n        return x;\n    }\n\n    push(sample: number): void {\n        this._buffer[0] = this._buffer[1];\n        this._buffer[1] = sample;\n\n        this._needsData = false;\n    }\n\n    needsData(): boolean {\n        return this._needsData;\n    }\n\n    private _buffer = new Float32Array(2);\n    private _fractionalIndex = 0;\n    private _needsData = false;\n\n    private _ratio = 0;\n}\n\nexport { LinearReasmpler as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport ChannelInterface from './ChannelInterface';\nimport PCMAudioEndpointInterface from '../PCMAudioEndpointInterface';\nimport PoolMemberInterface from '../../../tools/pool/PoolMemberInterface';\nimport RingBuffer from '../../../tools/RingBuffer';\nimport ResamplerInterface from './ResamplerInterface';\nimport LinearReasmpler from './LinearResampler';\n\nclass PCMChannel implements ChannelInterface {\n    constructor(private _hostFragmentSize = 1024) {}\n\n    init(context: AudioContext, target: AudioNode) {\n        this._outputSampleRate = context.sampleRate;\n\n        this._gain = context.createGain();\n        this._gain.gain.value = this._volume;\n        this._gain.connect(target);\n\n        this._processor = context.createScriptProcessor(this._hostFragmentSize, 1, 1);\n        this._bufferSize = this._processor.bufferSize;\n\n        this._processor.connect(this._gain);\n        this._processor.onaudioprocess = e => this._processAudio(e);\n\n        const buffer = context.createBuffer(1, 1, context.sampleRate);\n        buffer.getChannelData(0).set([0]);\n    }\n\n    bind(audio: PCMAudioEndpointInterface): void {\n        this.unbind();\n\n        this._audio = audio;\n        this._fragmentSize = audio.getFrameSize();\n        this._inputSampleRate = audio.getSampleRate();\n        this._fragmentIndex = 0;\n        this._lastFragment = null;\n        this._bufferUnderrun = true;\n        this._fragmentRing = new RingBuffer<PoolMemberInterface<Float32Array>>(\n            Math.ceil(4 * this._bufferSize / this._outputSampleRate / this._fragmentSize * this._inputSampleRate)\n        );\n\n        this._audio.newFrame.addHandler(PCMChannel._onNewFragment, this);\n\n        this._resampler.reset(this._inputSampleRate, this._outputSampleRate);\n    }\n\n    unbind() {\n        if (!this._audio) {\n            return;\n        }\n\n        this._audio.newFrame.removeHandler(PCMChannel._onNewFragment, this);\n\n        if (this._lastFragment) {\n            this._lastFragment.release();\n            this._lastFragment = null;\n        }\n\n        if (this._currentFragment) {\n            this._currentFragment.release();\n            this._currentFragment = null;\n        }\n\n        if (this._fragmentRing) {\n            this._fragmentRing.forEach(b => b.release());\n            this._fragmentRing.clear();\n            this._fragmentRing = null;\n        }\n    }\n\n    setMasterVolume(volume: number): void {\n        this._volume = volume;\n    }\n\n    private static _onNewFragment(fragment: PoolMemberInterface<Float32Array>, self: PCMChannel): void {\n        self._fragmentRing.push(fragment);\n\n        if (!self._currentFragment) {\n            self._currentFragment = self._fragmentRing.pop();\n            self._fragmentIndex = 0;\n        }\n    }\n\n    private _processAudio(e: AudioProcessingEvent): void {\n        if (!this._audio) {\n            return;\n        }\n\n        const outputBuffer = e.outputBuffer.getChannelData(0);\n        let bufferIndex = 0;\n\n        const fillBuffer = (until: number) => {\n            const previousFragmentBuffer = this._lastFragment && this._lastFragment.get();\n\n            while (bufferIndex < until) {\n                if (this._resampler.needsData()) {\n                    this._resampler.push(\n                        (this._audio && this._audio.isPaused()) || !previousFragmentBuffer\n                            ? 0\n                            : previousFragmentBuffer[this._fragmentIndex++] * this._volume\n                    );\n\n                    if (this._fragmentIndex >= this._fragmentSize) {\n                        this._fragmentIndex = 0;\n                    }\n                }\n\n                outputBuffer[bufferIndex++] = this._resampler.get();\n            }\n        };\n\n        // Give the emulation half a fragment of head start when recovering from an underrun\n        if (this._currentFragment && this._bufferUnderrun) {\n            fillBuffer(this._bufferSize >>> 1);\n            this._bufferUnderrun = false;\n        }\n\n        let fragmentBuffer = this._currentFragment && this._currentFragment.get();\n\n        while (bufferIndex < this._bufferSize && this._currentFragment) {\n            if (this._resampler.needsData()) {\n                this._resampler.push(fragmentBuffer[this._fragmentIndex++] * this._volume);\n\n                if (this._fragmentIndex >= this._fragmentSize) {\n                    this._fragmentIndex = 0;\n\n                    if (this._lastFragment) {\n                        this._lastFragment.release();\n                    }\n\n                    this._lastFragment = this._currentFragment;\n                    this._currentFragment = this._fragmentRing.pop();\n\n                    fragmentBuffer = this._currentFragment && this._currentFragment.get();\n                }\n            }\n\n            outputBuffer[bufferIndex++] = this._resampler.get();\n        }\n\n        if (bufferIndex < this._bufferSize) {\n            this._bufferUnderrun = true;\n        }\n\n        fillBuffer(this._bufferSize);\n    }\n\n    private _outputSampleRate = 0;\n    private _bufferSize = 0;\n    private _volume = 1;\n\n    private _gain: GainNode = null;\n    private _processor: ScriptProcessorNode = null;\n    private _bufferUnderrun = false;\n\n    private _fragmentRing: RingBuffer<PoolMemberInterface<Float32Array>> = null;\n\n    private _fragmentSize = 0;\n    private _inputSampleRate = 0;\n    private _fragmentIndex = 0;\n    private _currentFragment: PoolMemberInterface<Float32Array> = null;\n    private _lastFragment: PoolMemberInterface<Float32Array> = null;\n\n    private _audio: PCMAudioEndpointInterface;\n\n    private _resampler: ResamplerInterface = new LinearReasmpler();\n}\n\nexport { PCMChannel as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport ChannelInterface from './ChannelInterface';\nimport WaveformAudioOutputInterface from '../../../machine/io/WaveformAudioOutputInterface';\n\nclass WaveformChannel implements ChannelInterface {\n    constructor(private _cache: Map<number, AudioBuffer>) {}\n\n    init(context: AudioContext, target: AudioNode): void {\n        this._context = context;\n\n        this._gain = this._context.createGain();\n        this._gain.connect(target);\n    }\n\n    bind(target: WaveformAudioOutputInterface): void {\n        if (this._audio) {\n            return;\n        }\n\n        this._audio = target;\n        this._volume = this._audio.getVolume();\n        this._updateGain();\n\n        this._audio.volumeChanged.addHandler(WaveformChannel._onVolumeChanged, this);\n        this._audio.bufferChanged.addHandler(WaveformChannel._onBufferChanged, this);\n        this._audio.stop.addHandler(WaveformChannel._onStop, this);\n    }\n\n    unbind(): void {\n        if (!this._audio) {\n            return;\n        }\n\n        this._audio.volumeChanged.removeHandler(WaveformChannel._onVolumeChanged, this);\n        this._audio.bufferChanged.removeHandler(WaveformChannel._onBufferChanged, this);\n        this._audio.stop.removeHandler(WaveformChannel._onStop, this);\n\n        if (this._source) {\n            this._source.stop();\n            this._source = null;\n        }\n\n        this._audio = null;\n    }\n\n    setMasterVolume(volume: number): void {\n        this._masterVolume = volume;\n        this._updateGain();\n    }\n\n    private static _onVolumeChanged(volume: number, self: WaveformChannel): void {\n        self._volume = volume;\n        self._updateGain();\n    }\n\n    private static _onBufferChanged(key: number, self: WaveformChannel): void {\n        if (!self._cache.has(key)) {\n            const sampleBuffer = self._audio.getBuffer(key),\n                audioBuffer = self._context.createBuffer(1, sampleBuffer.getLength(), sampleBuffer.getSampleRate());\n\n            audioBuffer.getChannelData(0).set(sampleBuffer.getContent());\n            self._cache.set(key, audioBuffer);\n        }\n\n        const buffer = self._cache.get(key),\n            source = self._context.createBufferSource();\n\n        if (self._source) {\n            self._source.stop();\n        }\n\n        source.loop = true;\n        source.buffer = buffer;\n        source.connect(self._gain);\n        source.start();\n\n        self._source = source;\n    }\n\n    private static _onStop(payload: void, self: WaveformChannel): void {\n        if (self._source) {\n            self._source.stop();\n            self._source = null;\n        }\n    }\n\n    private _updateGain(): void {\n        this._gain.gain.value = this._volume * this._masterVolume;\n    }\n\n    private _context: AudioContext = null;\n    private _source: AudioBufferSourceNode = null;\n    private _gain: GainNode = null;\n    private _audio: WaveformAudioOutputInterface = null;\n\n    private _volume = 0;\n    private _masterVolume = 1;\n}\n\nexport { WaveformChannel as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport PoolMemberInterface from '../../../tools/pool/PoolMemberInterface';\nimport VideoEndpointInterface from '../VideoEndpointInterface';\nimport VideoDriverInterface from '../VideoDriverInterface';\n\nimport {\n    vertexShader as vertexShaderSource,\n    fragmentShaderPlain as fragmentShaderPlainSource,\n    fragmentShaderPov as fragmentShaderPovSource\n} from './shader';\n\nconst CONTEXT_IDS = ['webgl', 'experimental-webgl'];\n\nclass WebglVideoDriver implements VideoDriverInterface {\n    constructor(private _canvas: HTMLCanvasElement, config: WebglVideoDriver.Config = {}) {\n        if (typeof config.aspect !== 'undefined') {\n            this._aspect = config.aspect;\n        }\n\n        if (typeof config.gamma !== 'undefined') {\n            this._gamma = config.gamma;\n        }\n\n        if (typeof config.povEmulation !== 'undefined') {\n            this._povEmulation = config.povEmulation;\n        }\n\n        for (const contextId of CONTEXT_IDS) {\n            if (this._gl) {\n                break;\n            }\n\n            this._gl = this._canvas.getContext(contextId, {\n                alpha: false\n            }) as WebGLRenderingContext;\n        }\n\n        if (!this._gl) {\n            throw new Error('unable to acquire WebGL context');\n        }\n\n        this._createTextureArrays();\n    }\n\n    init(): this {\n        this._gl.clearColor(0, 0, 0, 1);\n\n        this._createProgram();\n        this._createBuffers();\n        this.resize();\n        this._allocateTextures();\n        this._configureTextures();\n        this._setupAttribs();\n\n        this.enableInterpolation(true);\n\n        return this;\n    }\n\n    close(): this {\n        if (this._program) {\n            this._gl.deleteProgram(this._program);\n        }\n\n        if (this._vertexShader) {\n            this._gl.deleteShader(this._vertexShader);\n        }\n\n        if (this._fragmentShader) {\n            this._gl.deleteShader(this._fragmentShader);\n        }\n\n        if (this._textures) {\n            this._textures.forEach(t => t && this._gl.deleteTexture(t));\n        }\n\n        if (this._imageData) {\n            this._imageData.forEach(i => i && i.release());\n        }\n\n        if (this._vertexBuffer) {\n            this._gl.deleteBuffer(this._vertexBuffer);\n        }\n\n        if (this._textureCoordinateBuffer) {\n            this._gl.deleteBuffer(this._textureCoordinateBuffer);\n        }\n\n        return this;\n    }\n\n    resize(width?: number, height?: number): this {\n        if (typeof width === 'undefined' || typeof height === 'undefined') {\n            width = this._canvas.clientWidth;\n            height = this._canvas.clientHeight;\n        }\n\n        const pixelRatio = window.devicePixelRatio || 1;\n\n        this._canvas.width = width * pixelRatio;\n        this._canvas.height = height * pixelRatio;\n        this._gl.viewport(0, 0, width * pixelRatio, height * pixelRatio);\n        this._recalculateVertexBuffer();\n\n        if (this._video) {\n            this._draw();\n        }\n\n        return this;\n    }\n\n    getCanvas(): HTMLCanvasElement {\n        return this._canvas;\n    }\n\n    bind(video: VideoEndpointInterface): this {\n        if (this._video) {\n            return this;\n        }\n\n        this.resize();\n\n        this._video = video;\n        this._video.newFrame.addHandler(WebglVideoDriver._frameHandler, this);\n\n        return this;\n    }\n\n    unbind(): this {\n        this._cancelDraw();\n\n        if (!this._video) {\n            return this;\n        }\n\n        this._video.newFrame.removeHandler(WebglVideoDriver._frameHandler, this);\n        this._video = null;\n\n        return this;\n    }\n\n    enableInterpolation(enabled: boolean): this {\n        if (enabled === this._interpolation) {\n            return this;\n        }\n\n        this._interpolation = enabled;\n        this._configureTextures();\n\n        return this;\n    }\n\n    interpolationEnabled(): boolean {\n        return this._interpolation;\n    }\n\n    enableSyncRendering(syncRendering: boolean): this {\n        if (syncRendering === this._syncRendering) {\n            return this;\n        }\n\n        if (!syncRendering) {\n            this._cancelDraw();\n        }\n\n        this._syncRendering = syncRendering;\n\n        return this;\n    }\n\n    syncRenderingEnabled(): boolean {\n        return this._syncRendering;\n    }\n\n    setGamma(gamma: number): this {\n        this._gamma = gamma;\n\n        return this;\n    }\n\n    getGamma(): number {\n        return this._gamma;\n    }\n\n    enablePovEmulation(emulatePov: boolean): this {\n        if (emulatePov === this._povEmulation) {\n            return this;\n        }\n\n        this._povEmulation = emulatePov;\n        this._reinit();\n    }\n\n    povEmulationEnabled(): boolean {\n        return this._povEmulation;\n    }\n\n    private static _frameHandler(imageDataPoolMember: PoolMemberInterface<ImageData>, self: WebglVideoDriver): void {\n        const oldImageData = self._imageData[self._currentFrameIndex];\n\n        self._imageData[self._currentFrameIndex] = imageDataPoolMember;\n        self._imageDataGeneration[self._currentFrameIndex]++;\n        self._currentFrameIndex = (self._currentFrameIndex + 1) % self._numberOfFramesToCompose;\n\n        if (self._frameCount < self._numberOfFramesToCompose) {\n            self._frameCount++;\n        } else {\n            if (self._syncRendering) {\n                self._scheduleDraw();\n            } else {\n                self._draw();\n            }\n            oldImageData.release();\n        }\n    }\n\n    private _createTextureArrays(): void {\n        this._numberOfFramesToCompose = this._povEmulation ? 3 : 1;\n\n        if (this._textures) {\n            this._textures.forEach(t => t && this._gl.deleteTexture(t));\n        }\n\n        if (this._imageData) {\n            this._imageData.forEach(i => i && i.release());\n        }\n\n        this._textures = new Array<WebGLTexture>(this._numberOfFramesToCompose);\n        this._imageData = new Array<PoolMemberInterface<ImageData>>(this._numberOfFramesToCompose);\n        this._imageDataGeneration = new Array<number>(this._numberOfFramesToCompose);\n        this._textureGeneration = new Array<number>(this._numberOfFramesToCompose);\n\n        for (let i = 0; i < this._numberOfFramesToCompose; i++) {\n            this._imageDataGeneration[i] = 0;\n            this._textureGeneration[i] = -1;\n        }\n    }\n\n    private _reinit(): void {\n        this._createTextureArrays();\n        this._createProgram();\n        this._allocateTextures();\n        this._configureTextures();\n        this._setupAttribs();\n\n        this._frameCount = 0;\n        this._currentFrameIndex = 0;\n    }\n\n    private _scheduleDraw(): void {\n        if (this._animationFrameHandle) {\n            return;\n        }\n\n        this._animationFrameHandle = requestAnimationFrame(() => (this._draw(), (this._animationFrameHandle = 0)));\n    }\n\n    private _cancelDraw(): void {\n        if (this._animationFrameHandle === 0) {\n            return;\n        }\n\n        cancelAnimationFrame(this._animationFrameHandle);\n        this._animationFrameHandle = 0;\n    }\n\n    private _draw(): void {\n        if (this._frameCount < this._numberOfFramesToCompose) {\n            return;\n        }\n\n        const gl = this._gl;\n\n        for (let i = 0; i < this._numberOfFramesToCompose; i++) {\n            const frameIndex =\n                (this._currentFrameIndex - i - 1 + this._numberOfFramesToCompose) % this._numberOfFramesToCompose;\n\n            if (this._textureGeneration[frameIndex] !== this._imageDataGeneration[frameIndex]) {\n                gl.activeTexture((gl as any)[`TEXTURE${frameIndex}`]);\n                gl.bindTexture(gl.TEXTURE_2D, this._textures[frameIndex]);\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._imageData[frameIndex].get());\n\n                this._textureGeneration[frameIndex] = this._imageDataGeneration[frameIndex];\n            }\n        }\n\n        for (let i = 0; i < this._numberOfFramesToCompose; i++) {\n            gl.uniform1i(\n                this._getUniformLocation(`u_Sampler${i}`),\n                (this._currentFrameIndex + this._numberOfFramesToCompose - i - 1) % this._numberOfFramesToCompose\n            );\n        }\n\n        gl.uniform1f(this._getUniformLocation('u_Gamma'), this._gamma);\n\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n    }\n\n    private _createProgram(): void {\n        const gl = this._gl,\n            vertexShader = gl.createShader(gl.VERTEX_SHADER),\n            fragmentShader = gl.createShader(gl.FRAGMENT_SHADER),\n            program = gl.createProgram();\n\n        gl.shaderSource(vertexShader, vertexShaderSource);\n        gl.compileShader(vertexShader);\n\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            throw new Error(`failed to compile vertex shader: ${gl.getShaderInfoLog(vertexShader)}`);\n        }\n\n        gl.shaderSource(fragmentShader, this._povEmulation ? fragmentShaderPovSource : fragmentShaderPlainSource);\n        gl.compileShader(fragmentShader);\n\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            throw new Error(`failed to compile fragment shader: ${gl.getShaderInfoLog(fragmentShader)}`);\n        }\n\n        gl.attachShader(program, vertexShader);\n        gl.attachShader(program, fragmentShader);\n        gl.linkProgram(program);\n\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            throw new Error(`failed to link program: ${gl.getProgramInfoLog(program)}`);\n        }\n\n        gl.useProgram(program);\n\n        if (this._program) {\n            gl.deleteProgram(this._program);\n        }\n\n        if (this._vertexShader) {\n            gl.deleteShader(this._vertexShader);\n        }\n\n        if (this._fragmentShader) {\n            gl.deleteShader(this._fragmentShader);\n        }\n\n        this._program = program;\n        this._vertexShader = vertexShader;\n        this._fragmentShader = fragmentShader;\n    }\n\n    private _allocateTextures(): void {\n        for (let i = 0; i < this._numberOfFramesToCompose; i++) {\n            this._allocateTexture(i);\n        }\n    }\n\n    private _configureTextures(): void {\n        for (let i = 0; i < this._numberOfFramesToCompose; i++) {\n            this._configureTexture(i);\n        }\n    }\n\n    private _allocateTexture(index: number): void {\n        const gl = this._gl,\n            texture = gl.createTexture();\n\n        gl.activeTexture((gl as any)[`TEXTURE${index}`]);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        this._textures[index] = texture;\n    }\n\n    private _configureTexture(index: number): void {\n        const gl = this._gl;\n\n        gl.activeTexture((gl as any)[`TEXTURE${index}`]);\n        gl.bindTexture(gl.TEXTURE_2D, this._textures[index]);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, this._interpolation ? gl.LINEAR : gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, this._interpolation ? gl.LINEAR : gl.NEAREST);\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n    }\n\n    private _createBuffers(): void {\n        const gl = this._gl,\n            vertexBuffer = gl.createBuffer(),\n            textureCoordinateBuffer = gl.createBuffer();\n\n        const textureCoordinateData = [1, 1, 0, 1, 1, 0, 0, 0];\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, textureCoordinateBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textureCoordinateData), gl.STATIC_DRAW);\n\n        this._vertexBuffer = vertexBuffer;\n        this._textureCoordinateBuffer = textureCoordinateBuffer;\n    }\n\n    private _recalculateVertexBuffer(): void {\n        const gl = this._gl,\n            targetWidth = this._canvas.width,\n            targetHeight = this._canvas.height,\n            scaleX = targetWidth > 0 ? 2 / targetWidth : 1,\n            scaleY = targetHeight > 0 ? 2 / targetHeight : 1;\n\n        let width: number, height: number, west: number, north: number;\n\n        if (this._aspect * targetHeight <= targetWidth) {\n            height = 2;\n            width = this._aspect * targetHeight * scaleX;\n            north = 1;\n            west = Math.floor(-this._aspect * targetHeight) / 2 * scaleX;\n        } else {\n            height = targetWidth / this._aspect * scaleY;\n            width = 2;\n            north = Math.floor(targetWidth / this._aspect) / 2 * scaleY;\n            west = -1;\n        }\n\n        const vertexData = [west + width, north, west, north, west + width, north - height, west, north - height];\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertexData), gl.STATIC_DRAW);\n    }\n\n    private _getAttribLocation(name: string): number {\n        const gl = this._gl,\n            location = gl.getAttribLocation(this._program, name);\n\n        if (location < 0) {\n            throw new Error(`unable to locate attribute ${name}`);\n        }\n\n        return location;\n    }\n\n    private _getUniformLocation(name: string): WebGLUniformLocation {\n        const gl = this._gl,\n            location = gl.getUniformLocation(this._program, name);\n\n        if (location < 0) {\n            throw new Error(`unable to locate uniform ${name}`);\n        }\n\n        return location;\n    }\n\n    private _setupAttribs(): void {\n        const gl = this._gl;\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n        gl.enableVertexAttribArray(this._getAttribLocation('a_VertexPosition'));\n        gl.vertexAttribPointer(this._getAttribLocation('a_VertexPosition'), 2, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._textureCoordinateBuffer);\n        gl.enableVertexAttribArray(this._getAttribLocation('a_TextureCoordinate'));\n        gl.vertexAttribPointer(this._getAttribLocation('a_TextureCoordinate'), 2, gl.FLOAT, false, 0, 0);\n    }\n\n    private _gl: WebGLRenderingContext = null;\n\n    private _vertexShader: WebGLShader;\n    private _fragmentShader: WebGLShader;\n    private _program: WebGLProgram = null;\n    private _vertexBuffer: WebGLBuffer = null;\n    private _textureCoordinateBuffer: WebGLBuffer = null;\n\n    private _numberOfFramesToCompose: number;\n    private _textures: Array<WebGLTexture>;\n    private _imageData: Array<PoolMemberInterface<ImageData>>;\n    private _imageDataGeneration: Array<number>;\n    private _textureGeneration: Array<number>;\n    private _currentFrameIndex = 0;\n    private _frameCount = 0;\n\n    private _gamma = 1;\n    private _aspect = 4 / 3;\n    private _povEmulation = true;\n\n    private _animationFrameHandle = 0;\n    private _syncRendering = true;\n\n    private _video: VideoEndpointInterface = null;\n\n    private _interpolation = true;\n}\n\nnamespace WebglVideoDriver {\n    export interface Config {\n        povEmulation?: boolean;\n        gamma?: number;\n        aspect?: number;\n    }\n}\n\nexport { WebglVideoDriver as default };\n","export const vertexShader = `\n    attribute vec2 a_VertexPosition;\n    attribute vec2 a_TextureCoordinate;\n\n    varying vec2 v_TextureCoordinate;\n\n    void main() {\n        v_TextureCoordinate = a_TextureCoordinate;\n        gl_Position = vec4(a_VertexPosition, 0, 1);\n    }\n`;\n\nexport const fragmentShaderPlain = `\n    precision mediump float;\n\n    varying vec2 v_TextureCoordinate;\n\n    uniform sampler2D u_Sampler0;\n    uniform float u_Gamma;\n\n    void main() {\n        vec4 texel = texture2D(u_Sampler0, v_TextureCoordinate);\n\n        gl_FragColor = vec4(pow(texel.rgb, vec3(u_Gamma)), 1.);\n    }\n`;\n\nexport const fragmentShaderPov = `\n    precision mediump float;\n\n    varying vec2 v_TextureCoordinate;\n\n    uniform sampler2D u_Sampler0, u_Sampler1, u_Sampler2;\n    uniform float u_Gamma;\n\n    void main() {\n        vec4 compositedTexel =\n            0.4 * texture2D(u_Sampler0, v_TextureCoordinate) +\n            0.4 * texture2D(u_Sampler1, v_TextureCoordinate) +\n            0.2 * texture2D(u_Sampler2, v_TextureCoordinate);\n\n        gl_FragColor = vec4(pow(compositedTexel.rgb, vec3(u_Gamma)), 1.);\n    }\n`;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Switch from './Switch';\nimport SwitchProxy from './SwitchProxy';\nimport ControlPanel from './ControlPanel';\nimport StellaControlPanel from '../../../machine/stella/ControlPanelInterface';\n\nclass ControlPanelProxy implements ControlPanel {\n    bind(controlPanel: StellaControlPanel): void {\n        this.unbind();\n\n        this._boundControlPanel = controlPanel;\n\n        this._reset.bind(this._boundControlPanel.getResetButton());\n        this._select.bind(this._boundControlPanel.getSelectSwitch());\n        this._difficultyPlayer1.bind(this._boundControlPanel.getDifficultySwitchP0());\n        this._difficultyPlayer2.bind(this._boundControlPanel.getDifficultySwitchP1());\n        this._color.bind(this._boundControlPanel.getColorSwitch());\n\n        this._difficultyPlayer1.toggle(true);\n        this._difficultyPlayer2.toggle(true);\n    }\n\n    unbind(): void {\n        if (!this._boundControlPanel) {\n            return;\n        }\n\n        this._reset.unbind();\n        this._select.unbind();\n        this._difficultyPlayer1.unbind();\n        this._difficultyPlayer2.unbind();\n        this._color.unbind();\n\n        this._boundControlPanel = null;\n    }\n\n    reset(): Switch {\n        return this._reset;\n    }\n\n    select(): Switch {\n        return this._select;\n    }\n\n    difficultyPlayer1(): Switch {\n        return this._difficultyPlayer1;\n    }\n\n    difficultyPlayer2(): Switch {\n        return this._difficultyPlayer2;\n    }\n\n    color(): Switch {\n        return this._color;\n    }\n\n    private _reset = new SwitchProxy();\n    private _select = new SwitchProxy();\n    private _difficultyPlayer1 = new SwitchProxy();\n    private _difficultyPlayer2 = new SwitchProxy();\n    private _color = new SwitchProxy();\n\n    private _boundControlPanel: StellaControlPanel = null;\n}\n\nexport { ControlPanelProxy as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Mutex } from 'async-mutex';\nimport { EventInterface as Event, Event as EventImplementation } from 'microevent.ts';\n\nimport EmulationServiceInterface from '../../stella/service/EmulationServiceInterface';\nimport EmulationService from '../../stella/service/worker/EmulationService';\nimport DriverManager from '../../stella/service/DriverManager';\n\nimport VideoDriverInterface from '../../driver/VideoDriverInterface';\nimport CanvasVideo from '../../driver/SimpleCanvasVideo';\nimport WebglVideo from '../../driver/webgl/WebglVideo';\n\nimport AudioDriver from '../../stella/driver/WebAudio';\nimport KeyboardIO from '../../stella/driver/KeyboardIO';\nimport Paddle from '../../driver/MouseAsPaddle';\nimport Gamepad from '../../driver/Gamepad';\nimport FullscreenDriver from '../../driver/FullscreenVideo';\n\nimport CartridgeInfo from '../../../machine/stella/cartridge/CartridgeInfo';\nimport StellaConfig from '../../../machine/stella/Config';\n\nimport { decode as decodeBase64 } from '../../../tools/base64';\n\nimport ControlPanel from './ControlPanel';\nimport ControlPanelProxy from './ControlPanelProxy';\n\n/**\n * The stellerator class and namespace. In a typical application, a single instance is\n * created and bound to a canvas element. This instance can than be used to run many\n * different ROMs during its lifetime.\n *\n * Notes on reading this documentation:\n * * All code examples are ES6\n * * The actual emulation runs on a web worker, and all methods that control emulation\n *   are asynchronous and return [ES6 Promises](http://exploringjs.com/es6/ch_promises.html)\n * * Check out the [microevent.ts](https://github.com/DirtyHairy/microevent) documentation\n *   for the event API\n *\n * Basic example:\n * ```typescript\n *     const stellerator = new Stellerator(\n *         document.getElementById('stellerator-canvas'),\n *         'js/stellerator_worker.js'\n *     );\n *\n *     stellerator.run(rom, Stellerator.TvMode.ntsc);\n * ```\n */\nclass Stellerator {\n    /**\n     * Creates an instance of Stellerator.\n     * @param canvasElt The canvas element that is used to display the TIA image.\n     * The `height` and `width` attributes of the canvas will be automatically\n     * maintained by Stellerator, so there is not requirement to set those to\n     * specific values.\n     *\n     * @param workerUrl The URL from which the web worker will be loaded.\n     * In order to avoid cross domain issues, the worker should be hosted on the same\n     * domain as the stellerator build, and this parameter should read e.g.\n     * `js/stellerator_worker.js`\n     *\n     * @param config Optional configuration to\n     * customize emulator behavior. See [[Config]] for a full explanation of the values\n     * and their default.\n     */\n    constructor(canvasElt: HTMLCanvasElement, workerUrl: string, config: Partial<Stellerator.Config> = {}) {\n        this._canvasElt = canvasElt;\n\n        this._config = {\n            smoothScaling: true,\n            simulatePov: true,\n            gamma: 1,\n            audio: true,\n            volume: 1,\n            enableKeyboard: true,\n            keyboardTarget: document,\n            fullscreenViaKeyboard: true,\n            paddleViaMouse: true,\n            pauseViaKeyboard: true,\n            enableGamepad: true,\n            resetViaKeyboard: true,\n\n            ...config\n        };\n\n        this._emulationService = new EmulationService(workerUrl);\n\n        this.frequencyUpdate = this._emulationService.frequencyUpdate;\n\n        const stateChange = new EventImplementation<Stellerator.State>();\n        this._emulationService.stateChanged.addHandler(newState => stateChange.dispatch(this._mapState(newState)));\n        this.stateChange = stateChange;\n\n        this._createDrivers();\n\n        this._driverManager.addDriver(this._controlPanel, context =>\n            this._controlPanel.bind(context.getControlPanel())\n        );\n        this._driverManager.bind(this._emulationService);\n\n        this._serviceInitialized = this._emulationService.init().then(undefined, e => {\n            console.log(e);\n            throw e;\n        });\n    }\n\n    /**\n     * Set the gamma correction factor. Will take effect **only** if WebGL is available.\n     *\n     * @param gamma\n     */\n    setGamma(gamma: number): this {\n        if (this._webglVideo) {\n            this._webglVideo.setGamma(gamma);\n        }\n\n        return this;\n    }\n\n    /**\n     * Query the current gamme correction factor.\n     *\n     * @returns {number}\n     */\n    getGamma(): number {\n        return this._webglVideo ? this._webglVideo.getGamma() : 1;\n    }\n\n    /**\n     * Enable / disable persistence of vision / phosphor simulation. POV is simulated\n     * by blending several frames and will work **only** if WebGL is available.\n     *\n     * @param povEnabled\n     * @returns {this}\n     */\n    enablePovSimulation(povEnabled: boolean): this {\n        if (this._webglVideo) {\n            this._webglVideo.enablePovEmulation(povEnabled);\n        }\n\n        return this;\n    }\n\n    /**\n     * Query the state of persistence of vision / phosphor emulation.\n     *\n     * @returns {boolean}\n     */\n    isPovSimulationEnabled(): boolean {\n        return this._webglVideo ? this._webglVideo.povEmulationEnabled() : false;\n    }\n\n    /**\n     * Enable / disable smooth scaling of the TIA image.\n     *\n     * @param smoothScalingEnabled\n     * @returns {this}\n     */\n    enableSmoothScaling(smoothScalingEnabled: boolean): this {\n        this._videoDriver.enableInterpolation(smoothScalingEnabled);\n\n        return this;\n    }\n\n    /**\n     * Query whether smooth scaling of the TIA image is enabled.\n     *\n     * @returns {boolean}\n     */\n    smoothScalingEnabled(): boolean {\n        return this._videoDriver.interpolationEnabled();\n    }\n\n    /**\n     * Enable / disable fullscreen mode.\n     *\n     * @param fullscreen\n     * @returns {this}\n     */\n    toggleFullscreen(fullscreen?: boolean): this {\n        if (typeof fullscreen === 'undefined') {\n            this._fullscreenVideo.toggle();\n        } else {\n            fullscreen ? this._fullscreenVideo.engage() : this._fullscreenVideo.disengage();\n        }\n\n        return this;\n    }\n\n    /**\n     * Query if emulator is running fullscreen.\n     *\n     * @returns {boolean}\n     */\n    isFullscreen(): boolean {\n        return this._fullscreenVideo.isEngaged();\n    }\n\n    /**\n     * Change the master volume.\n     *\n     * @param volume Will be clipped to the range 0 .. 1\n     * @returns {this}\n     */\n    setVolume(volume: number): this {\n        if (this._audioDriver) {\n            this._audioDriver.setMasterVolume(Math.max(Math.min(volume, 1), 0));\n        }\n\n        return this;\n    }\n\n    /**\n     * Query whether audio has been enabled on this instance.\n     *\n     * @returns {boolean}\n     */\n    audioEnabled(): boolean {\n        return !!this._audioDriver;\n    }\n\n    /**\n     * Query the master volume.\n     *\n     * @returns {number}\n     */\n    getVolume(): number {\n        return this._audioDriver ? this._audioDriver.getMasterVolume() : 0;\n    }\n\n    /**\n     * Notify the video driver of a change of the visible dimensions (client size) of\n     * the canvas element. This will cause the driver to adjust the resolution to match.\n     */\n    resize(): this {\n        this._videoDriver.resize();\n\n        return this;\n    }\n\n    /**\n     * Query the current state of the emulation.\n     *\n     * @returns {Stellerator.State}\n     */\n    getState(): Stellerator.State {\n        return this._state;\n    }\n\n    /**\n     * Get the console control panel. This allows you to monitor and control\n     * the console switches (select, reset, difficulty P1 / P2, color / BW).\n     */\n    getControlPanel(): ControlPanel {\n        return this._controlPanel;\n    }\n\n    /**\n     * Start emulation of a cartridge image. This method is **async** and returns\n     * a promise for the resulting emulation state.\n     *\n     * **IMPORTANT:** The emulator will start up in [[State.paused]] mode. Use the `run` method\n     * below in order to start and run the emulation immediatelly.\n     *\n     * @param cartridge The cartridge image. Can be either\n     * an array / typed array of byte values or a base64 encoded string.\n     *\n     * @param tvMode The TV mode (NTSC / PAL / SECAM)\n     *\n     * @param config Optional configuration\n     * values to customize emulation behavior. See [[CartridgeConfig]] for a full list of supported\n     * settings and their defaults.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    start(\n        cartridge: ArrayLike<number> | string,\n        tvMode: Stellerator.TvMode,\n        config: Partial<Stellerator.CartridgeConfig> = {}\n    ): Promise<Stellerator.State> {\n        return this._mutex.runExclusive(async () => {\n            if (typeof cartridge === 'string') {\n                cartridge = decodeBase64(cartridge);\n            }\n\n            const stellaConfig = StellaConfig.create({\n                tvMode: this._convertTvMode(tvMode),\n                pcmAudio: true\n            });\n\n            if (typeof config.randomSeed !== 'undefined' && config.randomSeed > 0) {\n                stellaConfig.randomSeed = config.randomSeed;\n            }\n\n            if (typeof config.emulatePaddles !== 'undefined') {\n                stellaConfig.emulatePaddles = config.emulatePaddles;\n            }\n\n            if (typeof config.frameStart !== 'undefined') {\n                stellaConfig.frameStart = config.frameStart;\n            }\n\n            await this._serviceInitialized;\n\n            return (this._state = this._mapState(\n                await this._emulationService.start(cartridge, stellaConfig, config.cartridgeType)\n            ));\n        });\n    }\n\n    /**\n     * Like [[start]], but run the emulator immediatelly instead of starting\n     * in paused mode.\n     *\n     * Just like its counterpart, this method is **async** and returns a promise\n     * for the resulting emualtion state.\n     *\n     * @param cartridge The cartridge image. Can be either\n     * an array / typed array of byte values or a base64 encoded string.\n     *\n     * @param tvMode The TV mode (NTSC / PAL / SECAM)\n     *\n     * @param config Optional configuration\n     * values to customize emulation behavior. See [[CartridgeConfig]] for a full list of supported\n     * settings and their defaults.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async run(\n        cartridge: ArrayLike<number> | string,\n        tvMode: Stellerator.TvMode,\n        config: Partial<Stellerator.CartridgeConfig> = {}\n    ): Promise<Stellerator.State> {\n        if ((await this.start(cartridge, tvMode, config)) === Stellerator.State.paused) {\n            return this.resume();\n        }\n    }\n\n    /**\n     * Pause a running emulation session. This method is **async** and returns a\n     * promise for the resulting emulation state.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async pause(): Promise<Stellerator.State> {\n        await this._serviceInitialized;\n\n        return this._mutex.runExclusive(\n            async () => (this._state = this._mapState(await this._emulationService.pause()))\n        );\n    }\n\n    /**\n     * Resume a paused emulation session. This method is **async** and returns a\n     * promise for the resulting emulation state.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async resume(): Promise<Stellerator.State> {\n        await this._serviceInitialized;\n\n        return this._mutex.runExclusive(\n            async () => (this._state = this._mapState(await this._emulationService.resume()))\n        );\n    }\n\n    /**\n     * Stop a running or paused emulation session. This method is **async** and returns a\n     * promise for the resulting emulation state.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async stop(): Promise<Stellerator.State> {\n        await this._serviceInitialized;\n\n        return this._mutex.runExclusive(\n            async () => (this._state = this._mapState(await this._emulationService.stop()))\n        );\n    }\n\n    /**\n     * Reset a running emulation session. This method is **async** and returns a\n     * promise for the resulting emulation state.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async reset(): Promise<Stellerator.State> {\n        await this._serviceInitialized;\n\n        return this._mutex.runExclusive(\n            async () => (this._state = this._mapState(await this._emulationService.reset()))\n        );\n    }\n\n    /**\n     * Retrieve the last emulation error.\n     *\n     * **IMPORTANT:** Don't use this to check whether an error occurred; use [[getState]]\n     * and check for [[State.error]] instead.\n     *\n     * @returns {Error}\n     */\n    lastError(): Error {\n        return this._emulationService.getLastError();\n    }\n\n    private _convertTvMode(tvMode: Stellerator.TvMode): StellaConfig.TvMode {\n        switch (tvMode) {\n            case Stellerator.TvMode.ntsc:\n                return StellaConfig.TvMode.ntsc;\n\n            case Stellerator.TvMode.pal:\n                return StellaConfig.TvMode.pal;\n\n            case Stellerator.TvMode.secam:\n                return StellaConfig.TvMode.secam;\n\n            default:\n                throw new Error(`invalid TV mode '${tvMode}'`);\n        }\n    }\n\n    private _createDrivers(): void {\n        try {\n            this._webglVideo = this._videoDriver = new WebglVideo(this._canvasElt, {\n                povEmulation: this._config.simulatePov,\n                gamma: this._config.gamma\n            }).init();\n        } catch (e) {\n            this._webglVideo = null;\n            this._videoDriver = new CanvasVideo(this._canvasElt).init();\n        }\n\n        this._videoDriver.enableInterpolation(this._config.smoothScaling);\n\n        this._driverManager.addDriver(this._videoDriver, context => this._videoDriver.bind(context.getVideo()));\n\n        this._fullscreenVideo = new FullscreenDriver(this._videoDriver);\n\n        if (this._config.audio) {\n            try {\n                this._audioDriver = new AudioDriver();\n                this._audioDriver.init();\n                this._audioDriver.setMasterVolume(this._config.volume);\n\n                this._driverManager.addDriver(this._audioDriver, context =>\n                    this._audioDriver.bind(true, [context.getPCMChannel()])\n                );\n            } catch (e) {\n                console.error(`failed to initialize audio: ${e && e.message}`);\n            }\n        }\n\n        if (this._config.enableKeyboard) {\n            this._keyboardIO = new KeyboardIO(this._config.keyboardTarget);\n\n            this._driverManager.addDriver(this._keyboardIO, context =>\n                this._keyboardIO.bind(context.getJoystick(0), context.getJoystick(1), context.getControlPanel())\n            );\n\n            if (this._config.fullscreenViaKeyboard) {\n                this._keyboardIO.toggleFullscreen.addHandler(() => this._fullscreenVideo.toggle());\n            }\n\n            if (this._config.pauseViaKeyboard) {\n                this._keyboardIO.togglePause.addHandler(() => {\n                    switch (this._emulationService.getState()) {\n                        case EmulationServiceInterface.State.paused:\n                            this.resume();\n                            break;\n\n                        case EmulationServiceInterface.State.running:\n                            this.pause();\n                            break;\n                    }\n                });\n            }\n        }\n\n        if (this._config.resetViaKeyboard) {\n            this._keyboardIO.hardReset.addHandler(() => this.reset());\n        }\n\n        if (this._config.enableGamepad) {\n            this._gamepad = new Gamepad();\n            this._gamepad.init();\n\n            this._driverManager.addDriver(this._gamepad, context =>\n                this._gamepad.bind({\n                    joysticks: [context.getJoystick(0), context.getJoystick(1)],\n                    start: context.getControlPanel().getResetButton(),\n                    select: context.getControlPanel().getSelectSwitch()\n                })\n            );\n        }\n\n        if (this._config.paddleViaMouse) {\n            this._paddle = new Paddle();\n\n            this._driverManager.addDriver(this._paddle, context => this._paddle.bind(context.getPaddle(0)));\n        }\n    }\n\n    private _mapState(state: EmulationServiceInterface.State): Stellerator.State {\n        switch (state) {\n            case EmulationServiceInterface.State.stopped:\n                return Stellerator.State.stopped;\n\n            case EmulationServiceInterface.State.running:\n                return Stellerator.State.running;\n\n            case EmulationServiceInterface.State.paused:\n                return Stellerator.State.paused;\n\n            case EmulationServiceInterface.State.error:\n                return Stellerator.State.error;\n\n            default:\n                throw new Error('cannot happen');\n        }\n    }\n\n    /**\n     * Subscribe to this event to receive periodic updates on the frequency of the\n     * emulated system. The unit is Hz. Check out the\n     * [microevent.ts](https://github.com/DirtyHairy/microevent)\n     * documentation on the event API.\n     *\n     * Example (using JQuery to display emulation speed):\n     * ```typescript\n     *     stellerator.frequencyUpdate.addHandler(\n     *         frequency => $('emulation-speed').text(`System speed: ${(frequency / 1e6).toFixed(2)} MHz`)\n     *     );\n     * ```\n     */\n    frequencyUpdate: Event<number>;\n\n    /**\n     * This event is dispatched whenever emulation state changes. Check out the\n     * [microevent.ts](https://github.com/DirtyHairy/microevent)\n     * documentation on the event API.\n     *\n     * Example (using JQuery to display an error message):\n     * ```typescript\n     *     stellerator.stateChange.addHandler(\n     *         state => {\n     *             if (state === Stellerator.State.error) {\n     *                  $('error-message').text(stellerator.lastError().message);\n     *             }\n     *         }\n     *     );\n     * ```\n     */\n    stateChange: Event<Stellerator.State>;\n\n    private _canvasElt: HTMLCanvasElement;\n    private _config: Stellerator.Config = null;\n    private _emulationService: EmulationServiceInterface = null;\n    private _serviceInitialized: Promise<void> = null;\n\n    private _videoDriver: VideoDriverInterface = null;\n    private _webglVideo: WebglVideo = null;\n    private _fullscreenVideo: FullscreenDriver = null;\n    private _audioDriver: AudioDriver = null;\n    private _keyboardIO: KeyboardIO = null;\n    private _paddle: Paddle = null;\n    private _gamepad: Gamepad = null;\n\n    private _controlPanel = new ControlPanelProxy();\n\n    private _state = Stellerator.State.stopped;\n\n    private _driverManager = new DriverManager();\n\n    private _mutex = new Mutex();\n}\n\nnamespace Stellerator {\n    /**\n     * General emulator configuration. The configuration is set on construction of the\n     * stellerator instance. Each setting is strictly optional and has a default\n     * value.\n     */\n    export interface Config {\n        /**\n         * Perform smooth scaling of the output image.\n         *\n         * Default: true\n         */\n        smoothScaling: boolean;\n\n        /**\n         * Simulate persistence of vision / phosphor by blending several frames. This will\n         * take effect **only** if WebGL is available.\n         *\n         * Default: true\n         */\n        simulatePov: boolean;\n\n        /**\n         * Gamma correction. Will take effect **only** if WebGL is available.\n         *\n         * Default: true\n         */\n        gamma: number;\n\n        /**\n         * Enable audio.\n         *\n         * Default: true\n         */\n        audio: boolean;\n\n        /**\n         * Master volume.\n         *\n         * Default: true\n         */\n        volume: number;\n\n        /**\n         * Enable keyboard for joysticks and reset / resume.\n         *\n         * Default: true\n         *\n         */\n        enableKeyboard: boolean;\n\n        /**\n         * Specify an HTML element on which the driver listens for keyboard\n         * events.\n         *\n         * Default: document\n         */\n        keyboardTarget: HTMLElement | HTMLDocument;\n\n        /**\n         * Toggle fullscreen with \"enter\". Applicable **only** if `enableKeyboard`\n         * is set.\n         *\n         * Default: true\n         */\n        fullscreenViaKeyboard: boolean;\n\n        /**\n         * Toggle pause with \"p\". Applicable **only** if `enableKeyboard` is set.\n         *\n         * Default: true\n         */\n        pauseViaKeyboard: boolean;\n\n        /**\n         * Reset emulation with \"shift-r\".\n         *\n         * Default: true\n         */\n        resetViaKeyboard: boolean;\n\n        /**\n         * Emulate the first paddlewith the horizontal movement of the mouse.\n         *\n         * Default: true\n         *\n         */\n        paddleViaMouse: boolean;\n\n        /**\n         * Enable gamepad support.\n         *\n         * Default: true\n         */\n        enableGamepad: boolean;\n    }\n\n    /**\n     * TV mode constants\n     */\n    export enum TvMode {\n        /**\n         * NTSC\n         */\n        ntsc = 'ntsc',\n        /**\n         * PAL\n         */\n        pal = 'pal',\n        /**\n         * SECAM\n         */\n        secam = 'secam'\n    }\n\n    /**\n     * Optional configuration for a specific cartridge. This configuration is passed to\n     * the emulator together with a cartridge image for emulation. Each setting\n     * is strictly optional and has a default value.\n     */\n    export interface CartridgeConfig {\n        /**\n         * Specify the cartridge type. The default is autodetection which should\n         * work fine in almost all cases.\n         *\n         * Default: undefined [autodetect]\n         */\n        cartridgeType: CartridgeInfo.CartridgeType;\n\n        /**\n         * Random number generator seed. This is used to initialize the initial\n         * hardware state. The default is automatic, which uses a random seed.\n         *\n         * Default: undefined [automatic]\n         */\n        randomSeed: number;\n\n        /**\n         * Emulate paddles.\n         *\n         * Default: true\n         */\n        emulatePaddles: boolean;\n\n        /**\n         * The first visible scanline of the frame. The default is autodetection, which\n         * should work fine for most cases.\n         *\n         * Default: undefined [autodetect]\n         */\n        frameStart: number;\n    }\n\n    /**\n     * The CartridgeType enum. Reexported from the `CartridgeInfo` module. Please check the\n     * [source](https://github.com/6502ts/6502.ts/blob/master/src/machine/stella/cartridge/CartridgeInfo.ts)\n     * for the various possible values if you really need this setting.\n     *\n     * Example:\n     * ```typescript\n     *     stellerator.run(cartridgeImage, Stellerator.TvMode.ntsc, {\n     *         cartridgeType: Stellerator.CartridgeType.bankswitch_DPC\n     *     });\n     * ```\n     */\n    export const CartridgeType = CartridgeInfo.CartridgeType;\n\n    /**\n     * This function takes a cartridge type and returns a human readable\n     * description suitable for building an UI. Reexported from the `CartridgeInfo` module.\n     *\n     * Example:\n     * ```typescript\n     *     const description = Stellerator.describeCartridgeType(\n     *         Stellerator.CartridgeType.bankswitch_DPC\n     *     );\n     * ```\n     */\n    export const describeCartridgeType: (cartridgeType: CartridgeInfo.CartridgeType) => string =\n        CartridgeInfo.describeCartridgeType;\n\n    /**\n     * This function returns an array of all possible cartridge types suitable for building an UI.\n     * Reexported from the `CartridgeInfo` module.\n     */\n    export const allCartridgeTypes: () => Array<CartridgeInfo.CartridgeType> = CartridgeInfo.getAllTypes;\n\n    /**\n     * The different possible states of the emulation.\n     */\n    export enum State {\n        running = 'running',\n        /**\n         * Emulation has been paused and can be stopped or continued.\n         */\n        paused = 'paused',\n        /**\n         * Emulation has been stopped regularily.\n         */\n        stopped = 'stopped',\n        /**\n         * Emulation has been stopped by an error.\n         */\n        error = 'error'\n    }\n}\n\nexport { Stellerator as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport Switch from './Switch';\nimport SwitchIO from '../../../machine/io/SwitchInterface';\n\nclass SwitchProxy implements Switch {\n    bind(swtch: SwitchIO): void {\n        this.unbind();\n\n        this._boundSwitch = swtch;\n        this._boundSwitch.toggle(this._state);\n\n        this._boundSwitch.stateChanged.addHandler(SwitchProxy._onBoundStateChange, this);\n        this._setState(this._boundSwitch.read());\n    }\n\n    unbind(): void {\n        if (!this._boundSwitch) {\n            return;\n        }\n\n        this._boundSwitch.stateChanged.removeHandler(SwitchProxy._onBoundStateChange, this);\n        this._boundSwitch = null;\n    }\n\n    toggle(state: boolean): this {\n        if (this._boundSwitch) {\n            this._boundSwitch.toggle(state);\n        } else {\n            this._setState(state);\n        }\n\n        return this;\n    }\n\n    read(): boolean {\n        return this._state;\n    }\n\n    private static _onBoundStateChange(newState: boolean, self: SwitchProxy) {\n        self._setState(newState);\n    }\n\n    private _setState(newState: boolean) {\n        if (newState !== this._state) {\n            this._state = newState;\n            this.stateChange.dispatch(this._state);\n        }\n    }\n\n    stateChange = new Event<boolean>();\n\n    private _state = false;\n    private _boundSwitch: SwitchIO = null;\n}\n\nexport { SwitchProxy as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Stellerator from './Stellerator';\n\nexport = {\n    Stellerator\n};\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport SwitchInterface from '../../../machine/io/SwitchInterface';\nimport JoystickInterface from '../../../machine/io/DigitalJoystickInterface';\nimport ControlPanelInterface from '../../../machine/stella/ControlPanelInterface';\n\nconst enum DispatchType {\n    swtch,\n    triggerDown\n}\n\ninterface SwitchDispatch {\n    type: DispatchType.swtch;\n    swtch: SwitchInterface;\n}\n\ninterface TriggerDispatch {\n    type: DispatchType.triggerDown;\n    trigger: Event<void>;\n}\n\ntype Dispatch = SwitchDispatch | TriggerDispatch;\n\nfunction mkSwitch(swtch: SwitchInterface): SwitchDispatch {\n    return {\n        type: DispatchType.swtch,\n        swtch\n    };\n}\n\nfunction mkTrigger(event: Event<void>): TriggerDispatch {\n    return {\n        type: DispatchType.triggerDown,\n        trigger: event\n    };\n}\n\nclass KeyboardIO {\n    constructor(\n        private _target: HTMLElement | HTMLDocument,\n        // tslint:disable-next-line\n        mappings: Array<KeyboardIO.Mapping> = KeyboardIO.defaultMappings\n    ) {\n        this._compileMappings(mappings);\n    }\n\n    bind(joystick0: JoystickInterface, joystick1: JoystickInterface, controlPanel: ControlPanelInterface): void {\n        if (this._joystick0) {\n            return;\n        }\n\n        this._joystick0 = joystick0;\n        this._joystick1 = joystick1;\n        this._controlPanel = controlPanel;\n\n        this._updateActionTable();\n\n        this._keydownListener = e => {\n            if (!this._compiledMappings.has(e.keyCode)) {\n                return;\n            }\n\n            const modifiers =\n                (e.shiftKey ? KeyboardIO.Modifier.shift : 0) |\n                (e.ctrlKey ? KeyboardIO.Modifier.ctrl : 0) |\n                (e.altKey ? KeyboardIO.Modifier.alt : 0);\n\n            if (!this._compiledMappings.get(e.keyCode).has(modifiers)) {\n                return;\n            }\n\n            const action = this._compiledMappings.get(e.keyCode).get(modifiers);\n\n            if (typeof action !== 'undefined') {\n                e.preventDefault();\n\n                const dispatch = this._dispatchTable[action];\n                switch (dispatch.type) {\n                    case DispatchType.swtch:\n                        dispatch.swtch.toggle(true);\n                        break;\n\n                    case DispatchType.triggerDown:\n                        dispatch.trigger.dispatch(undefined);\n                        break;\n\n                    default:\n                }\n            }\n        };\n\n        this._keyupListener = e => {\n            if (!this._compiledMappings.has(e.keyCode)) {\n                return;\n            }\n\n            for (const action of this._compiledMappings.get(e.keyCode).values()) {\n                e.preventDefault();\n\n                const dispatch = this._dispatchTable[action];\n\n                switch (dispatch.type) {\n                    case DispatchType.swtch:\n                        dispatch.swtch.toggle(false);\n                        break;\n\n                    default:\n                }\n            }\n        };\n\n        this._target.addEventListener('keydown', this._keydownListener);\n        this._target.addEventListener('keyup', this._keyupListener);\n    }\n\n    unbind(): void {\n        if (!this._joystick0) {\n            return;\n        }\n\n        this._target.removeEventListener('keydown', this._keydownListener);\n        this._target.removeEventListener('keyup', this._keyupListener);\n\n        this._joystick0 = this._joystick1 = this._controlPanel = null;\n        this._keydownListener = this._keyupListener = null;\n    }\n\n    private _updateActionTable(): void {\n        this._dispatchTable[KeyboardIO.Action.fullscreen] = mkTrigger(this.toggleFullscreen);\n        this._dispatchTable[KeyboardIO.Action.hardReset] = mkTrigger(this.hardReset);\n        this._dispatchTable[KeyboardIO.Action.togglePause] = mkTrigger(this.togglePause);\n        this._dispatchTable[KeyboardIO.Action.select] = mkSwitch(this._controlPanel.getSelectSwitch());\n        this._dispatchTable[KeyboardIO.Action.reset] = mkSwitch(this._controlPanel.getResetButton());\n        this._dispatchTable[KeyboardIO.Action.left0] = mkSwitch(this._joystick0.getLeft());\n        this._dispatchTable[KeyboardIO.Action.right0] = mkSwitch(this._joystick0.getRight());\n        this._dispatchTable[KeyboardIO.Action.up0] = mkSwitch(this._joystick0.getUp());\n        this._dispatchTable[KeyboardIO.Action.down0] = mkSwitch(this._joystick0.getDown());\n        this._dispatchTable[KeyboardIO.Action.fire0] = mkSwitch(this._joystick0.getFire());\n        this._dispatchTable[KeyboardIO.Action.left1] = mkSwitch(this._joystick1.getLeft());\n        this._dispatchTable[KeyboardIO.Action.right1] = mkSwitch(this._joystick1.getRight());\n        this._dispatchTable[KeyboardIO.Action.up1] = mkSwitch(this._joystick1.getUp());\n        this._dispatchTable[KeyboardIO.Action.down1] = mkSwitch(this._joystick1.getDown());\n        this._dispatchTable[KeyboardIO.Action.fire1] = mkSwitch(this._joystick1.getFire());\n    }\n\n    private _compileMappings(mappings: Array<KeyboardIO.Mapping>): void {\n        const compileMapping = (action: KeyboardIO.Action, keycode: number, modifiers: number) => {\n            if ((modifiers & ~(KeyboardIO.Modifier.shift | KeyboardIO.Modifier.ctrl | KeyboardIO.Modifier.alt)) !== 0) {\n                throw new Error(`invalid modifier set ${modifiers}`);\n            }\n\n            if (!this._compiledMappings.has(keycode)) {\n                this._compiledMappings.set(keycode, new Map<number, KeyboardIO.Action>());\n            }\n\n            this._compiledMappings.get(keycode).set(modifiers, action);\n        };\n\n        mappings.forEach(mapping => {\n            const action = mapping.action,\n                specs = Array.isArray(mapping.spec) ? mapping.spec : [mapping.spec];\n\n            specs.forEach(spec =>\n                compileMapping(\n                    action,\n                    typeof spec === 'object' ? spec.keycode : spec,\n                    typeof spec === 'object' ? spec.modifiers : 0\n                )\n            );\n        });\n    }\n\n    toggleFullscreen = new Event<void>();\n    hardReset = new Event<void>();\n    togglePause = new Event<void>();\n\n    private _keydownListener: (e: KeyboardEvent) => void = null;\n    private _keyupListener: (e: KeyboardEvent) => void = null;\n\n    private _joystick0: JoystickInterface = null;\n    private _joystick1: JoystickInterface = null;\n    private _controlPanel: ControlPanelInterface = null;\n\n    private _dispatchTable: { [action: number]: Dispatch } = {};\n    private _compiledMappings = new Map<number, Map<number, KeyboardIO.Action>>();\n}\n\nnamespace KeyboardIO {\n    export const enum Action {\n        select,\n        reset,\n        left0,\n        right0,\n        up0,\n        down0,\n        left1,\n        right1,\n        up1,\n        down1,\n        fire0,\n        fire1,\n\n        fullscreen,\n        hardReset,\n        togglePause\n    }\n\n    export const enum Modifier {\n        ctrl = 1,\n        alt = 2,\n        shift = 4\n    }\n\n    export interface ComplexKeySpec {\n        keycode: number;\n        modifiers: number;\n    }\n\n    export type keySpec = number | ComplexKeySpec;\n\n    export interface Mapping {\n        action: Action;\n        spec: keySpec | Array<keySpec>;\n    }\n\n    export const defaultMappings: Array<Mapping> = [\n        {\n            action: Action.select,\n            spec: {\n                keycode: 32, // space\n                modifiers: Modifier.shift\n            }\n        },\n        {\n            action: Action.reset,\n            spec: {\n                keycode: 13, // enter\n                modifiers: Modifier.shift\n            }\n        },\n        {\n            action: Action.left0,\n            spec: [\n                65, // w\n                37 // left\n            ]\n        },\n        {\n            action: Action.right0,\n            spec: [\n                68, // d\n                39 // right\n            ]\n        },\n        {\n            action: Action.up0,\n            spec: [\n                87, // w\n                38 // up\n            ]\n        },\n        {\n            action: Action.down0,\n            spec: [\n                83, // s\n                40 // down\n            ]\n        },\n        {\n            action: Action.fire0,\n            spec: [\n                32, // space\n                86 // v\n            ]\n        },\n        {\n            action: Action.left1,\n            spec: 74 // j\n        },\n        {\n            action: Action.right1,\n            spec: 76 // l\n        },\n        {\n            action: Action.up1,\n            spec: 73 // i\n        },\n        {\n            action: Action.down1,\n            spec: 75 // k\n        },\n        {\n            action: Action.fire1,\n            spec: 66 // b\n        },\n        {\n            action: Action.fullscreen,\n            spec: 13 // enter\n        },\n        {\n            action: Action.hardReset,\n            spec: {\n                keycode: 82, // r\n                modifiers: Modifier.shift\n            }\n        },\n        {\n            action: Action.togglePause,\n            spec: 80 // p\n        }\n    ];\n}\n\nexport { KeyboardIO as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport VanillaDriver from '../../driver/WebAudio';\nimport WaveformAudioOutputInterface from '../../../machine/io/WaveformAudioOutputInterface';\nimport PCMAudioEndpointInterface from '../../driver/PCMAudioEndpointInterface';\n\nclass WebAudioDriver {\n    constructor(private _fragmentSize?: number) {}\n\n    init(): void {}\n\n    bind(pcmAudio: boolean, channels: WebAudioDriver.Channels): void {\n        if (this._channels) {\n            return;\n        }\n        this._channels = [...channels] as any;\n\n        if (!this._driver || this._pcmAudio !== pcmAudio) {\n            if (this._driver) {\n                this._driver.close();\n            }\n\n            this._driver = pcmAudio\n                ? new VanillaDriver(0, this._channels.length, this._fragmentSize)\n                : new VanillaDriver(this._channels.length, 0, this._fragmentSize);\n            this._driver.init();\n        }\n\n        if (pcmAudio) {\n            this._driver.bind([], this._channels as Array<PCMAudioEndpointInterface>);\n        } else {\n            this._driver.bind(this._channels as Array<WaveformAudioOutputInterface>, []);\n        }\n\n        for (let i = 0; i < this._channels.length; i++) {\n            this._driver.setMasterVolume(i, this._volume);\n        }\n\n        this._pcmAudio = pcmAudio;\n    }\n\n    unbind(): void {\n        if (!this._channels) {\n            return;\n        }\n\n        this._driver.unbind();\n\n        this._channels = null;\n    }\n\n    setMasterVolume(volume: number): void {\n        this._volume = volume;\n\n        if (this._channels) {\n            for (let i = 0; i < this._channels.length; i++) {\n                this._driver.setMasterVolume(i, this._volume);\n            }\n        }\n    }\n\n    getMasterVolume(): number {\n        return this._volume;\n    }\n\n    async pause(): Promise<void> {\n        if (this._driver) {\n            await this._driver.pause();\n        }\n    }\n\n    async resume(): Promise<void> {\n        if (this._driver) {\n            await this._driver.resume();\n        }\n    }\n\n    private _driver: VanillaDriver;\n    private _pcmAudio = false;\n    private _volume = 1;\n    private _channels: WebAudioDriver.Channels;\n}\n\nnamespace WebAudioDriver {\n    export type Channels = Array<WaveformAudioOutputInterface> | Array<PCMAudioEndpointInterface>;\n}\n\nexport { WebAudioDriver as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport EmulationServiceInterface from './EmulationServiceInterface';\nimport EmulationContextInterface from './EmulationContextInterface';\n\nclass DriverManager {\n    bind(emulationService: EmulationServiceInterface): this {\n        if (this._driversBound) {\n            return this;\n        }\n\n        this._emulationService = emulationService;\n\n        if (this._shouldBindDrivers()) {\n            this._bindDrivers();\n        }\n\n        this._emulationService.stateChanged.addHandler(DriverManager._onEmuStateChange, this);\n\n        return this;\n    }\n\n    unbind(): this {\n        if (!this._emulationService) {\n            return this;\n        }\n\n        this._unbindDrivers();\n\n        this._emulationService.stateChanged.removeHandler(DriverManager._onEmuStateChange, this);\n\n        this._emulationService = null;\n\n        return this;\n    }\n\n    addDriver(driver: DriverManager.Driver, binder: DriverManager.Binder): this {\n        this._drivers.set(driver, new DriverManager.DriverContext(driver, binder));\n\n        if (this._driversBound) {\n            binder(this._emulationService.getEmulationContext(), driver);\n        }\n\n        return this;\n    }\n\n    removeDriver(driver: DriverManager.Driver): this {\n        if (!this._drivers.get(driver)) {\n            return this;\n        }\n\n        driver.unbind();\n\n        this._drivers.delete(driver);\n\n        return this;\n    }\n\n    private static _onEmuStateChange(newState: EmulationServiceInterface.State, self: DriverManager): void {\n        if (self._shouldBindDrivers(newState)) {\n            self._bindDrivers();\n        } else {\n            self._unbindDrivers();\n        }\n    }\n\n    private _shouldBindDrivers(\n        state = this._emulationService ? this._emulationService.getState() : undefined\n    ): boolean {\n        return (\n            this._emulationService &&\n            (state === EmulationServiceInterface.State.running || state === EmulationServiceInterface.State.paused)\n        );\n    }\n\n    private _bindDrivers(): void {\n        if (this._driversBound) {\n            return;\n        }\n\n        this._drivers.forEach(driverContext =>\n            driverContext.binder(this._emulationService.getEmulationContext(), driverContext.driver)\n        );\n\n        this._driversBound = true;\n    }\n\n    private _unbindDrivers(): void {\n        if (!this._driversBound) {\n            return;\n        }\n\n        this._drivers.forEach(driverContext => driverContext.driver.unbind());\n\n        this._driversBound = false;\n    }\n\n    private _emulationService: EmulationServiceInterface;\n    private _drivers = new Map<DriverManager.Driver, DriverManager.DriverContext>();\n    private _driversBound = false;\n}\n\nnamespace DriverManager {\n    export interface Driver {\n        unbind(): void;\n    }\n\n    export interface Binder {\n        (context: EmulationContextInterface, driver: Driver): void;\n    }\n\n    export class DriverContext {\n        constructor(public driver: Driver, public binder: Binder) {}\n    }\n}\n\nexport { DriverManager as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { EventInterface } from 'microevent.ts';\n\nimport StellaConfig from '../../../machine/stella/Config';\nimport CartridgeInfo from '../../../machine/stella/cartridge/CartridgeInfo';\nimport EmulationContextInterface from './EmulationContextInterface';\nimport { ProcessorConfig as VideoProcessorConfig } from '../../../video/processing/config';\n\ninterface EmulationServiceInterface {\n    init(): Promise<void>;\n\n    start(\n        buffer: { [i: number]: number; length: number },\n        config: StellaConfig,\n        cartridgeType?: CartridgeInfo.CartridgeType,\n        videoProcessing?: Array<VideoProcessorConfig>\n    ): Promise<EmulationServiceInterface.State>;\n\n    stop(): Promise<EmulationServiceInterface.State>;\n\n    pause(): Promise<EmulationServiceInterface.State>;\n\n    resume(): Promise<EmulationServiceInterface.State>;\n\n    reset(): Promise<EmulationServiceInterface.State>;\n\n    setRateLimit(enforce: boolean): Promise<void>;\n\n    getRateLimit(): boolean;\n\n    getState(): EmulationServiceInterface.State;\n\n    getLastError(): Error;\n\n    getEmulationContext(): EmulationContextInterface;\n\n    getFrequency(): number;\n\n    stateChanged: EventInterface<EmulationServiceInterface.State>;\n\n    frequencyUpdate: EventInterface<number>;\n}\n\nnamespace EmulationServiceInterface {\n    export enum State {\n        stopped,\n        running,\n        paused,\n        error\n    }\n}\n\nexport { EmulationServiceInterface as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Joystick from '../../../../machine/io/DigitalJoystick';\nimport ControlPanel from '../../../../machine/stella/ControlPanel';\nimport Paddle from '../../../../machine/io/Paddle';\nimport ControlState from './ControlState';\nimport { RpcProviderInterface } from 'worker-rpc';\n\nimport { SIGNAL_TYPE } from './messages';\n\nclass ControlProxy {\n    constructor(private _rpc: RpcProviderInterface) {\n        for (let i = 0; i < 2; i++) {\n            this._joysticks[i] = new Joystick();\n        }\n\n        for (let i = 0; i < 4; i++) {\n            this._paddles[i] = new Paddle();\n        }\n    }\n\n    sendUpdate(): void {\n        this._rpc.signal<ControlState>(SIGNAL_TYPE.controlStateUpdate, {\n            joystickState: this._joysticks.map(ControlProxy._joystickState),\n            paddleState: this._paddles.map(ControlProxy._paddleState),\n            controlPanelState: ControlProxy._controlPanelState(this._controlPanel)\n        });\n    }\n\n    getJoystick(i: number): Joystick {\n        if (i < 0 || i > 1) {\n            throw new Error(`invalid joystick index ${i}`);\n        }\n\n        return this._joysticks[i];\n    }\n\n    getControlPanel(): ControlPanel {\n        return this._controlPanel;\n    }\n\n    getPaddle(i: number): Paddle {\n        if (i < 0 || i > 3) {\n            throw new Error(`invalid paddle index ${i}`);\n        }\n\n        return this._paddles[i];\n    }\n\n    private static _joystickState(joystick: Joystick): ControlState.JoystickState {\n        return {\n            up: joystick.getUp().read(),\n            down: joystick.getDown().read(),\n            left: joystick.getLeft().read(),\n            right: joystick.getRight().read(),\n            fire: joystick.getFire().read()\n        };\n    }\n\n    private static _paddleState(paddle: Paddle): ControlState.PaddleState {\n        return {\n            value: paddle.getValue(),\n            fire: paddle.getFire().read()\n        };\n    }\n\n    private static _controlPanelState(controlPanel: ControlPanel): ControlState.ControlPanelState {\n        return {\n            difficulty0: controlPanel.getDifficultySwitchP0().read(),\n            difficulty1: controlPanel.getDifficultySwitchP1().read(),\n            select: controlPanel.getSelectSwitch().read(),\n            reset: controlPanel.getResetButton().read(),\n            color: controlPanel.getColorSwitch().read()\n        };\n    }\n\n    private _joysticks = new Array<Joystick>(2);\n    private _paddles = new Array<Paddle>(4);\n    private _controlPanel = new ControlPanel();\n}\n\nexport { ControlProxy as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport VideoEndpointInterface from '../../../driver/VideoEndpointInterface';\nimport JoystickInterface from '../../../../machine/io/DigitalJoystickInterface';\nimport ControlPanelInterface from '../../../../machine/stella/ControlPanelInterface';\nimport PaddleInterface from '../../../../machine/io/PaddleInterface';\nimport WaveformAudioOutputInterface from '../../../../machine/io/WaveformAudioOutputInterface';\nimport PCMAudioEndpointInterface from '../../../driver/PCMAudioEndpointInterface';\nimport Config from '../../../../machine/stella/Config';\n\nimport EmulationContextInterface from '../EmulationContextInterface';\nimport VideoProxy from './VideoProxy';\nimport ControlProxy from './ControlProxy';\nimport WaveformAudioProxy from './WaveformAudioProxy';\nimport PCMAudioProxy from './PCMAudioProxy';\n\nclass EmulationContext implements EmulationContextInterface {\n    constructor(\n        private _videoProxy: VideoProxy,\n        private _controlProxy: ControlProxy,\n        private _waveformChannels: Array<WaveformAudioProxy>,\n        private _pcmChannel: PCMAudioProxy\n    ) {\n        if (this._waveformChannels.length !== 2) {\n            throw new Error(`invalid channel count ${this._waveformChannels.length}`);\n        }\n    }\n\n    setConfig(config: Config): void {\n        this._config = config;\n    }\n\n    getConfig(): Config {\n        return this._config;\n    }\n\n    getVideo(): VideoEndpointInterface {\n        return this._videoProxy;\n    }\n\n    getJoystick(i: number): JoystickInterface {\n        return this._controlProxy.getJoystick(i);\n    }\n\n    getControlPanel(): ControlPanelInterface {\n        return this._controlProxy.getControlPanel();\n    }\n\n    getPaddle(i: number): PaddleInterface {\n        return this._controlProxy.getPaddle(i);\n    }\n\n    getWaveformChannels(): Array<WaveformAudioOutputInterface> {\n        return this._waveformChannels;\n    }\n\n    getPCMChannel(): PCMAudioEndpointInterface {\n        return this._pcmChannel;\n    }\n\n    getVideoProxy(): VideoProxy {\n        return this._videoProxy;\n    }\n\n    private _config: Config = null;\n}\n\nexport { EmulationContext as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\nimport { RpcProvider } from 'worker-rpc';\n\nimport EmulationServiceInterface from '../EmulationServiceInterface';\nimport EmulationContext from './EmulationContext';\nimport EmulationContextInterface from '../EmulationContextInterface';\nimport { ProcessorConfig as VideoProcessorConfig } from '../../../../video/processing/config';\nimport VideoProxy from './VideoProxy';\nimport ControlProxy from './ControlProxy';\nimport WaveformAudioProxy from './WaveformAudioProxy';\nimport PCMAudioProxy from './PCMAudioProxy';\n\nimport StellaConfig from '../../../../machine/stella/Config';\nimport CartridgeInfo from '../../../../machine/stella/cartridge/CartridgeInfo';\n\nimport { Mutex } from 'async-mutex';\n\nimport { RPC_TYPE, SIGNAL_TYPE, EmulationStartMessage, SetupMessage } from './messages';\n\nconst CONTROL_PROXY_UPDATE_INTERVAL = 25;\n\nconst enum ProxyState {\n    stopped,\n    running,\n    paused\n}\n\nclass EmulationService implements EmulationServiceInterface {\n    constructor(private _stellaWorkerUri: string, private _videoWorkerUri?: string) {}\n\n    init(): Promise<void> {\n        this._worker = new Worker(this._stellaWorkerUri);\n        this._rpc = new RpcProvider((message, transfer?) => this._worker.postMessage(message, transfer));\n\n        this._pcmChannel = new PCMAudioProxy(0, this._rpc).init();\n\n        for (let i = 0; i < 2; i++) {\n            this._waveformChannels[i] = new WaveformAudioProxy(i, this._rpc).init();\n        }\n\n        const videoProxy = new VideoProxy(this._rpc),\n            controlProxy = new ControlProxy(this._rpc);\n\n        videoProxy.init();\n\n        this._emulationContext = new EmulationContext(\n            videoProxy,\n            controlProxy,\n            this._waveformChannels,\n            this._pcmChannel\n        );\n\n        this._worker.onmessage = messageEvent => this._rpc.dispatch(messageEvent.data);\n\n        this._rpc\n            .registerSignalHandler<number>(SIGNAL_TYPE.emulationFrequencyUpdate, this._onFrequencyUpdate.bind(this))\n            .registerSignalHandler<string>(SIGNAL_TYPE.emulationError, this._onEmulationError.bind(this));\n\n        this._controlProxy = controlProxy;\n\n        return this._startVideoProcessingPipeline().then(() => this.setRateLimit(this._rateLimitEnforced));\n    }\n\n    async start(\n        buffer: { [i: number]: number; length: number },\n        config: StellaConfig,\n        cartridgeType?: CartridgeInfo.CartridgeType,\n        videoProcessing?: Array<VideoProcessorConfig>\n    ): Promise<EmulationServiceInterface.State> {\n        await this.stop();\n\n        return this._mutex.runExclusive(async () => {\n            const state = await this._rpc.rpc<EmulationStartMessage, EmulationServiceInterface.State>(\n                RPC_TYPE.emulationStart,\n                {\n                    buffer,\n                    config,\n                    cartridgeType,\n                    videoProcessing\n                }\n            );\n\n            if (state === EmulationServiceInterface.State.paused) {\n                this._saveConfig = config;\n                this._emulationContext.setConfig(config);\n\n                await this._startProxies(config);\n            } else {\n                this._saveConfig = null;\n            }\n\n            return this._applyState(state);\n        });\n    }\n\n    pause(): Promise<EmulationServiceInterface.State> {\n        return this._mutex.runExclusive(() =>\n            this._rpc.rpc<void, EmulationServiceInterface.State>(RPC_TYPE.emulationPause).then(state => {\n                this._pauseProxies();\n                return this._applyState(state);\n            })\n        );\n    }\n\n    stop(): Promise<EmulationServiceInterface.State> {\n        return this._mutex.runExclusive(() =>\n            this._rpc.rpc<void, EmulationServiceInterface.State>(RPC_TYPE.emulationStop).then(state => {\n                this._stopProxies();\n                return this._applyState(state);\n            })\n        );\n    }\n\n    reset(): Promise<EmulationServiceInterface.State> {\n        return this._mutex.runExclusive(async () => {\n            const state = await this._rpc.rpc<void, EmulationServiceInterface.State>(RPC_TYPE.emulationReset);\n\n            // Try to restart the proxies if the reset recovered from an an error\n            if (\n                this._state === EmulationServiceInterface.State.error &&\n                (state === EmulationServiceInterface.State.running ||\n                    state === EmulationServiceInterface.State.paused) &&\n                this._saveConfig\n            ) {\n                await this._startProxies(this._saveConfig);\n            }\n\n            return this._applyState(state);\n        });\n    }\n\n    resume(): Promise<EmulationServiceInterface.State> {\n        return this._mutex.runExclusive(() =>\n            this._rpc.rpc<void, EmulationServiceInterface.State>(RPC_TYPE.emulationResume).then(state => {\n                this._resumeProxies();\n                return this._applyState(state);\n            })\n        );\n    }\n\n    setRateLimit(enforce: boolean): Promise<void> {\n        this._rateLimitEnforced = enforce;\n\n        return this._rpc.rpc<boolean, void>(RPC_TYPE.emulationSetRateLimit, enforce);\n    }\n\n    getFrequency(): number {\n        return this._frequency;\n    }\n\n    getRateLimit(): boolean {\n        return this._rateLimitEnforced;\n    }\n\n    getState(): EmulationServiceInterface.State {\n        return this._state;\n    }\n\n    getLastError(): Error {\n        return this._lastError;\n    }\n\n    getEmulationContext(): EmulationContextInterface {\n        switch (this._state) {\n            case EmulationServiceInterface.State.running:\n            case EmulationServiceInterface.State.paused:\n                return this._emulationContext;\n\n            default:\n                return null;\n        }\n    }\n\n    private _fetchLastError(): Promise<Error> {\n        return this._rpc\n            .rpc<void, string>(RPC_TYPE.emulationFetchLastError)\n            .then(message => (message ? new Error(message) : null));\n    }\n\n    private _applyState(\n        state: EmulationServiceInterface.State\n    ): Promise<EmulationServiceInterface.State> | EmulationServiceInterface.State {\n        if (state === EmulationServiceInterface.State.error) {\n            return this._fetchLastError().then(error => {\n                this._state = state;\n                this._lastError = error;\n\n                this._stopProxies();\n\n                this.stateChanged.dispatch(state);\n\n                return state;\n            });\n        } else {\n            this._state = state;\n            this.stateChanged.dispatch(state);\n\n            return state;\n        }\n    }\n\n    private _onFrequencyUpdate(message: number): void {\n        this._frequency = message;\n        this.frequencyUpdate.dispatch(this._frequency);\n    }\n\n    private _onEmulationError(message: string): void {\n        this._lastError = new Error(message || '');\n\n        this._stopProxies();\n        this._state = EmulationServiceInterface.State.error;\n        this.stateChanged.dispatch(this._state);\n    }\n\n    private async _startProxies(config: StellaConfig): Promise<void> {\n        await this._emulationContext.getVideoProxy().start();\n\n        for (let i = 0; i < this._waveformChannels.length; i++) {\n            await this._waveformChannels[i].start(config);\n        }\n        await this._pcmChannel.start();\n\n        this._startControlUpdates();\n\n        this._proxyState = ProxyState.running;\n    }\n\n    private _stopProxies(): void {\n        if (this._proxyState === ProxyState.stopped) {\n            return;\n        }\n\n        this._emulationContext.getVideoProxy().stop();\n        this._pcmChannel.stop();\n        this._stopControlUpdates();\n\n        this._proxyState = ProxyState.stopped;\n    }\n\n    private _pauseProxies(): void {\n        if (this._proxyState !== ProxyState.running) {\n            return;\n        }\n\n        this._stopControlUpdates();\n\n        this._proxyState = ProxyState.paused;\n    }\n\n    private _resumeProxies(): void {\n        if (this._proxyState !== ProxyState.paused) {\n            return;\n        }\n\n        this._startControlUpdates();\n\n        this._proxyState = ProxyState.running;\n    }\n\n    private _startControlUpdates(): void {\n        if (this._controlProxyUpdateHandle === null) {\n            this._controlProxyUpdateHandle = setInterval(\n                () => this._controlProxy.sendUpdate(),\n                CONTROL_PROXY_UPDATE_INTERVAL\n            );\n        }\n    }\n\n    private _stopControlUpdates(): void {\n        if (this._controlProxyUpdateHandle !== null) {\n            clearInterval(this._controlProxyUpdateHandle);\n            this._controlProxyUpdateHandle = null;\n        }\n    }\n\n    private async _startVideoProcessingPipeline(): Promise<void> {\n        let channel: MessageChannel = null;\n\n        if (this._videoWorkerUri) {\n            channel = new MessageChannel();\n\n            const worker = new Worker(this._videoWorkerUri),\n                rpc = new RpcProvider((payload: any, transfer?: any) => worker.postMessage(payload, transfer));\n\n            worker.onmessage = (e: MessageEvent) => rpc.dispatch(e.data);\n\n            await rpc.rpc('/use-port', channel.port1, [channel.port1]);\n        }\n\n        await this._rpc.rpc<SetupMessage, any>(\n            RPC_TYPE.setup,\n            {\n                videoProcessorPort: channel && channel.port2\n            },\n            channel ? [channel.port2] : []\n        );\n    }\n\n    stateChanged = new Event<EmulationServiceInterface.State>();\n    frequencyUpdate = new Event<number>();\n\n    private _rateLimitEnforced = true;\n\n    private _mutex = new Mutex();\n    private _worker: Worker = null;\n    private _rpc: RpcProvider = null;\n\n    private _state = EmulationServiceInterface.State.stopped;\n    private _lastError: Error = null;\n\n    private _emulationContext: EmulationContext = null;\n    private _frequency = 0;\n\n    private _waveformChannels = new Array<WaveformAudioProxy>(2);\n    private _pcmChannel: PCMAudioProxy = null;\n\n    private _controlProxy: ControlProxy = null;\n    private _controlProxyUpdateHandle: any = null;\n    private _proxyState = ProxyState.stopped;\n\n    private _saveConfig: StellaConfig = null;\n}\n\nexport { EmulationService as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { RpcProviderInterface } from 'worker-rpc';\nimport { Event } from 'microevent.ts';\n\nimport Pool from '../../../../tools/pool/Pool';\nimport PoolMemberInterface from '../../../../tools/pool/PoolMemberInterface';\nimport PCMAudioEndpointInterface from '../../../driver/PCMAudioEndpointInterface';\nimport {\n    SIGNAL_TYPE,\n    RPC_TYPE,\n    PCMAudioReturnFrameMessage,\n    PCMAudioNewFrameMessage,\n    PCMAudioTogglePauseMessage,\n    PCMAudioParametersResponse\n} from './messages';\n\nclass PCMAudioProxy implements PCMAudioEndpointInterface {\n    constructor(private _index: number, private _rpc: RpcProviderInterface) {\n        this._framePool.event.release.addHandler(PCMAudioProxy._onReleaseFragment, this);\n\n        this._signalReturnFrame = SIGNAL_TYPE.pcmAudioReturnFrame(this._index);\n    }\n\n    init(): this {\n        this._rpc\n            .registerSignalHandler(SIGNAL_TYPE.pcmAudioNewFrame(this._index), this._onNewFrame.bind(this))\n            .registerSignalHandler(SIGNAL_TYPE.pcmAudioTogglePause(this._index), this._onTogglePause.bind(this));\n\n        return this;\n    }\n\n    async start(): Promise<void> {\n        if (this._enabled) {\n            return;\n        }\n\n        const params = await this._rpc.rpc<void, PCMAudioParametersResponse>(\n            RPC_TYPE.getPCMAudioParameters(this._index)\n        );\n\n        this._sampleRate = params.sampleRate;\n        this._frameSize = params.frameSize;\n        this._paused = params.paused;\n\n        this._enabled = true;\n    }\n\n    stop(): void {\n        this._enabled = false;\n    }\n\n    isPaused(): boolean {\n        return this._paused;\n    }\n\n    getSampleRate(): number {\n        return this._sampleRate;\n    }\n\n    getFrameSize(): number {\n        return this._frameSize;\n    }\n\n    private static _onReleaseFragment(frame: Float32Array, self: PCMAudioProxy): void {\n        if (!self._frameMap.has(frame)) {\n            return;\n        }\n\n        self._rpc.signal<PCMAudioReturnFrameMessage>(\n            self._signalReturnFrame,\n            {\n                id: self._frameMap.get(frame),\n                buffer: frame.buffer\n            },\n            [frame.buffer]\n        );\n    }\n\n    private _onNewFrame(msg: PCMAudioNewFrameMessage): void {\n        if (!this._enabled) {\n            return;\n        }\n\n        const frame = this._framePool.get(),\n            data = new Float32Array(msg.buffer);\n\n        frame.adopt(data);\n        this._frameMap.set(data, msg.id);\n\n        this.newFrame.dispatch(frame);\n    }\n\n    private _onTogglePause(msg: PCMAudioTogglePauseMessage): void {\n        if (msg.paused === this._paused) {\n            return;\n        }\n\n        this._paused = msg.paused;\n        this.togglePause.dispatch(this._paused);\n    }\n\n    newFrame = new Event<PoolMemberInterface<Float32Array>>();\n\n    togglePause = new Event<boolean>();\n\n    private _sampleRate = 0;\n    private _frameSize = 0;\n    private _paused = false;\n\n    private _framePool = new Pool<Float32Array>(() => null);\n    private _frameMap = new WeakMap<Float32Array, number>();\n\n    private _enabled = false;\n\n    private _signalReturnFrame = '';\n}\n\nexport { PCMAudioProxy as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport VideoEndpointInterface from '../../../driver/VideoEndpointInterface';\nimport { RpcProviderInterface } from 'worker-rpc';\nimport PoolMemberInterface from '../../../../tools/pool/PoolMemberInterface';\n\nimport {\n    SIGNAL_TYPE,\n    RPC_TYPE,\n    VideoNewFrameMessage,\n    VideoReturnSurfaceMessage,\n    VideoParametersResponse\n} from './messages';\n\nclass VideoProxy implements VideoEndpointInterface {\n    constructor(private _rpc: RpcProviderInterface) {}\n\n    init(): void {\n        this._rpc.registerSignalHandler(SIGNAL_TYPE.videoNewFrame, this._onNewFrame.bind(this));\n    }\n\n    async start(): Promise<void> {\n        if (this._active) {\n            this.stop();\n        }\n\n        const videoParameters = await this._rpc.rpc<void, VideoParametersResponse>(RPC_TYPE.getVideoParameters);\n\n        this._active = true;\n        this._width = videoParameters.width;\n        this._height = videoParameters.height;\n        this._ids = new Set<number>();\n    }\n\n    stop(): void {\n        this._active = false;\n        this._ids = null;\n    }\n\n    getWidth(): number {\n        return this._width;\n    }\n\n    getHeight(): number {\n        return this._height;\n    }\n\n    private _onNewFrame(message: VideoNewFrameMessage): void {\n        if (!this._active) {\n            console.warn('video proxy deactivated: ignoring frame');\n            return;\n        }\n\n        if (this._width !== message.width || this._height !== message.height) {\n            console.warn(`surface dimensions do not match; ignoring frame`);\n            return;\n        }\n\n        this._ids.add(message.id);\n\n        const imageData = new ImageData(new Uint8ClampedArray(message.buffer), message.width, message.height);\n\n        this.newFrame.dispatch({\n            get: () => imageData,\n\n            release: () => {\n                if (this._active && this._ids.has(message.id)) {\n                    this._rpc.signal<VideoReturnSurfaceMessage>(\n                        SIGNAL_TYPE.videoReturnSurface,\n                        {\n                            id: message.id,\n                            buffer: message.buffer\n                        },\n                        [message.buffer]\n                    );\n                }\n            },\n\n            dispose: () => undefined,\n\n            adopt: () => {\n                throw new Error('adopt is not implemented');\n            }\n        });\n    }\n\n    newFrame = new Event<PoolMemberInterface<ImageData>>();\n\n    private _active = false;\n    private _width = 0;\n    private _height = 0;\n    private _ids: Set<number> = null;\n}\n\nexport { VideoProxy as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport { RpcProviderInterface } from 'worker-rpc';\nimport WaveformAudioOutputInterface from '../../../../machine/io/WaveformAudioOutputInterface';\nimport ToneGenerator from '../../../../machine/stella/tia/ToneGenerator';\nimport StellaConfig from '../../../../machine/stella/Config';\nimport AudioOutputBuffer from '../../../../tools/AudioOutputBuffer';\n\nimport {\n    SIGNAL_TYPE,\n    RPC_TYPE,\n    WaveformAudioBufferChangeMessage,\n    WaveformAudioVolumeChangeMessage,\n    WaveformAudioParametersResponse\n} from './messages';\n\nclass WaveformAudioProxy implements WaveformAudioOutputInterface {\n    constructor(private _index: number, private _rpc: RpcProviderInterface) {}\n\n    init(): this {\n        this._rpc\n            .registerSignalHandler(SIGNAL_TYPE.waveformAudioBufferChange, this._onBufferChangeSignal.bind(this))\n            .registerSignalHandler(SIGNAL_TYPE.waveformAudioVolumeChange, this._onVolumeChangeSignal.bind(this))\n            .registerSignalHandler(SIGNAL_TYPE.audioStop, this._onStopSignal.bind(this));\n\n        return this;\n    }\n\n    async start(config: StellaConfig): Promise<void> {\n        const parameters = await this._rpc.rpc<void, WaveformAudioParametersResponse>(\n            RPC_TYPE.getWaveformAudioParameters(this._index)\n        );\n\n        this._toneGenerator.setConfig(config);\n        this.setVolume(parameters.volume);\n    }\n\n    setVolume(value: number): this {\n        this._volume = value;\n\n        return this;\n    }\n\n    getVolume(): number {\n        return this._volume;\n    }\n\n    getBuffer(key: number): AudioOutputBuffer {\n        return this._toneGenerator.getBuffer(key);\n    }\n\n    private _onVolumeChangeSignal(message: WaveformAudioVolumeChangeMessage): void {\n        if (message.index === this._index) {\n            this._volume = message.value;\n            this.volumeChanged.dispatch(this._volume);\n        }\n    }\n\n    private _onBufferChangeSignal(message: WaveformAudioBufferChangeMessage): void {\n        if (message.index === this._index) {\n            this.bufferChanged.dispatch(message.key);\n        }\n    }\n\n    private _onStopSignal(index: number): void {\n        if (index === this._index) {\n            this.stop.dispatch(undefined);\n        }\n    }\n\n    bufferChanged = new Event<number>();\n    volumeChanged = new Event<number>();\n    stop = new Event<void>();\n\n    private _toneGenerator = new ToneGenerator();\n    private _volume = 0;\n}\n\nexport { WaveformAudioProxy as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2018 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport StellaConfig from '../../../../machine/stella/Config';\nimport CartridgeInfo from '../../../../machine/stella/cartridge/CartridgeInfo';\nimport { ProcessorConfig as VideoProcessorConfig } from '../../../../video/processing/config';\n\nexport const RPC_TYPE = {\n    emulationPause: 'emulation/pause',\n    emulationReset: 'emulation/reset',\n    emulationResume: 'emulation/resume',\n    emulationSetRateLimit: 'emulation/setRateLimit',\n    emulationStart: 'emulation/start',\n    emulationStop: 'emulation/stop',\n    emulationFetchLastError: 'emulation/fetchLastError',\n    getVideoParameters: 'video/getParameters',\n    getWaveformAudioParameters: (index: number) => `audio/waveform/getParameters/${index}`,\n    getPCMAudioParameters: (index: number) => `audio/pcm/getParameters/${index}`,\n    setup: '/setup'\n};\nObject.freeze(RPC_TYPE);\n\nexport const SIGNAL_TYPE = {\n    emulationError: 'emulation/error',\n    emulationFrequencyUpdate: 'emulation/frequencyUpdate',\n    videoNewFrame: 'video/newFrame',\n    videoReturnSurface: 'video/returnSurface',\n    controlStateUpdate: 'control/stateUpdate',\n    waveformAudioVolumeChange: 'audio/waveform/volumeChange',\n    waveformAudioBufferChange: 'audio/waveform/bufferChange',\n    pcmAudioNewFrame: (index: number) => `audio/pcm/newFrame/${index}`,\n    pcmAudioTogglePause: (index: number) => `audio/pcm/togglePause/${index}`,\n    pcmAudioReturnFrame: (index: number) => `audio/pcm/returnFrame/${index}`,\n    audioStop: 'audio/stop'\n};\nObject.freeze(SIGNAL_TYPE);\n\nexport interface SetupMessage {\n    videoProcessorPort: MessagePort;\n}\n\nexport interface EmulationStartMessage {\n    buffer: { [i: number]: number; length: number };\n    config: StellaConfig;\n    cartridgeType?: CartridgeInfo.CartridgeType;\n    videoProcessing?: Array<VideoProcessorConfig>;\n}\n\nexport interface VideoParametersResponse {\n    width: number;\n    height: number;\n}\n\nexport interface WaveformAudioParametersResponse {\n    volume: number;\n}\n\nexport interface VideoNewFrameMessage {\n    id: number;\n    width: number;\n    height: number;\n    buffer: ArrayBuffer;\n}\n\nexport interface VideoReturnSurfaceMessage {\n    id: number;\n    buffer: ArrayBuffer;\n}\n\nexport interface WaveformAudioVolumeChangeMessage {\n    index: number;\n    value: number;\n}\n\nexport interface WaveformAudioBufferChangeMessage {\n    index: number;\n    key: number;\n}\n\nexport interface PCMAudioParametersResponse {\n    sampleRate: number;\n    frameSize: number;\n    paused: boolean;\n}\n\nexport interface PCMAudioNewFrameMessage {\n    buffer: ArrayBuffer;\n    id: number;\n}\n\nexport interface PCMAudioTogglePauseMessage {\n    paused: boolean;\n}\n\nexport interface PCMAudioReturnFrameMessage {\n    id: number;\n    buffer: ArrayBuffer;\n}\n"]}