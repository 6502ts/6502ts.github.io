{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "node_modules/base64-js/index.js",
    "node_modules/browserify/node_modules/buffer/index.js",
    "node_modules/browserify/node_modules/isarray/index.js",
    "node_modules/ieee754/index.js",
    "node_modules/microevent.ts/lib/Event.js",
    "node_modules/microevent.ts/lib/index.js",
    "node_modules/path-browserify/index.js",
    "node_modules/process/browser.js",
    "node_modules/setimmediate2/dist/setImmediate.js",
    "node_modules/tslib/tslib.js",
    "node_modules/util/node_modules/inherits/inherits_browser.js",
    "node_modules/util/support/isBufferBrowser.js",
    "node_modules/util/util.js",
    "src/cli/AbstractCLI.ts",
    "src/cli/CommandInterpreter.ts",
    "src/cli/Completer.ts",
    "src/cli/DebuggerFrontend.ts",
    "src/cli/EhBasicCLI.ts",
    "src/cli/JqtermCLIRunner.ts",
    "src/fs/AbstractFileSystemProvider.ts",
    "src/fs/PrepackagedFilesystemProvider.ts",
    "src/machine/Debugger.ts",
    "src/machine/board/BoardInterface.ts",
    "src/machine/cpu/Cpu.ts",
    "src/machine/cpu/CpuInterface.ts",
    "src/machine/cpu/Disassembler.ts",
    "src/machine/cpu/Instruction.ts",
    "src/machine/ehbasic/Board.ts",
    "src/machine/ehbasic/Memory.ts",
    "src/machine/vanilla/Board.ts",
    "src/machine/vanilla/Memory.ts",
    "src/tools/ClockProbe.ts",
    "src/tools/binary.ts",
    "src/tools/hex.ts",
    "src/tools/scheduler/ImmedateScheduler.ts",
    "src/tools/scheduler/PeriodicScheduler.ts",
    "src/tools/scheduler/setImmediate.ts",
    "src/web/ehBasicCLI.ts"
  ],
  "names": [],
  "mappingslHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7vDA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACphxpQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvrjBA,+CAAoC;AAEpC;IAAA;QAEI,WAAM,GAAuB;YACzB,eAAe,EAAE,IAAI,qBAAK,EAAQ;YAClC,IAAI,EAAE,IAAI,qBAAK,EAAQ;YACvB,aAAa,EAAE,IAAI,qBAAK,EAAQ;YAChC,MAAM,EAAE,IAAI,qBAAK,EAAQ;YACzB,wBAAwB,EAAE,IAAI,qBAAK,EAA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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n",
    "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n",
    "var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n",
    "exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n",
    "\"use strict\";\nvar factories = [];\nfactories[0] = function () {\n    return function dispatcher0() { };\n};\nfactories[1] = function (callback, context) {\n    if (typeof (context) === 'undefined')\n        return callback;\n    return function dispatcher1(payload) {\n        callback(payload, context);\n    };\n};\nfunction getFactory(handlerCount) {\n    if (!factories[handlerCount])\n        factories[handlerCount] = compileFactory(handlerCount);\n    return factories[handlerCount];\n}\nfunction compileFactory(handlerCount) {\n    var src = 'return function dispatcher' + handlerCount + '(payload) {\\n';\n    var argsHandlers = [], argsContexts = [];\n    for (var i = 0; i < handlerCount; i++) {\n        argsHandlers.push('cb' + i);\n        argsContexts.push('ctx' + i);\n        src += '    cb' + i + '(payload, ctx' + i + ');\\n';\n    }\n    src += '};';\n    return new (Function.bind.apply(Function, [void 0].concat(argsHandlers.concat(argsContexts), [src])))();\n}\nvar Event = (function () {\n    function Event() {\n        this.hasHandlers = false;\n        this._handlers = [];\n        this._contexts = [];\n        this._createDispatcher();\n    }\n    Event.prototype.addHandler = function (handler, context) {\n        if (!this.isHandlerAttached(handler, context)) {\n            this._handlers.push(handler);\n            this._contexts.push(context);\n            this._createDispatcher();\n            this._updateHasHandlers();\n        }\n        return this;\n    };\n    Event.prototype.removeHandler = function (handler, context) {\n        var idx = this._getHandlerIndex(handler, context);\n        if (typeof (idx) !== 'undefined') {\n            this._handlers.splice(idx, 1);\n            this._contexts.splice(idx, 1);\n            this._createDispatcher();\n            this._updateHasHandlers();\n        }\n        return this;\n    };\n    Event.prototype.isHandlerAttached = function (handler, context) {\n        return typeof (this._getHandlerIndex(handler, context)) !== 'undefined';\n    };\n    Event.prototype._updateHasHandlers = function () {\n        this.hasHandlers = !!this._handlers.length;\n    };\n    Event.prototype._getHandlerIndex = function (handler, context) {\n        var handlerCount = this._handlers.length;\n        var idx;\n        for (idx = 0; idx < handlerCount; idx++) {\n            if (this._handlers[idx] === handler && this._contexts[idx] === context)\n                break;\n        }\n        return idx < handlerCount ? idx : undefined;\n    };\n    Event.prototype._createDispatcher = function () {\n        this.dispatch = getFactory(this._handlers.length).apply(this, this._handlers.concat(this._contexts));\n    };\n    return Event;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Event;\n",
    "\"use strict\";\nvar Event_1 = require('./Event');\nexports.Event = Event_1.default;\n",
    "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n",
    "// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n",
    "(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.immediate = factory());\n}(this, (function () { 'use strict';\n\nvar context = (function () {\n  /* eslint no-eval: 0 */\n  return this || (1, eval)('this');\n})();\n\n// @see http://codeforhire.com/2013/09/21/setimmediate-and-messagechannel-broken-on-internet-explorer-10/\nvar useNative = (function () {\n  return !(context.navigator && /Trident|Edge/.test(context.navigator.userAgent));\n})();\n\nvar nextId = 1;\nvar lock = false;\nvar TASKS = {};\n\nfunction wrap(handler) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  var len = args.length;\n\n  return !len ? function () {\n    return handler.call(undefined);\n  } : len === 1 ? function () {\n    return handler.call(undefined, args[0]);\n  } : len === 2 ? function () {\n    return handler.call(undefined, args[0], args[1]);\n  } : len === 3 ? function () {\n    return handler.call(undefined, args[0], args[1], args[2]);\n  } : function () {\n    return handler.apply(undefined, args);\n  };\n}\n\nfunction create(args) {\n  TASKS[nextId] = wrap.apply(undefined, args);\n  return nextId++;\n}\n\nfunction clear(handleId) {\n  delete TASKS[handleId];\n}\n\nfunction run(handleId) {\n  if (lock) {\n    context.setTimeout(wrap(run, handleId), 0);\n  } else {\n    var task = TASKS[handleId];\n\n    if (task) {\n      lock = true;\n\n      try {\n        task();\n      } finally {\n        clear(handleId);\n        lock = false;\n      }\n    }\n  }\n}\n\nfunction init() {\n  var polifill = function polifill() {\n    var handleId = create(arguments);\n    context.setTimeout(wrap(run, handleId), 0);\n    return handleId;\n  };\n\n  polifill.usePolifill = 'setTimeout';\n\n  return polifill;\n}\n\nfunction canUse() {\n  return 'setTimeout' in context;\n}\n\nvar setTimeoutPolifill = Object.freeze({\n\tinit: init,\n\tcanUse: canUse\n});\n\nfunction init$1() {\n  var polifill = function polifill() {\n    var handleId = create(arguments);\n    context.process.nextTick(wrap(run, handleId));\n    return handleId;\n  };\n\n  polifill.usePolifill = 'nextTick';\n\n  return polifill;\n}\n\n// Don't get fooled by e.g. browserify environments.\n// For Node.js before 0.9\nfunction canUse$1() {\n  return Object.prototype.toString.call(context.process) === '[object process]';\n}\n\nvar nextTickPolifill = Object.freeze({\n\tinit: init$1,\n\tcanUse: canUse$1\n});\n\nfunction init$2() {\n  var messagePrefix = 'setImmediate$' + Math.random() + '$';\n\n  var onGlobalMessage = function onGlobalMessage(event) {\n    if (event.source === context && typeof event.data === 'string' && event.data.indexOf(messagePrefix) === 0) {\n\n      run(Number(event.data.slice(messagePrefix.length)));\n    }\n  };\n\n  if (context.addEventListener) {\n    context.addEventListener('message', onGlobalMessage, false);\n  } else {\n    context.attachEvent('onmessage', onGlobalMessage);\n  }\n\n  var polifill = function polifill() {\n    var handleId = create(arguments);\n    context.postMessage(messagePrefix + handleId, '*');\n    return handleId;\n  };\n\n  polifill.usePolifill = 'postMessage';\n\n  return polifill;\n}\n\n// For non-IE10 modern browsers\nfunction canUse$2() {\n  if (context.importScripts || !context.postMessage) {\n    return false;\n  }\n\n  if (context.navigator && /Chrome/.test(context.navigator.userAgent)) {\n    //skip this method due to heavy minor GC on heavy use.\n    return false;\n  }\n\n  var asynch = true;\n  var oldOnMessage = context.onmessage;\n  context.onmessage = function () {\n    asynch = false;\n  };\n\n  context.postMessage('', '*');\n  context.onmessage = oldOnMessage;\n  return asynch;\n}\n\nvar postMessagePolifill = Object.freeze({\n\tinit: init$2,\n\tcanUse: canUse$2\n});\n\nfunction init$3() {\n  var channel = new context.MessageChannel();\n\n  channel.port1.onmessage = function (event) {\n    run(Number(event.data));\n  };\n\n  var polifill = function polifill() {\n    var handleId = create(arguments);\n    channel.port2.postMessage(handleId);\n    return handleId;\n  };\n\n  polifill.usePolifill = 'messageChannel';\n\n  return polifill;\n}\n\n// For web workers, where supported\nfunction canUse$3() {\n  return Boolean(context.MessageChannel);\n}\n\nvar messageChannelPolifill = Object.freeze({\n\tinit: init$3,\n\tcanUse: canUse$3\n});\n\nfunction init$4() {\n  var html = context.document.documentElement;\n\n  var polifill = function polifill() {\n    var handleId = create(arguments);\n    var script = context.document.createElement('script');\n\n    script.onreadystatechange = function () {\n      run(handleId);\n      script.onreadystatechange = null;\n      html.removeChild(script);\n      script = null;\n    };\n\n    html.appendChild(script);\n    return handleId;\n  };\n\n  polifill.usePolifill = 'readyStateChange';\n\n  return polifill;\n}\n\n// For IE 6–8\nfunction canUse$4() {\n  return context.document && 'onreadystatechange' in context.document.createElement('script');\n}\n\nvar readyStateChangePolifill = Object.freeze({\n\tinit: init$4,\n\tcanUse: canUse$4\n});\n\nvar POLIFILLS = [nextTickPolifill, postMessagePolifill, messageChannelPolifill, readyStateChangePolifill];\n\nvar setImmediate = useNative ? context.setImmediate || context.msSetImmediate || usePolifill(POLIFILLS, setTimeoutPolifill) : init();\n\nvar clearImmediate = useNative ? context.clearImmediate || context.msClearImmediate || clear : clear;\n\nfunction polifill() {\n  if (context.setImmediate !== setImmediate) {\n    context.setImmediate = setImmediate;\n    context.msSetImmediate = setImmediate;\n    context.clearImmediate = clearImmediate;\n    context.msClearImmediate = clearImmediate;\n  }\n}\n\nfunction usePolifill(list, def) {\n  for (var i = 0; i < list.length; i++) {\n    var _polifill = list[i];\n    if (_polifill.canUse()) {\n      return _polifill.init();\n    }\n  }\n\n  return def.init();\n}\n\nvar index = {\n  setImmediate: setImmediate,\n  clearImmediate: clearImmediate,\n  polifill: polifill\n};\n\nreturn index;\n\n})));\n//# sourceMappingURL=setImmediate.js.map\n",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [0, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator];\r\n        return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n});",
    "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n",
    "module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}",
    "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport {Event} from 'microevent.ts';\n\nabstract class AbstractCLI {\n\n    events: AbstractCLI.Events = {\n        outputAvailable: new Event<void>(),\n        quit: new Event<void>(),\n        promptChanged: new Event<void>(),\n        prompt: new Event<void>(),\n        availableCommandsChanged: new Event<void>()\n    };\n\n}\n\nnamespace AbstractCLI {\n    export interface Events {\n        outputAvailable: Event<void>;\n\n        quit: Event<void>;\n\n        promptChanged: Event<void>;\n\n        prompt: Event<void>;\n\n        availableCommandsChanged: Event<void>;\n    }\n}\n\nexport default AbstractCLI;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nclass CommandInterpreter {\n    constructor(\n        commandTable?: CommandInterpreter.CommandTableInterface\n    ) {\n        if (typeof(commandTable) !== 'undefined') {\n            this.registerCommands(commandTable);\n        }\n    }\n\n    public registerCommands(commandTable: CommandInterpreter.CommandTableInterface) {\n        Object.keys(commandTable).forEach(\n            (command: string) => this._commandTable[command] = commandTable[command]\n        );\n    }\n\n    public execute(cmd: string): string {\n        cmd = cmd.replace(/;.*/, '');\n        if (cmd.match(/^\\s*$/)) {\n            return '';\n        }\n\n        const components = cmd.split(/\\s+/).filter((value: string): boolean => !!value),\n            commandName = components.shift();\n\n        return this._locateCommand(commandName).call(this, components, cmd);\n    }\n\n    public getCommands(): Array<string> {\n        return Object.keys(this._commandTable);\n    }\n\n    private _locateCommand(name: string): CommandInterpreter.CommandInterface {\n        if (this._commandTable[name]) {\n            return this._commandTable[name];\n        }\n\n        if (this._aliasTable[name]) {\n            return this._aliasTable[name];\n        }\n\n        const candidates = Object.keys(this._commandTable).filter(\n            (candidate: string) => candidate.indexOf(name) === 0\n        );\n        const nCandidates = candidates.length;\n\n        if (nCandidates > 1) {\n            throw new Error('ambiguous command ' + name + ', candidates are ' +\n                candidates.join(', ').replace(/, $/, ''));\n        }\n\n        if (nCandidates === 0) {\n            throw new Error('invalid command ' + name);\n        }\n\n        return this._aliasTable[name] = this._commandTable[candidates[0]];\n    }\n\n    private _commandTable: CommandInterpreter.CommandTableInterface = {};\n    private _aliasTable: CommandInterpreter.CommandTableInterface = {};\n}\n\nnamespace CommandInterpreter {\n    export interface CommandInterface {\n        (args?: Array<string>, cmdString?: string): string;\n    }\n\n    export interface CommandTableInterface {\n        [command: string]: CommandInterface;\n    }\n}\n\nexport default CommandInterpreter;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport FilesystemProviderInterface from '../fs/FilesystemProviderInterface';\nimport * as pathlib from 'path';\n\nclass Completer {\n\n    constructor(\n        private _availableCommands: Array<string>,\n        private _fsProvider: FilesystemProviderInterface\n    ) {}\n\n    complete(cmd: string): Completer.CompletionResult {\n        const chunks = cmd.split(/\\s+/);\n\n        if (chunks.length > 0 && chunks[0] === '') {\n            chunks.shift();\n        }\n\n        switch (chunks.length) {\n            case 0:\n                return new Completer.CompletionResult(this._availableCommands, cmd);\n\n            case 1:\n                return new Completer.CompletionResult(\n                    this._availableCommands.filter((candidate: string) => candidate.search(chunks[0]) === 0),\n                    chunks[0]\n                );\n\n            default:\n                const path = chunks[chunks.length - 1];\n\n                return new Completer.CompletionResult(this._completePath(path), path);\n        }\n    }\n\n    private _completePath(path: string): Array<string> {\n        let dirname = pathlib.dirname(path),\n            basename = pathlib.basename(path),\n            directory: Array<string>;\n\n        if (!this._fsProvider) {\n            return [];\n        }\n\n        if (path && path[path.length - 1] === pathlib.sep || path[path.length - 1] === '/') {\n            dirname = path;\n            basename = '';\n        }\n\n        try {\n            directory = this._fsProvider.readDirSync(dirname);\n\n            return this._appendSlashesToDirectories(\n                directory\n                    .filter(\n                        (candidate: string) => candidate.search(basename) === 0\n                    )\n                    .map(entry => pathlib.join(dirname, entry))\n            );\n        } catch (e) {}\n\n        return [];\n    }\n\n    private _appendSlashesToDirectories(paths: Array<string>) {\n        return paths.map((path: string): string => {\n            try {\n                return (this._fsProvider.getTypeSync(path) === FilesystemProviderInterface.FileType.DIRECTORY ?\n                    pathlib.join(path, pathlib.sep) : path);\n            } catch (e) {\n                return path;\n            }\n        });\n    }\n}\n\nnamespace Completer {\n\n    export class CompletionResult {\n        constructor(\n            public candidates: Array<string>,\n            public match: string\n        ) {}\n    }\n\n}\n\nexport default Completer;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Debugger from '../machine/Debugger';\nimport CommandInterpreter from './CommandInterpreter';\nimport FileSystemProviderInterface from '../fs/FilesystemProviderInterface';\nimport BoardInterface from '../machine/board/BoardInterface';\n\nimport * as hex from '../tools/hex';\nimport * as util from 'util';\n\nfunction decodeNumber(value: string): number {\n    try {\n        return hex.decode(value);\n    } catch (e) {\n        if (!value.match(/^-?\\d+$/)) {\n            throw new TypeError('number expected, got ' + value);\n        }\n\n        return Number(value);\n    }\n}\n\nclass DebuggerFrontend {\n    constructor(\n            private _debugger: Debugger,\n            private _fileSystemProvider: FileSystemProviderInterface,\n            private _commandInterpreter: CommandInterpreter\n    ) {\n        this._commandInterpreter.registerCommands({\n            'disassemble':        this._disassemble.bind(this),\n            'dump':               this._dump.bind(this),\n            'load':               this._load.bind(this),\n            'hex2dec':            this._hex2dec.bind(this),\n            'dec2hex':            this._dec2hex.bind(this),\n            'state':              this._state.bind(this),\n            'boot':               this._boot.bind(this),\n            'stack':              this._stack.bind(this),\n            'step':             this._step.bind(this),\n            'step-clock':       this._stepClock.bind(this),\n            'reset':            () => this._reset(false),\n            'reset-hard':       () => this._reset(true),\n            'break-on':         this._enableBreakpoints.bind(this),\n            'break-off':        this._disableBreakpoints.bind(this),\n            'break':            this._setBreakpoint.bind(this),\n            'break-clear':      this._clearBreakpoint.bind(this),\n            'break-dump':       this._showBreakpoints.bind(this),\n            'break-clear-all':  this._clearAllBreakpoints.bind(this),\n            'trace-on':         this._enableTrace.bind(this),\n            'trace-off':        this._disableTrace.bind(this),\n            'trace':            this._trace.bind(this)\n        });\n    }\n\n    describeTrap(trap?: BoardInterface.TrapPayload): string {\n        if (typeof(trap) === 'undefined') {\n            trap = this._debugger.getLastTrap();\n        }\n\n        if (!trap) {\n            return '';\n        }\n\n        const message = trap.message ? trap.message : 'unknown';\n\n        switch (trap.reason) {\n            case BoardInterface.TrapReason.cpu:\n                return util.format('CPU TRAP: %s', message);\n\n            case BoardInterface.TrapReason.debug:\n                return util.format('DEBUGGER TRAP: %s', message);\n\n            default:\n                return util.format('UNKNOWN TRAP: %s', message);\n        }\n    }\n\n    private _disassemble(args: Array<string>): string {\n        switch (args.length) {\n            case 0:\n                return this._debugger.disassemble(1);\n\n            case 1:\n                return this._debugger.disassemble(decodeNumber(args[0]));\n\n            default:\n                return this._debugger.disassembleAt(\n                    decodeNumber(args[0]), decodeNumber(args[1]));\n        }\n    }\n\n    private _dump(args: Array<string>): string {\n        if (args.length < 1) {\n            throw new Error('at least one argument expected');\n        }\n\n        return this._debugger.dumpAt(\n            Math.abs(decodeNumber(args[0])),\n            Math.abs(args.length > 1 ? decodeNumber(args[1]) : 1)\n        );\n    }\n\n    private _load(args: Array<string>): string {\n        if (args.length < 2) {\n            throw new Error('at least two arguments. expected');\n        }\n\n        const file = args[0],\n            base = Math.abs(decodeNumber(args[1])) % 0x10000,\n            buffer = this._fileSystemProvider.readBinaryFileSync(file),\n            offset = args.length > 2 ? Math.min(Math.abs(decodeNumber(args[2])), buffer.length - 1) : 0,\n            count = args.length > 3 ? Math.min(Math.abs(decodeNumber(args[3])), buffer.length) : buffer.length;\n\n        this._debugger.loadBlock(buffer, base, offset, offset + count - 1);\n\n        return 'successfully loaded ' + count + ' bytes at ' + hex.encode(base, 4);\n    }\n\n    private _hex2dec(args: Array<string>): string {\n        return args.map((value: string) => hex.decode(value)).join(' ');\n    }\n\n    private _dec2hex(args: Array<string>): string {\n        return args.map((value: string) => String(hex.encode(Number(value)))).join(' ');\n    }\n\n    private _state(): string {\n        return this._debugger.dumpState();\n    }\n\n    private _boot(): string {\n        const board = this._debugger.getBoard();\n        let cycles = 0;\n\n        const clockHandler = (clock: number) => cycles += clock;\n\n        board.cpuClock.addHandler(clockHandler);\n\n        let exception: Error;\n        try {\n            this._debugger.getBoard().boot();\n        } catch (e) {\n            exception = e || new Error('unknown exception during boot');\n        }\n\n        board.cpuClock.removeHandler(clockHandler);\n\n        if (exception) {\n            throw (exception);\n        }\n\n        return util.format('Boot successful in %s cycles', cycles);\n    }\n\n    private _reset(hard: boolean): string {\n        this._debugger.getBoard().reset(hard);\n\n        return 'reset successful';\n    }\n\n    private _step(args: Array<string>): string {\n        const timestamp = Date.now(),\n            instructionCount = args.length > 0 ? decodeNumber(args[0]) : 1,\n            {cycles, cpuCycles} = this._debugger.step(instructionCount),\n            trap = this._debugger.getLastTrap();\n\n        return util.format('Used %s cycles (CPU: %s) in %s milliseconds, now at\\n%s\\n%s\\n',\n            cycles,\n            cpuCycles,\n            Date.now() - timestamp,\n            this._debugger.disassemble(1),\n            this.describeTrap(trap)\n        );\n    }\n\n    private _stack(): string {\n        return this._debugger.dumpStack();\n    }\n\n    private _enableBreakpoints(): string {\n        this._debugger.setBreakpointsEnabled(true);\n        return 'Breakpoints enabled';\n    }\n\n    private _disableBreakpoints(): string {\n        this._debugger.setBreakpointsEnabled(false);\n        return 'Breakpoints disabled';\n    }\n\n    private _setBreakpoint(args: Array<string>): string {\n        if (args.length < 1) {\n            throw new Error('at least one argument expected');\n        }\n\n        const name = args.length > 1 ? args[1] : '-',\n            address = decodeNumber(args[0]);\n\n        this._debugger.setBreakpoint(address, name);\n\n        return 'Breakpoint \"' + name + '\" at ' + hex.encode(address, 4);\n    }\n\n    private _clearBreakpoint(args: Array<string>): string {\n        if (args.length < 1) {\n            throw new Error('argument expected');\n        }\n\n        const address = decodeNumber(args[0]);\n\n        this._debugger.clearBreakpoint(address);\n\n        return 'Cleared breakpoint at ' + hex.encode(address, 4);\n    }\n\n    private _showBreakpoints(): string {\n        return this._debugger.dumpBreakpoints();\n    }\n\n    private _clearAllBreakpoints(): string {\n        this._debugger.clearAllBreakpoints();\n\n        return 'All breakpoints cleared';\n    }\n\n    private _enableTrace(): string {\n        this._debugger.setTraceEnabled(true);\n\n        return 'Tracing enabled';\n    }\n\n    private _disableTrace(): string {\n        this._debugger.setTraceEnabled(false);\n\n        return 'Tracing disabled';\n    }\n\n    private _trace(args: Array<string>): string {\n        return this._debugger.trace(args.length > 0 ? decodeNumber(args[0]) : 10);\n    }\n\n    private _stepClock(args: Array<string>): string {\n        const requestedCycles = args.length > 0 ? decodeNumber(args[0]) : 1,\n            timestamp = Date.now();\n\n        const cycles = this._debugger.stepClock(requestedCycles);\n\n        const time = Date.now() - timestamp,\n            trap = this._debugger.getLastTrap();\n\n        return  `clock stepped ${cycles} cycles in ${time} msec; ` +\n                `now at ${this._debugger.disassemble(1)}\\n${trap ? this.describeTrap(trap) : ''}`;\n    }\n}\n\nexport default DebuggerFrontend;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport * as path from 'path';\n\nimport Board from '../machine/ehbasic/Board';\nimport BoardInterface from '../machine/board/BoardInterface';\n\nimport Debugger from '../machine/Debugger';\nimport DebuggerFrontend from './DebuggerFrontend';\nimport CommandInterpreter from './CommandInterpreter';\nimport CLIInterface from './CLIInterface';\nimport AbstractCLI from './AbstractCLI';\nimport FileSystemProviderInterface from '../fs/FilesystemProviderInterface';\n\nimport SchedulerInterface from '../tools/scheduler/SchedulerInterface';\nimport ImmediateScheduler from '../tools/scheduler/ImmedateScheduler';\nimport PeriodicScheduler from '../tools/scheduler/PeriodicScheduler';\nimport TaskInterface from '../tools/scheduler/TaskInterface';\n\nimport ClockProbe from '../tools/ClockProbe';\n\nconst enum State {\n    debug, run, quit\n}\n\nconst OUTPUT_FLUSH_INTERVAL = 100;\nconst CLOCK_PROBE_INTERVAL = 1000;\n\nclass EhBasicCLI extends AbstractCLI implements CLIInterface {\n    constructor(\n            private _fsProvider: FileSystemProviderInterface\n    ) {\n        super();\n\n        const board = new Board(),\n            dbg = new Debugger(),\n            commandInterpreter = new CommandInterpreter(),\n            debuggerFrontend = new  DebuggerFrontend(dbg, this._fsProvider, commandInterpreter),\n            clockProbe = new ClockProbe(new PeriodicScheduler(CLOCK_PROBE_INTERVAL));\n\n        dbg.attach(board);\n\n        clockProbe.attach(board.cpuClock);\n        clockProbe.frequencyUpdate.addHandler(() => this.events.promptChanged.dispatch(undefined));\n\n        board.trap.addHandler(this._onTrap, this);\n\n        commandInterpreter.registerCommands({\n            'quit': (): string => {\n                if (this._allowQuit) {\n                    this._setState(State.quit);\n                }\n\n                return 'bye';\n            },\n            'run': (): string => {\n                this._setState(State.run);\n                return 'running, press ctl-c to interrupt...';\n            },\n            'input': (args: Array<string>, cmd: string): string => {\n                const data = cmd.replace(/^\\s*input\\s*/, '').replace(/\\\\n/, '\\n'),\n                    length = data.length;\n\n                for (let i = 0; i < length; i++) {\n                    this._inputBuffer.push(data[i] === '\\n' ? 0x0D : data.charCodeAt(i) & 0xFF);\n                }\n\n                return '';\n            },\n            'run-script': (args: Array<string>): string => {\n                if (!args.length) {\n                    throw new Error('filename required');\n                }\n\n                this.runDebuggerScript(args[0]);\n                return 'script executed';\n            },\n            'read-program': (args: Array<string>): string => {\n                if (!args.length) {\n                    throw new Error('filename required');\n                }\n\n                this.readBasicProgram(args[0]);\n                return 'program read into buffer';\n            }\n        });\n\n        board.getSerialIO()\n            .setOutCallback((value: number) => this._serialOutHandler(value))\n            .setInCallback(() => this._serialInHandler());\n\n        this._commands = commandInterpreter.getCommands();\n        this._board = board;\n        this._commandInterpreter = commandInterpreter;\n        this._scheduler = new ImmediateScheduler();\n        this._clockProbe = clockProbe;\n        this._debuggerFrontend = debuggerFrontend;\n    }\n\n    runDebuggerScript(filename: string): void {\n        this._fsProvider.pushd(path.dirname(filename));\n\n        try {\n            this._fsProvider.readTextFileSync(path.basename(filename))\n                .split('\\n')\n                .forEach((line: string): void => {\n                    this.pushInput(line);\n                });\n        } catch (e) {\n            this._fsProvider.popd();\n            throw e;\n        }\n\n        this._fsProvider.popd();\n    }\n\n    readBasicProgram(filename: string): void {\n        this._fsProvider.readTextFileSync(filename)\n            .split('\\n')\n            .forEach((line: string): void => {\n                const length = line.length;\n                for (let i = 0; i < length; i++) {\n                    this._inputBuffer.push(line.charCodeAt(i) & 0xFF);\n                }\n                this._inputBuffer.push(0x0D);\n            });\n    }\n\n    startup(): void {\n        this._setState(State.debug);\n\n        const scheduler = new PeriodicScheduler(OUTPUT_FLUSH_INTERVAL);\n        this._flushOutputTask = scheduler.start((cli: EhBasicCLI) => cli._flushOutput(), this);\n\n        this._prompt();\n    }\n\n    shutdown(): void {\n        if (!this._flushOutputTask) {\n            return;\n        }\n\n        this._flushOutputTask.stop();\n        this._flushOutputTask = undefined;\n    }\n\n    readOutput(): string {\n        const buffer = this._cliOutputBuffer;\n        this._cliOutputBuffer = '';\n        return buffer;\n    }\n\n    availableCommands(): Array<string> {\n        return this._commandInterpreter.getCommands();\n    }\n\n    interrupt(): void {\n        switch (this._state) {\n            case State.run:\n                this._setState(State.debug);\n                this._prompt();\n                break;\n\n            case State.debug:\n                if (this._allowQuit) {\n                    this._setState(State.quit);\n                }\n\n                break;\n        }\n    }\n\n    outputAvailable(): boolean {\n        return !!this._cliOutputBuffer;\n    }\n\n    pushInput(data: string): void {\n        switch (this._state) {\n            case State.run:\n                const size = data.length;\n\n                for (let i = 0; i < size; i++) {\n                    this._inputBuffer.push(data.charCodeAt(i) & 0xFF);\n                }\n                this._inputBuffer.push(0x0D);\n                break;\n\n            case State.debug:\n                try {\n                    this._outputLine(this._commandInterpreter.execute(data));\n                } catch (e) {\n                    this._outputLine('ERROR: ' + e.message);\n                }\n                this._prompt();\n                break;\n        }\n    }\n\n    allowQuit(toggle: boolean): void {\n        this._allowQuit = toggle;\n    }\n\n    getPrompt(): string {\n        let prompt = this._clockProbe.getFrequency() > 0 ?\n            (this._clockProbe.getFrequency() / 1000000).toFixed(2) + ' MHz ' : '';\n\n        switch (this._state) {\n            case State.run:\n                prompt += '[run] # ';\n                break;\n\n            case State.debug:\n                prompt += '[dbg] # ';\n                break;\n        }\n\n        return prompt;\n    }\n\n    getFilesystemProvider(): FileSystemProviderInterface {\n        return this._fsProvider;\n    }\n\n    private _setState(newState: State): void {\n        if (this._state === newState) {\n            return;\n        }\n\n        const timer = this._board.getTimer();\n\n        this._state = newState;\n\n        switch (this._state) {\n            case State.run:\n                if (this._outputBuffer) {\n                    this._outputRaw(this._outputBuffer);\n                    this._outputBuffer = '';\n                }\n\n                timer.start(this._scheduler);\n                this._clockProbe.start();\n\n                break;\n\n            case State.debug:\n                timer.stop();\n                this._clockProbe.stop();\n                break;\n\n            case State.quit:\n                timer.stop();\n                if (this._allowQuit) {\n                    this.events.quit.dispatch(undefined);\n                }\n\n                break;\n        }\n\n        this.events.promptChanged.dispatch(undefined);\n    }\n\n    private _serialOutHandler(value: number): void {\n        switch (this._state) {\n            case State.debug:\n                this._outputBuffer += String.fromCharCode(value);\n                this._outputLine('output event, buffer now\\n' +\n                    this._outputBuffer +\n                    '\\n'\n                );\n                break;\n\n            case State.run:\n                this._outputRaw(String.fromCharCode(value));\n                break;\n        }\n    }\n\n    private _serialInHandler(): number {\n        if (this._inputBuffer.length > 0) {\n            this._promptForInput = true;\n            return this._inputBuffer.shift();\n        }\n\n        if (this._state === State.run && this._promptForInput) {\n            this._promptForInput = false;\n            this._outputLine();\n            this._prompt();\n        }\n\n        return 0;\n    }\n\n    private _outputRaw(output: string) {\n        this._cliOutputBuffer += output;\n    }\n\n    private _outputLine(output: string = '') {\n        this._cliOutputBuffer += (output + '\\n');\n    }\n\n    private _flushOutput(): void {\n        if (this._cliOutputBuffer) {\n            this.events.outputAvailable.dispatch(undefined);\n        }\n    }\n\n    private _prompt(): void {\n        this._flushOutput();\n        this.events.prompt.dispatch(undefined);\n    }\n\n    private _onTrap(trap: BoardInterface.TrapPayload, ctx: EhBasicCLI) {\n        if (ctx._state === State.run) {\n            ctx._setState(State.debug);\n\n            ctx._outputLine('\\n' + ctx._debuggerFrontend.describeTrap(trap));\n            ctx._prompt();\n        }\n    }\n\n    private _state: State;\n    private _allowQuit = true;\n\n    private _commands: Array<string>;\n\n    private _outputBuffer = '';\n    private _inputBuffer: Array<number> = [];\n\n    private _promptForInput = true;\n\n    private _cliOutputBuffer = '';\n    private _flushOutputTask: TaskInterface;\n\n    private _board: BoardInterface;\n    private _commandInterpreter: CommandInterpreter;\n    private _debuggerFrontend: DebuggerFrontend;\n    private _scheduler: SchedulerInterface;\n    private _clockProbe: ClockProbe;\n}\n\nexport default EhBasicCLI;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport CLIInterface from './CLIInterface';\nimport Completer from './Completer';\n\nclass JqtermCLIRunner {\n    constructor(\n        private _cli: CLIInterface,\n        terminalElt: JQuery,\n        options: JqtermCLIRunner.Options = {}\n    ) {\n        this._updateCompleter();\n\n        this._terminal = terminalElt.terminal(\n            (input: string, terminal: JQueryTerminal): void =>\n                this._cli.pushInput(input),\n            {\n                greetings: 'Ready.',\n                completion: this._getCompletionHandler(),\n                exit: false,\n                clear: false\n            }\n        );\n\n        this._cli.events.outputAvailable.addHandler(this._onCLIOutputAvailable, this);\n        this._cli.events.promptChanged.addHandler(this._onCLIPromptChanged, this);\n        this._cli.events.availableCommandsChanged.addHandler(this._updateCompleter.bind(this));\n\n        if (options.interruptButton) {\n            options.interruptButton.mousedown((): void => this._cli.interrupt());\n        }\n\n        if (options.clearButton) {\n            options.clearButton.mousedown((): void => this._terminal.clear());\n        }\n    }\n\n    startup() {\n        this._cli.startup();\n        this._terminal.set_prompt(this._cli.getPrompt());\n    }\n\n    private _updateCompleter() {\n        this._completer = new Completer(\n            this._cli.availableCommands(), this._cli.getFilesystemProvider());\n    }\n\n    private _onCLIOutputAvailable(payload: void, ctx: JqtermCLIRunner): void {\n        ctx._terminal.echo(ctx._cli.readOutput());\n    }\n\n    private _onCLIPromptChanged(payload: void, ctx: JqtermCLIRunner): void {\n        ctx._terminal.set_prompt(ctx._cli.getPrompt());\n    }\n\n    private _getCompletionHandler() {\n        const me = this;\n\n        return function(\n            this: JQueryTerminal,\n            cmd: string,\n            handler: (candidates: Array<string>) => void\n        ) {\n            handler(me._completer.complete(this.get_command()).candidates);\n        };\n    }\n\n    private _terminal: JQueryTerminal;\n    private _completer: Completer;\n}\n\nnamespace JqtermCLIRunner {\n    export interface Options {\n        interruptButton?: JQuery;\n        clearButton?: JQuery;\n    }\n}\n\nexport default JqtermCLIRunner;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport * as pathlib from 'path';\n\nabstract class AbstractFileSystemProvider {\n\n    pushd(path?: string): void {\n        this._directoryStack.unshift(this._cwd);\n\n        if (typeof(path) !== 'undefined') {\n            this.chdir(path);\n        }\n    }\n\n    popd(): string {\n        if (this._directoryStack.length === 0) {\n            return undefined;\n        }\n\n        const targetDir = this._directoryStack.shift();\n\n        this.chdir(targetDir);\n\n        return targetDir;\n    }\n\n    cwd(): string {\n        return this._cwd;\n    }\n\n    chdir(path: string): void {\n        this._cwd = this._resolvePath(path);\n    }\n\n    protected _resolvePath(path: string): string {\n        return pathlib.resolve(this._cwd, path);\n    }\n\n    protected _directoryStack: Array<string> = [];\n    protected _cwd = '/';\n}\n\nexport default AbstractFileSystemProvider;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport * as util from 'util';\nimport AbstractFileSystemProvider from './AbstractFileSystemProvider';\nimport FilesystemProviderInterface from './FilesystemProviderInterface';\n\nclass PrepackagedFilesystemProvider extends AbstractFileSystemProvider\n    implements FilesystemProviderInterface\n{\n    constructor(private _blob: PrepackagedFilesystemProvider.BlobInterface) {\n        super();\n        this._cwd = '/';\n    }\n\n    readBinaryFileSync(name: string): Buffer {\n        name = this._resolvePath(name);\n\n        const content = this._lookup(name);\n\n        if (typeof(content) === 'undefined') {\n            throw new Error(util.format('%s not part of file bundle', name));\n        }\n\n        if (!Buffer.isBuffer(content)) {\n             throw new Error(util.format('%s is a directory, not a file', name));\n        }\n\n        return content;\n    }\n\n    readTextFileSync(name: string): string {\n        const buffer = this.readBinaryFileSync(name);\n\n        return buffer.toString();\n    }\n\n    readDirSync(name: string): Array<string> {\n        name = this._resolvePath(name);\n\n        const content = this._lookup(name);\n\n        if (typeof(content) === 'undefined') {\n            throw new Error(util.format('%s not part of file bundle', name));\n        }\n\n        if (typeof(content) === 'string' || Buffer.isBuffer(content)) {\n            throw new Error(util.format('%s is a file, not a directory', name));\n        }\n\n        return Object.keys(content);\n    }\n\n    getTypeSync(name: string): FilesystemProviderInterface.FileType {\n        name = this._resolvePath(name);\n\n        const content = this._lookup(name);\n\n        if (typeof(content) === 'undefined') {\n             throw new Error(util.format('%s not part of file bundle', name));\n        }\n\n        if (Buffer.isBuffer(content)) {\n            return FilesystemProviderInterface.FileType.FILE;\n        } else {\n            return FilesystemProviderInterface.FileType.DIRECTORY;\n        }\n    }\n\n    private _lookup(path: string): any {\n        const atoms: Array<string> = path.split('/'),\n            natoms = atoms.length;\n\n        let i: number,\n            scope = this._blob;\n\n        const name = atoms[natoms - 1];\n\n        for (i = 0; i < natoms - 1; i++) {\n            if (atoms[i] === '') {\n                continue;\n            } else if (scope.hasOwnProperty(atoms[i])) {\n                scope = scope[atoms[i]];\n            } else {\n                return undefined;\n            }\n        }\n\n        if (name && typeof(scope[name]) === 'string') {\n            scope[name] = new Buffer(scope[name], 'base64');\n        }\n\n        return name ? scope[name] : scope;\n    }\n\n}\n\nnamespace PrepackagedFilesystemProvider {\n\n    export interface BlobInterface {\n        [index: string]: any;\n    }\n\n}\n\nexport default PrepackagedFilesystemProvider;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Instruction from './cpu/Instruction';\nimport Disassembler from './cpu/Disassembler';\nimport CpuInterface from './cpu/CpuInterface';\nimport BoardInterface from './board/BoardInterface';\nimport BusInterface from './bus/BusInterface';\n\nimport * as hex from '../tools/hex';\nimport * as binary from '../tools/binary';\nimport * as util from 'util';\n\nclass Debugger {\n\n    constructor(private _traceSize: number = 2048, private _stepMaxCycles = 10000000) {}\n\n    attach(board: BoardInterface): Debugger {\n        this._board = board;\n        this._bus = this._board.getBus();\n        this._cpu = this._board.getCpu();\n        this._disassembler = new Disassembler(this._bus);\n\n        this._board.trap.addHandler(this._trapHandler, this);\n\n        this._traceLength = 0;\n        this._traceIndex = 0;\n\n        return this;\n    }\n\n    detach(): Debugger {\n        if (!this._board) {\n            return this;\n        }\n\n        this._board.cpuClock.removeHandler(this._cpuClockHandler);\n        this._board.trap.removeHandler(this._trapHandler);\n\n        return this;\n    }\n\n    clearAllBreakpoints(): Debugger {\n        for (let i = 0; i < 0x10000; i++) {\n            this._breakpoints[i] = 0;\n        }\n\n        return this;\n    }\n\n    setBreakpoint(address: number, description: string = '-'): Debugger {\n        address %= 0x10000;\n\n        this._breakpoints[address] = 1;\n        this._breakpointDescriptions[address] = description;\n\n        return this;\n    }\n\n    clearBreakpoint(address: number): Debugger {\n        this._breakpoints[address % 0x10000] = 0;\n\n        return this;\n    }\n\n    dumpBreakpoints(): string {\n        let result = '';\n\n        for (let address = 0; address < 0x10000; address++) {\n            if (this._breakpoints[address]) {\n                result += (\n                    hex.encode(address, 4) + ': ' +\n                    this._breakpointDescriptions[address] + '\\n');\n            }\n        }\n\n        return result.replace(/\\n$/, '');\n    }\n\n    loadBlock(\n        block: Debugger.MemoryBlockInterface,\n        at: number,\n        from: number = 0,\n        to: number = block.length - 1\n    ) {\n        for (let i = 0; i <= to - from; i++) {\n            this._poke(at + i, block[i]);\n        }\n    }\n\n    disassembleAt(start: number, length: number): string {\n        let i = 0,\n            result = '',\n            instruction: Instruction,\n            address: number;\n\n        while (i < length) {\n            address = (start + i) % 0x10000;\n\n            instruction = Instruction.opcodes[this._peek(address)];\n            result += (\n                (this._breakpoints[address] ? '(B) ' : '    ') +\n                hex.encode(address, 4) + ':   ' +\n                this._disassembler.disassembleAt(address) + '\\n'\n            );\n\n            i += instruction.getSize();\n        }\n\n        return result.replace(/\\n$/, '');\n    }\n\n    disassemble(length: number): string {\n        return this.disassembleAt(this._cpu.state.p, length);\n    }\n\n    trace(length: number = this._traceSize): string {\n        let result = '';\n        length = Math.min(length, this._traceLength);\n\n        for (let i = 0; i < length; i++) {\n            result += (\n                this.disassembleAt(\n                    this._trace[(this._traceSize + this._traceIndex - length + i) % this._traceSize],\n                    1\n                ) + '\\n');\n        }\n\n        return result + this.disassemble(1);\n    }\n\n    dumpAt(start: number, length: number): string {\n        let result = '',\n            address: number;\n\n        for (let i = 0; i < length; i++) {\n            address = (start + i) % 0x10000;\n\n            result += (hex.encode(address, 4) + ':   ' +\n                hex.encode(this._peek(address), 2) + '\\n');\n        }\n\n        return result.replace(/\\n$/, '');\n    }\n\n    dumpState(): string {\n        const state = this._cpu.state;\n\n        switch (this._cpu.executionState) {\n            case CpuInterface.ExecutionState.boot:\n        }\n\n        let result = '' +\n                'A = ' + hex.encode(state.a, 2) + '   ' +\n                'X = ' + hex.encode(state.x, 2) + '   ' +\n                'Y = ' + hex.encode(state.y, 2) + '   ' +\n                'S = ' + hex.encode(state.s, 2) + '   ' +\n                'P = ' + hex.encode(state.p, 4) + '\\n' +\n                'flags = ' + binary.encode(state.flags, 8) + '\\n' +\n                'state: ' + this._humanReadableExecutionState();\n\n        const boardState = this._board.getBoardStateDebug();\n\n        if (boardState) {\n            result += (\n                '\\n' +\n                '\\n' +\n                boardState\n            );\n        }\n\n        return result;\n    }\n\n    dumpStack(): string {\n        return this.dumpAt(0x0100 + this._cpu.state.s, 0x100 - this._cpu.state.s);\n    }\n\n    step(instructions: number): {cycles: number, cpuCycles: number} {\n        let instruction = 0,\n            cycles = 0,\n            lastExecutionState = this._cpu.executionState,\n            cpuCycles = 0;\n        const timer = this._board.getTimer();\n\n        const cpuClockHandler = (c: number) => cpuCycles += c;\n        this._board.cpuClock.addHandler(cpuClockHandler);\n\n        this._lastTrap = undefined;\n\n        this._board.resume();\n\n        while (instruction < instructions && !this._lastTrap && cycles < this._stepMaxCycles) {\n            timer.tick(1);\n            cycles++;\n\n            if (lastExecutionState !== this._cpu.executionState) {\n                lastExecutionState = this._cpu.executionState;\n\n                if (lastExecutionState === CpuInterface.ExecutionState.fetch) {\n                    instruction++;\n                }\n            }\n        }\n\n        this._board.cpuClock.removeHandler(cpuClockHandler);\n        this._board.suspend();\n\n        return {cycles, cpuCycles};\n    }\n\n    stepClock(cycles: number): number {\n        this._lastTrap = undefined;\n\n        this._board.resume();\n\n        const usedCycles = this._board.getTimer().tick(cycles);\n\n        this._board.suspend();\n\n        return usedCycles;\n    }\n\n    setBreakpointsEnabled(breakpointsEnabled: boolean): Debugger {\n        this._breakpointsEnabled = breakpointsEnabled;\n\n        this._attachToCpuIfNecessary();\n\n        return this;\n    }\n\n    setTraceEnabled(traceEnabled: boolean): Debugger {\n        this._traceEnabled = traceEnabled;\n\n        this._attachToCpuIfNecessary();\n\n        return this;\n    }\n\n    getBoard(): BoardInterface {\n        return this._board;\n    }\n\n    getLastTrap(): BoardInterface.TrapPayload {\n        return this._lastTrap;\n    }\n\n    private _humanReadableExecutionState() {\n        if (this._cpu.isHalt()) {\n            return 'halted';\n        }\n\n        switch (this._cpu.executionState) {\n            case CpuInterface.ExecutionState.boot:\n                return 'boot';\n\n            case CpuInterface.ExecutionState.fetch:\n                return 'fetch';\n\n            case CpuInterface.ExecutionState.execute:\n                return 'execute';\n        }\n    }\n\n    private _attachToCpuIfNecessary(): void {\n        if (this._traceEnabled || this._breakpointsEnabled) {\n            this._lastInstructionPointer = this._cpu.getLastInstructionPointer() || 0;\n            this._board.cpuClock.addHandler(this._cpuClockHandler, this);\n            this._board.setClockMode(BoardInterface.ClockMode.instruction);\n        } else {\n            this._board.cpuClock.removeHandler(this._cpuClockHandler, this);\n            this._board.setClockMode(BoardInterface.ClockMode.lazy);\n        }\n    }\n\n    private _cpuClockHandler(clocks: number, ctx: Debugger): void {\n        const lastInstructionPointer = ctx._cpu.getLastInstructionPointer();\n\n        if (ctx._cpu.executionState !== CpuInterface.ExecutionState.fetch ||\n            lastInstructionPointer === ctx._lastInstructionPointer\n        ) {\n            return;\n        }\n\n        ctx._lastInstructionPointer = lastInstructionPointer;\n\n        if (ctx._traceEnabled) {\n            ctx._trace[ctx._traceIndex] = lastInstructionPointer;\n            ctx._traceIndex = (ctx._traceIndex + 1) % ctx._traceSize;\n            if (ctx._traceLength < ctx._traceSize) {\n                ctx._traceLength++;\n            }\n        }\n\n        if (ctx._breakpointsEnabled && ctx._breakpoints[ctx._cpu.state.p]) {\n            ctx._board.triggerTrap(BoardInterface.TrapReason.debug,\n                util.format('breakpoint \"%s\" at %s',\n                    ctx._breakpointDescriptions[ctx._cpu.state.p] || '',\n                    hex.encode(ctx._cpu.state.p)\n                )\n            );\n        }\n    }\n\n    private _trapHandler(trap: BoardInterface.TrapPayload, dbg: Debugger): void {\n        dbg._lastTrap = trap;\n    }\n\n    private _peek(address: number): number {\n        return this._bus.peek(address % 0x10000);\n    }\n\n    private _poke(address: number, value: number) {\n        this._bus.poke(address % 0x10000, value & 0xFF);\n    }\n\n    private _disassembler: Disassembler;\n    private _cpu: CpuInterface;\n    private _bus: BusInterface;\n    private _board: BoardInterface;\n\n    private _breakpoints = new Uint8Array(0x10000);\n    private _breakpointDescriptions: Array<string> = new Array(0x10000);\n    private _breakpointsEnabled = false;\n\n    private _traceEnabled = false;\n    private _trace = new Uint16Array(this._traceSize);\n    private _traceLength = 0;\n    private _traceIndex = 0;\n    private _lastInstructionPointer: number;\n\n    private _lastTrap: BoardInterface.TrapPayload;\n}\n\nnamespace Debugger {\n    export interface MemoryBlockInterface {\n        [index: number]: number;\n        length: number;\n    }\n}\n\nexport default Debugger;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport {EventInterface} from 'microevent.ts';\n\nimport BusInterface from '../bus/BusInterface';\nimport CpuInterface from '../cpu/CpuInterface';\nimport TimerInterface from './TimerInterface';\n\ninterface BoardInterface {\n\n    getBus(): BusInterface;\n\n    getCpu(): CpuInterface;\n\n    getTimer(): TimerInterface;\n\n    reset(hard: boolean): BoardInterface;\n\n    boot(): BoardInterface;\n\n    suspend(): void;\n\n    resume(): void;\n\n    getClockMode(): BoardInterface.ClockMode;\n\n    setClockMode(clockMode: BoardInterface.ClockMode): BoardInterface;\n\n    triggerTrap(reason: BoardInterface.TrapReason, message?: string): BoardInterface;\n\n    getBoardStateDebug(): string;\n\n    trap: EventInterface<BoardInterface.TrapPayload>;\n\n    cpuClock: EventInterface<number>;\n\n    clock: EventInterface<number>;\n\n}\n\nnamespace BoardInterface {\n\n    export const enum TrapReason {cpu, bus, debug, board}\n\n    export const enum ClockMode {instruction, lazy}\n\n    export class TrapPayload {\n        constructor(\n            public reason: TrapReason,\n            public board: BoardInterface,\n            public message?: string\n        ) {}\n    }\n}\n\nexport default BoardInterface;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Instruction from './Instruction';\nimport BusInterface from '../bus/BusInterface';\nimport CpuInterface from './CpuInterface';\n\nimport RngInterface from '../../tools/rng/GeneratorInterface';\n\nconst enum InterruptCheck {\n    endOfInstruction,\n    beforeOp\n}\n\nfunction restoreFlagsFromStack(state: CpuInterface.State, bus: BusInterface): void {\n    state.s = (state.s + 0x01) & 0xFF;\n    state.flags = (bus.read(0x0100 + state.s) | CpuInterface.Flags.e) & (~CpuInterface.Flags.b);\n}\n\nfunction setFlagsNZ(state: CpuInterface.State, operand: number): void {\n    state.flags = (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z)) |\n        (operand & 0x80) |\n        (operand ? 0 : CpuInterface.Flags.z);\n}\n\nfunction dispatchInterrupt(state: CpuInterface.State, bus: BusInterface, vector: number): void {\n    const nextOpAddr = state.p;\n\n    if (state.nmi) {\n        vector = 0xFFFA;\n    }\n\n    state.nmi = state.irq = false;\n\n    bus.write(state.s + 0x0100, (nextOpAddr >>> 8) & 0xFF);\n    state.s = (state.s + 0xFF) & 0xFF;\n    bus.write(state.s + 0x0100, nextOpAddr & 0xFF);\n    state.s = (state.s + 0xFF) & 0xFF;\n\n    bus.write(state.s + 0x0100, state.flags & (~CpuInterface.Flags.b));\n    state.s = (state.s + 0xFF) & 0xFF;\n\n    state.flags |= CpuInterface.Flags.i;\n\n    state.p = (bus.readWord(vector));\n}\n\nfunction opIrq(state: CpuInterface.State, bus: BusInterface) {\n    dispatchInterrupt(state, bus, 0xFFFE);\n}\n\nfunction opNmi(state: CpuInterface.State, bus: BusInterface) {\n    dispatchInterrupt(state, bus, 0xFFFA);\n}\n\nfunction opBoot(state: CpuInterface.State, bus: BusInterface): void {\n    state.p = bus.readWord(0xFFFC);\n}\n\nfunction opAdc(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    if (state.flags & CpuInterface.Flags.d) {\n        const d0 = (operand & 0x0F) + (state.a & 0x0F) + (state.flags & CpuInterface.Flags.c),\n            d1 = (operand >>> 4) + (state.a >>> 4) + (d0 > 9 ? 1 : 0);\n\n        state.a = (d0 % 10) | ((d1 % 10) << 4);\n\n        state.flags = (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n            (state.a & 0x80) |  // negative\n            (state.a ? 0 : CpuInterface.Flags.z) |   // zero\n            (d1 > 9 ? CpuInterface.Flags.c : 0);     // carry\n    } else {\n        const sum = state.a + operand + (state.flags & CpuInterface.Flags.c),\n            result = sum & 0xFF;\n\n        state.flags =\n            (state.flags &\n                ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c | CpuInterface.Flags.v)) |\n            (result & 0x80) |  // negative\n            (result ? 0 : CpuInterface.Flags.z) |   // zero\n            (sum >>> 8) |         // carry\n            (((~(operand ^ state.a) & (result ^ operand)) & 0x80) >>> 1); // overflow\n\n        state.a = result;\n    }\n}\n\nfunction opAnd(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a &= operand;\n    setFlagsNZ(state, state.a);\n}\n\nfunction opAslAcc(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = (state.a << 1) & 0xFF;\n\n    state.flags = (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nfunction opAslMem(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = (old << 1) & 0xFF;\n    bus.write(operand, value);\n\n    state.flags = (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (value & 0x80) |\n        (value ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nfunction opBit(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.v | CpuInterface.Flags.z)) |\n        (operand & (CpuInterface.Flags.n | CpuInterface.Flags.v)) |\n        ((operand & state.a) ? 0 : CpuInterface.Flags.z);\n}\n\nfunction opBrk(state: CpuInterface.State, bus: BusInterface): void {\n    const nextOpAddr = (state.p + 1) & 0xFFFF;\n    let vector = 0xFFFE;\n\n    if (state.nmi) {\n        vector = 0xFFFA;\n        state.nmi = false;\n    }\n\n    state.nmi = state.irq = false;\n\n    bus.write(state.s + 0x0100, (nextOpAddr >>> 8) & 0xFF);\n    state.s = (state.s + 0xFF) & 0xFF;\n    bus.write(state.s + 0x0100, nextOpAddr & 0xFF);\n    state.s = (state.s + 0xFF) & 0xFF;\n\n    bus.write(state.s + 0x0100, state.flags | CpuInterface.Flags.b);\n    state.s = (state.s + 0xFF) & 0xFF;\n\n    state.flags |= CpuInterface.Flags.i;\n\n    state.p = (bus.readWord(vector));\n}\n\nfunction opClc(state: CpuInterface.State): void {\n    state.flags &= ~CpuInterface.Flags.c;\n}\n\nfunction opCld(state: CpuInterface.State): void {\n    state.flags &= ~CpuInterface.Flags.d;\n}\n\nfunction opCli(state: CpuInterface.State): void {\n    state.flags &= ~CpuInterface.Flags.i;\n}\n\nfunction opClv(state: CpuInterface.State): void {\n    state.flags &= ~CpuInterface.Flags.v;\n}\n\nfunction opCmp(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const diff = state.a + (~operand & 0xFF) + 1;\n\n    state.flags = (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        ((diff & 0xFF) ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n}\n\nfunction opCpx(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n     const diff = state.x + (~operand & 0xFF) + 1;\n\n     state.flags = (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        ((diff & 0xFF) ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n}\n\nfunction opCpy(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n     const diff = state.y + (~operand & 0xFF) + 1;\n\n     state.flags = (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        ((diff & 0xFF) ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n}\n\nfunction opDec(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = (bus.read(operand) + 0xFF) & 0xFF;\n    bus.write(operand, value);\n    setFlagsNZ(state, value);\n}\n\nfunction opDex(state: CpuInterface.State): void {\n    state.x = (state.x + 0xFF) & 0xFF;\n    setFlagsNZ(state, state.x);\n}\n\nfunction opEor(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a = state.a ^ operand;\n    setFlagsNZ(state, state.a);\n}\n\nfunction opDey(state: CpuInterface.State): void {\n    state.y = (state.y + 0xFF) & 0xFF;\n    setFlagsNZ(state, state.y);\n}\n\nfunction opInc(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = (bus.read(operand) + 1) & 0xFF;\n    bus.write(operand, value);\n    setFlagsNZ(state, value);\n}\n\nfunction opInx(state: CpuInterface.State): void {\n    state.x = (state.x + 0x01) & 0xFF;\n    setFlagsNZ(state, state.x);\n}\n\nfunction opIny(state: CpuInterface.State): void {\n    state.y = (state.y + 0x01) & 0xFF;\n    setFlagsNZ(state, state.y);\n}\n\nfunction opJmp(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.p = operand;\n}\n\nfunction opJsr(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const returnPtr = (state.p + 1) & 0xFFFF,\n        addrLo = bus.read(state.p);\n\n    bus.read(0x0100 + state.s);\n    bus.write(0x0100 + state.s, returnPtr >>> 8);\n    state.s = (state.s + 0xFF) & 0xFF;\n    bus.write(0x0100 + state.s, returnPtr & 0xFF);\n    state.s = (state.s + 0xFF) & 0xFF;\n\n    state.p = addrLo | (bus.read((state.p + 1) & 0xFFFF) << 8);\n}\n\nfunction opLda(\n    state: CpuInterface.State,\n    bus: BusInterface,\n    operand: number,\n    addressingMode: Instruction.AddressingMode\n): void {\n    state.a = addressingMode === Instruction.AddressingMode.immediate ? operand : bus.read(operand);\n    setFlagsNZ(state, state.a);\n}\n\nfunction opLdx(\n    state: CpuInterface.State,\n    bus: BusInterface,\n    operand: number,\n    addressingMode: Instruction.AddressingMode\n): void {\n    state.x = addressingMode === Instruction.AddressingMode.immediate ? operand : bus.read(operand);\n    setFlagsNZ(state, state.x);\n}\n\nfunction opLdy(\n    state: CpuInterface.State,\n    bus: BusInterface,\n    operand: number,\n    addressingMode: Instruction.AddressingMode\n): void {\n    state.y = addressingMode === Instruction.AddressingMode.immediate ? operand : bus.read(operand);\n    setFlagsNZ(state, state.y);\n}\n\nfunction opLsrAcc(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = state.a >>> 1;\n\n    state.flags = (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nfunction opLsrMem(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = old >>> 1;\n    bus.write(operand, value);\n\n    state.flags = (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (value & 0x80) |\n        (value ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nfunction opNop(): void {}\n\nfunction opOra(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a |= operand;\n    setFlagsNZ(state, state.a);\n}\n\nfunction opPhp(state: CpuInterface.State, bus: BusInterface): void {\n    bus.write(0x0100 + state.s, state.flags | CpuInterface.Flags.b);\n    state.s = (state.s + 0xFF) & 0xFF;\n}\n\nfunction opPlp(state: CpuInterface.State, bus: BusInterface): void {\n    restoreFlagsFromStack(state, bus);\n}\n\nfunction opPha(state: CpuInterface.State, bus: BusInterface): void {\n    bus.write(0x0100 + state.s, state.a);\n    state.s = (state.s + 0xFF) & 0xFF;\n}\n\nfunction opPla(state: CpuInterface.State, bus: BusInterface): void {\n    state.s = (state.s + 0x01) & 0xFF;\n    state.a = bus.read(0x0100 + state.s);\n    setFlagsNZ(state, state.a);\n}\n\nfunction opRolAcc(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = ((state.a << 1) & 0xFF) | (state.flags & CpuInterface.Flags.c);\n\n    state.flags = (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nfunction opRolMem(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = ((old << 1) & 0xFF) | (state.flags & CpuInterface.Flags.c);\n    bus.write(operand, value);\n\n    state.flags = (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (value & 0x80) |\n        (value ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nfunction opRorAcc(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = (state.a >>> 1) | ((state.flags & CpuInterface.Flags.c) << 7);\n\n    state.flags = (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nfunction opRorMem(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = (old >>> 1) | ((state.flags & CpuInterface.Flags.c) << 7);\n    bus.write(operand, value);\n\n    state.flags = (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (value & 0x80) |\n        (value ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nfunction opRti(state: CpuInterface.State, bus: BusInterface): void {\n    let returnPtr: number;\n\n    restoreFlagsFromStack(state, bus);\n\n    state.s = (state.s + 1) & 0xFF;\n    returnPtr = bus.read(0x0100 + state.s);\n    state.s = (state.s + 1) & 0xFF;\n    returnPtr |= (bus.read(0x0100 + state.s) << 8);\n\n    state.p = returnPtr;\n}\n\nfunction opRts(state: CpuInterface.State, bus: BusInterface): void {\n    let returnPtr: number;\n\n    bus.read(0x0100 + state.s);\n    state.s = (state.s + 1) & 0xFF;\n    returnPtr = bus.read(0x0100 + state.s);\n    state.s = (state.s + 1) & 0xFF;\n    returnPtr += (bus.read(0x0100 + state.s) << 8);\n\n    state.p = (returnPtr + 1) & 0xFFFF;\n}\n\nfunction opSbc(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    if (state.flags & CpuInterface.Flags.d) {\n        const d0 = ((state.a & 0x0F) - (operand & 0x0F) - (~state.flags & CpuInterface.Flags.c)),\n            d1 = ((state.a >>> 4) - (operand >>> 4) - (d0 < 0 ? 1 : 0));\n\n        state.a = (d0 < 0 ? 10 + d0 : d0) | ((d1 < 0 ? 10 + d1 : d1) << 4);\n\n        state.flags = (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n            (state.a & 0x80) |  // negative\n            (state.a ? 0 : CpuInterface.Flags.z) |   // zero\n            (d1 < 0 ? 0 : CpuInterface.Flags.c);     // carry / borrow\n    } else {\n        operand = (~operand & 0xFF);\n\n        const sum = state.a + operand + (state.flags & CpuInterface.Flags.c),\n            result = sum & 0xFF;\n\n        state.flags = (state.flags &\n                ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c | CpuInterface.Flags.v)) |\n            (result & 0x80) |  // negative\n            (result ? 0 : CpuInterface.Flags.z) |   // zero\n            (sum >>> 8) |         // carry / borrow\n            (((~(operand ^ state.a) & (result ^ operand)) & 0x80) >>> 1); // overflow\n\n        state.a = result;\n    }\n}\n\nfunction opSec(state: CpuInterface.State): void {\n    state.flags |= CpuInterface.Flags.c;\n}\n\nfunction opSed(state: CpuInterface.State): void {\n    state.flags |= CpuInterface.Flags.d;\n}\n\nfunction opSei(state: CpuInterface.State): void {\n    state.flags |= CpuInterface.Flags.i;\n}\n\nfunction opSta(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    bus.write(operand, state.a);\n}\n\nfunction opStx(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    bus.write(operand, state.x);\n}\n\nfunction opSty(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    bus.write(operand, state.y);\n}\n\nfunction opTax(state: CpuInterface.State): void {\n    state.x = state.a;\n    setFlagsNZ(state, state.a);\n}\n\nfunction opTay(state: CpuInterface.State): void {\n    state.y = state.a;\n    setFlagsNZ(state, state.a);\n}\n\nfunction opTsx(state: CpuInterface.State): void {\n    state.x = state.s;\n    setFlagsNZ(state, state.x);\n}\n\nfunction opTxa(state: CpuInterface.State): void {\n    state.a = state.x;\n    setFlagsNZ(state, state.a);\n}\n\nfunction opTxs(state: CpuInterface.State): void {\n    state.s = state.x;\n}\n\nfunction opTya(state: CpuInterface.State): void {\n    state.a = state.y;\n    setFlagsNZ(state, state.a);\n}\n\nfunction opAlr(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const i = state.a & operand;\n    state.a = i >>> 1;\n\n    state.flags = (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (i & CpuInterface.Flags.c);\n}\n\nfunction opAxs(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = (state.a & state.x) + (~operand & 0xFF) + 1;\n\n    state.x = value & 0xFF;\n\n    state.flags = (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.x & 0x80) |\n        ((state.x & 0xFF) ? 0 : CpuInterface.Flags.z) |\n        (value >>> 8);\n}\n\nfunction opDcp(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = (bus.read(operand) + 0xFF) & 0xFF;\n    bus.write(operand, value);\n\n    const diff = state.a + (~value & 0xFF) + 1;\n\n    state.flags = (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        ((diff & 0xFF) ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n}\n\nfunction opLax(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a = operand;\n    state.x = operand;\n    setFlagsNZ(state, operand);\n}\n\nfunction opArr(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a = ((state.a & operand) >>> 1) | ((state.flags & CpuInterface.Flags.c) ? 0x80 : 0);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.c | CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.v)) |\n        ((state.a & 0x40) >>> 6) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (state.a & 0x80) |\n        ((state.a & 0x40) ^ ((state.a & 0x20) << 1));\n}\n\nfunction opSlo(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    let value = bus.read(operand);\n    state.flags = state.flags & ~CpuInterface.Flags.c | value >>> 7;\n    value = value << 1;\n\n    bus.write(operand, value);\n\n    state.a = state.a | value;\n    setFlagsNZ(state, state.a);\n}\n\nfunction opAax(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = state.x & state.a;\n    bus.write(operand, value);\n    setFlagsNZ(state, value);\n}\n\nfunction opLar(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.s = state.a = state.x = state.s & operand;\n    setFlagsNZ(state, state.a);\n}\n\nfunction opIsc(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = bus.read(operand) + 1;\n    bus.write(operand, value);\n\n    opSbc(state, bus, value);\n}\n\nfunction opAac(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a &= operand;\n    setFlagsNZ(state, state.a);\n    state.flags = (state.flags & (~CpuInterface.Flags.c)) | ((state.a & 0x80) >>> 7);\n}\n\nclass Cpu {\n    constructor(\n        private _bus: BusInterface,\n        private _rng?: RngInterface\n    ) {\n        this.reset();\n    }\n\n    setInterrupt(irq: boolean): Cpu {\n        this._interruptPending = irq;\n        return this;\n    }\n\n    isInterrupt(): boolean {\n        return this._interruptPending;\n    }\n\n    nmi(): Cpu {\n        this._nmiPending = true;\n        return this;\n    }\n\n    halt(): Cpu {\n        this._halted = true;\n        return this;\n    }\n\n    resume(): Cpu {\n        this._halted = false;\n        return this;\n    }\n\n    isHalt(): boolean {\n        return this._halted;\n    }\n\n    setInvalidInstructionCallback(callback: CpuInterface.InvalidInstructionCallbackInterface): Cpu {\n        this._invalidInstructionCallback = callback;\n        return this;\n    }\n\n    getInvalidInstructionCallback(): CpuInterface.InvalidInstructionCallbackInterface {\n        return this._invalidInstructionCallback;\n    }\n\n    getLastInstructionPointer(): number {\n        return this._lastInstructionPointer;\n    }\n\n    reset(): Cpu {\n        this.state.a = this._rng ? this._rng.int(0xFF) : 0;\n        this.state.x = this._rng ? this._rng.int(0xFF) : 0;\n        this.state.y = this._rng ? this._rng.int(0xFF) : 0;\n        this.state.s = 0xFD;\n        this.state.p = this._rng ? this._rng.int(0xFFFF) : 0;\n        this.state.flags = (this._rng ? this._rng.int(0xFF) : 0) |\n            CpuInterface.Flags.i | CpuInterface.Flags.e | CpuInterface.Flags.b;\n        this.state.irq = false;\n        this.state.nmi = false;\n\n        this.executionState = CpuInterface.ExecutionState.boot;\n        this._opCycles = 7;\n        this._interruptPending = false;\n        this._nmiPending = false;\n\n        this._instructionCallback = opBoot;\n\n        return this;\n    }\n\n    cycle(): Cpu {\n        if (this._halted) {\n            return this;\n        }\n\n        switch (this.executionState) {\n            case CpuInterface.ExecutionState.boot:\n            case CpuInterface.ExecutionState.execute:\n                if (--this._opCycles === 0) {\n                    if (this._interuptCheck === InterruptCheck.beforeOp) {\n                        this._checkForInterrupts();\n                    }\n\n                    this._instructionCallback(this.state, this._bus, this._operand, this._currentAddressingMode);\n                    this.executionState = CpuInterface.ExecutionState.fetch;\n\n                    if (this._interuptCheck === InterruptCheck.endOfInstruction) {\n                        this._checkForInterrupts();\n                    }\n                }\n\n                break;\n\n            case CpuInterface.ExecutionState.fetch:\n                if (this.state.nmi) {\n                    this._instructionCallback = opNmi;\n                    this._opCycles = 6;\n                    this.state.nmi = this.state.irq = false;\n                    this._interuptCheck = InterruptCheck.beforeOp;\n                    this.executionState = CpuInterface.ExecutionState.execute;\n\n                    return this;\n                }\n\n                if (this.state.irq) {\n                    this._instructionCallback = opIrq;\n                    this._opCycles = 6;\n                    this.state.nmi = this.state.irq = false;\n                    this._interuptCheck = InterruptCheck.beforeOp;\n                    this.executionState = CpuInterface.ExecutionState.execute;\n\n                    return this;\n                }\n\n                this._fetch();\n                break;\n        }\n\n        return this;\n    }\n\n    private _fetch() {\n        const instruction = Instruction.opcodes[this._bus.read(this.state.p)];\n\n        let addressingMode = instruction.addressingMode,\n            dereference = false,\n            slowIndexedAccess = false;\n\n        this._lastInstructionPointer = this.state.p;\n        this._currentAddressingMode = addressingMode;\n        this._interuptCheck = InterruptCheck.endOfInstruction;\n\n        switch (instruction.operation) {\n            case Instruction.Operation.adc:\n                this._opCycles = 0;\n                this._instructionCallback = opAdc;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.and:\n                this._opCycles = 0;\n                this._instructionCallback = opAnd;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.asl:\n                if (addressingMode === Instruction.AddressingMode.implied) {\n                    this._opCycles = 1;\n                    this._instructionCallback = opAslAcc;\n                } else {\n                    this._opCycles = 3;\n                    this._instructionCallback = opAslMem;\n                    slowIndexedAccess = true;\n                }\n                break;\n\n            case Instruction.Operation.bcc:\n                if (this.state.flags & CpuInterface.Flags.c) {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = opNop;\n                    this.state.p = (this.state.p + 1) & 0xFFFF;\n                    this._opCycles = 1;\n                } else {\n                    this._instructionCallback = opJmp;\n                    this._opCycles = 0;\n                }\n                break;\n\n            case Instruction.Operation.bcs:\n                if (this.state.flags & CpuInterface.Flags.c) {\n                    this._instructionCallback = opJmp;\n                    this._opCycles = 0;\n                } else {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = opNop;\n                    this.state.p = (this.state.p + 1) & 0xFFFF;\n                    this._opCycles = 1;\n                }\n                break;\n\n            case Instruction.Operation.beq:\n                if (this.state.flags & CpuInterface.Flags.z) {\n                    this._instructionCallback = opJmp;\n                    this._opCycles = 0;\n                } else {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = opNop;\n                    this.state.p = (this.state.p + 1) & 0xFFFF;\n                    this._opCycles = 1;\n                }\n                break;\n\n            case Instruction.Operation.bit:\n                this._opCycles = 0;\n                this._instructionCallback = opBit;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.bmi:\n                if (this.state.flags & CpuInterface.Flags.n) {\n                    this._instructionCallback = opJmp;\n                    this._opCycles = 0;\n                } else {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = opNop;\n                    this.state.p = (this.state.p + 1) & 0xFFFF;\n                    this._opCycles = 1;\n                }\n                break;\n\n            case Instruction.Operation.bne:\n                if (this.state.flags & CpuInterface.Flags.z) {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = opNop;\n                    this.state.p = (this.state.p + 1) & 0xFFFF;\n                    this._opCycles = 1;\n                } else {\n                    this._instructionCallback = opJmp;\n                    this._opCycles = 0;\n                }\n                break;\n\n            case Instruction.Operation.bpl:\n                if (this.state.flags & CpuInterface.Flags.n) {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = opNop;\n                    this.state.p = (this.state.p + 1) & 0xFFFF;\n                    this._opCycles = 1;\n                } else {\n                    this._instructionCallback = opJmp;\n                    this._opCycles = 0;\n                }\n                break;\n\n            case Instruction.Operation.bvc:\n                if (this.state.flags & CpuInterface.Flags.v) {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = opNop;\n                    this.state.p = (this.state.p + 1) & 0xFFFF;\n                    this._opCycles = 1;\n                } else {\n                    this._instructionCallback = opJmp;\n                    this._opCycles = 0;\n                }\n                break;\n\n            case Instruction.Operation.bvs:\n                if (this.state.flags & CpuInterface.Flags.v) {\n                    this._instructionCallback = opJmp;\n                    this._opCycles = 0;\n                } else {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = opNop;\n                    this.state.p = (this.state.p + 1) & 0xFFFF;\n                    this._opCycles = 1;\n                }\n                break;\n\n            case Instruction.Operation.brk:\n                this._opCycles = 6;\n                this._instructionCallback = opBrk;\n                this._interuptCheck = InterruptCheck.beforeOp;\n                break;\n\n            case Instruction.Operation.clc:\n                this._opCycles = 1;\n                this._instructionCallback = opClc;\n                break;\n\n            case Instruction.Operation.cld:\n                this._opCycles = 1;\n                this._instructionCallback = opCld;\n                break;\n\n            case Instruction.Operation.cli:\n                this._opCycles = 1;\n                this._instructionCallback = opCli;\n                this._interuptCheck = InterruptCheck.beforeOp;\n                break;\n\n            case Instruction.Operation.clv:\n                this._opCycles = 1;\n                this._instructionCallback = opClv;\n                break;\n\n            case Instruction.Operation.cmp:\n                this._opCycles = 0;\n                this._instructionCallback = opCmp;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.cpx:\n                this._opCycles = 0;\n                this._instructionCallback = opCpx;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.cpy:\n                this._opCycles = 0;\n                this._instructionCallback = opCpy;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.dec:\n                this._opCycles = 3;\n                this._instructionCallback = opDec;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.dex:\n                this._opCycles = 1;\n                this._instructionCallback = opDex;\n                break;\n\n            case Instruction.Operation.dey:\n                this._opCycles = 1;\n                this._instructionCallback = opDey;\n                break;\n\n            case Instruction.Operation.eor:\n                this._opCycles = 0;\n                this._instructionCallback = opEor;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.inc:\n                this._opCycles = 3;\n                this._instructionCallback = opInc;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.inx:\n                this._opCycles = 1;\n                this._instructionCallback = opInx;\n                break;\n\n            case Instruction.Operation.iny:\n                this._opCycles = 1;\n                this._instructionCallback = opIny;\n                break;\n\n            case Instruction.Operation.jmp:\n                this._opCycles = 0;\n                this._instructionCallback = opJmp;\n                break;\n\n            case Instruction.Operation.jsr:\n                this._opCycles = 5;\n                this._instructionCallback = opJsr;\n                break;\n\n            case Instruction.Operation.lda:\n                this._opCycles = addressingMode === Instruction.AddressingMode.immediate ? 0 : 1;\n                this._instructionCallback = opLda;\n                break;\n\n            case Instruction.Operation.ldx:\n                this._opCycles = addressingMode === Instruction.AddressingMode.immediate ? 0 : 1;\n                this._instructionCallback = opLdx;\n                break;\n\n            case Instruction.Operation.ldy:\n                this._opCycles = addressingMode === Instruction.AddressingMode.immediate ? 0 : 1;\n                this._instructionCallback = opLdy;\n                break;\n\n            case Instruction.Operation.lsr:\n                if (addressingMode === Instruction.AddressingMode.implied) {\n                    this._opCycles = 1;\n                    this._instructionCallback = opLsrAcc;\n                } else {\n                    this._opCycles = 3;\n                    this._instructionCallback = opLsrMem;\n                    slowIndexedAccess = true;\n                }\n                break;\n\n            case Instruction.Operation.nop:\n                this._opCycles = 1;\n\n                this._instructionCallback = opNop;\n                break;\n\n            case Instruction.Operation.dop:\n            case Instruction.Operation.top:\n                this._opCycles = 0;\n                dereference = true;\n\n                this._instructionCallback = opNop;\n                break;\n\n            case Instruction.Operation.ora:\n                this._opCycles = 0;\n                this._instructionCallback = opOra;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.php:\n                this._opCycles = 2;\n                this._instructionCallback = opPhp;\n                break;\n\n            case Instruction.Operation.pha:\n                this._opCycles = 2;\n                this._instructionCallback = opPha;\n                break;\n\n            case Instruction.Operation.pla:\n                this._opCycles = 3;\n                this._instructionCallback = opPla;\n                break;\n\n            case Instruction.Operation.plp:\n                this._opCycles = 3;\n                this._instructionCallback = opPlp;\n                this._interuptCheck = InterruptCheck.beforeOp;\n                break;\n\n            case Instruction.Operation.rol:\n                if (addressingMode === Instruction.AddressingMode.implied) {\n                    this._opCycles = 1;\n                    this._instructionCallback = opRolAcc;\n                } else {\n                    this._opCycles = 3;\n                    this._instructionCallback = opRolMem;\n                    slowIndexedAccess = true;\n                }\n                break;\n\n            case Instruction.Operation.ror:\n                if (addressingMode === Instruction.AddressingMode.implied) {\n                    this._opCycles = 1;\n                    this._instructionCallback = opRorAcc;\n                } else {\n                    this._opCycles = 3;\n                    this._instructionCallback = opRorMem;\n                    slowIndexedAccess = true;\n                }\n                break;\n\n            case Instruction.Operation.rti:\n                this._opCycles = 5;\n                this._instructionCallback = opRti;\n                break;\n\n            case Instruction.Operation.rts:\n                this._opCycles = 5;\n                this._instructionCallback = opRts;\n                break;\n\n            case Instruction.Operation.sbc:\n                this._opCycles = 0;\n                this._instructionCallback = opSbc;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.sec:\n                this._opCycles = 1;\n                this._instructionCallback = opSec;\n                break;\n\n            case Instruction.Operation.sed:\n                this._opCycles = 1;\n                this._instructionCallback = opSed;\n                break;\n\n            case Instruction.Operation.sei:\n                this._opCycles = 1;\n                this._instructionCallback = opSei;\n                this._interuptCheck = InterruptCheck.beforeOp;\n                break;\n\n            case Instruction.Operation.sta:\n                this._opCycles = 1;\n                this._instructionCallback = opSta;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.stx:\n                this._opCycles = 1;\n                this._instructionCallback = opStx;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.sty:\n                this._opCycles = 1;\n                this._instructionCallback = opSty;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.tax:\n                this._opCycles = 1;\n                this._instructionCallback = opTax;\n                break;\n\n            case Instruction.Operation.tay:\n                this._opCycles = 1;\n                this._instructionCallback = opTay;\n                break;\n\n            case Instruction.Operation.tsx:\n                this._opCycles = 1;\n                this._instructionCallback = opTsx;\n                break;\n\n            case Instruction.Operation.txa:\n                this._opCycles = 1;\n                this._instructionCallback = opTxa;\n                break;\n\n            case Instruction.Operation.txs:\n                this._opCycles = 1;\n                this._instructionCallback = opTxs;\n                break;\n\n            case Instruction.Operation.tya:\n                this._opCycles = 1;\n                this._instructionCallback = opTya;\n                break;\n\n            case Instruction.Operation.arr:\n                this._opCycles = 0;\n                this._instructionCallback = opArr;\n                break;\n\n            case Instruction.Operation.alr:\n                this._opCycles = 0;\n                this._instructionCallback = opAlr;\n                break;\n\n            case Instruction.Operation.axs:\n                this._opCycles = 0;\n                this._instructionCallback = opAxs;\n                break;\n\n            case Instruction.Operation.dcp:\n                this._opCycles = 3;\n                this._instructionCallback = opDcp;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.lax:\n                this._opCycles = 0;\n                this._instructionCallback = opLax;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.slo:\n                this._opCycles = 2;\n                this._instructionCallback = opSlo;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.aax:\n                this._opCycles = 1;\n                this._instructionCallback = opAax;\n                break;\n\n            case Instruction.Operation.lar:\n                this._opCycles = 0;\n                this._instructionCallback = opLar;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.isc:\n                this._opCycles = 3;\n                this._instructionCallback = opIsc;\n                break;\n\n            case Instruction.Operation.aac:\n                this._opCycles = 0;\n                this._instructionCallback = opAac;\n                break;\n\n            default:\n                if (this._invalidInstructionCallback) {\n                    this._invalidInstructionCallback(this);\n                }\n                return;\n        }\n\n        this.state.p = (this.state.p + 1) & 0xFFFF;\n\n        let value: number,\n            base: number;\n\n        switch (addressingMode) {\n            case Instruction.AddressingMode.immediate:\n                this._operand = this._bus.read(this.state.p);\n                dereference = false;\n                this.state.p = (this.state.p + 1) & 0xFFFF;\n                this._opCycles++;\n                break;\n\n            case Instruction.AddressingMode.zeroPage:\n                this._operand = this._bus.read(this.state.p);\n                this.state.p = (this.state.p + 1) & 0xFFFF;\n                this._opCycles++;\n                break;\n\n            case Instruction.AddressingMode.absolute:\n                this._operand = this._bus.readWord(this.state.p);\n                this.state.p = (this.state.p + 2) & 0xFFFF;\n                this._opCycles += 2;\n                break;\n\n            case Instruction.AddressingMode.indirect:\n                value = this._bus.readWord(this.state.p);\n                if ((value & 0xFF) === 0xFF) {\n                    this._operand = this._bus.read(value) + (this._bus.read(value & 0xFF00) << 8);\n                }\n                else {\n                    this._operand = this._bus.readWord(value);\n                }\n                this.state.p = (this.state.p + 2) & 0xFFFF;\n                this._opCycles += 4;\n                break;\n\n            case Instruction.AddressingMode.relative:\n                value = this._bus.read(this.state.p);\n                value = (value & 0x80) ? -(~(value - 1) & 0xFF) : value;\n                this._operand = (this.state.p + value + 0x10001) & 0xFFFF;\n                this.state.p = (this.state.p + 1) & 0xFFFF;\n                this._opCycles += (((this._operand & 0xFF00) !== (this.state.p & 0xFF00)) ? 3 : 2);\n                break;\n\n            case Instruction.AddressingMode.zeroPageX:\n                base = this._bus.read(this.state.p);\n                this._bus.read(base);\n\n                this._operand = (base + this.state.x) & 0xFF;\n                this.state.p = (this.state.p + 1) & 0xFFFF;\n                this._opCycles += 2;\n                break;\n\n            case Instruction.AddressingMode.absoluteX:\n                value = this._bus.readWord(this.state.p);\n                this._operand = (value + this.state.x) & 0xFFFF;\n\n                if ((this._operand & 0xFF00) !== (value & 0xFF00)) {\n                    this._bus.read((value & 0xFF00) | (this._operand & 0xFF));\n                }\n\n                this._opCycles += ((slowIndexedAccess || (this._operand & 0xFF00) !== (value & 0xFF00)) ? 3 : 2);\n                this.state.p = (this.state.p + 2) & 0xFFFF;\n                break;\n\n            case Instruction.AddressingMode.zeroPageY:\n                base = this._bus.read(this.state.p);\n                this._bus.read(base);\n\n                this._operand = (base + this.state.y) & 0xFF;\n                this.state.p = (this.state.p + 1) & 0xFFFF;\n                this._opCycles += 2;\n                break;\n\n            case Instruction.AddressingMode.absoluteY:\n                value = this._bus.readWord(this.state.p);\n                this._operand = (value + this.state.y) & 0xFFFF;\n\n                if ((this._operand & 0xFF00) !== (value & 0xFF00)) {\n                    this._bus.read((value & 0xFF00) | (this._operand & 0xFF));\n                }\n\n                this._opCycles += ((slowIndexedAccess || (this._operand & 0xFF00) !== (value & 0xFF00)) ? 3 : 2);\n                this.state.p = (this.state.p + 2) & 0xFFFF;\n                break;\n\n            case Instruction.AddressingMode.indexedIndirectX:\n                base = this._bus.read(this.state.p);\n                this._bus.read(base);\n\n                value = (base + this.state.x) & 0xFF;\n\n                if (value === 0xFF) {\n                    this._operand = this._bus.read(0xFF) + (this._bus.read(0x00) << 8);\n                } else {\n                    this._operand = this._bus.readWord(value);\n                }\n\n                this._opCycles += 4;\n                this.state.p = (this.state.p + 1) & 0xFFFF;\n                break;\n\n            case Instruction.AddressingMode.indirectIndexedY:\n                value = this._bus.read(this.state.p);\n\n                if (value === 0xFF) {\n                    value = this._bus.read(0xFF) + (this._bus.read(0x00) << 8);\n                } else {\n                    value = this._bus.readWord(value);\n                }\n\n                this._operand = (value + this.state.y) & 0xFFFF;\n\n                if ((this._operand & 0xFF00) !== (value & 0xFF00)) {\n                    this._bus.read((value & 0xFF00) | (this._operand & 0xFF));\n                }\n\n                this._opCycles += ((slowIndexedAccess || (value & 0xFF00) !== (this._operand & 0xFF00)) ? 4 : 3);\n                this.state.p = (this.state.p + 1) & 0xFFFF;\n                break;\n        }\n\n        if (dereference) {\n            this._operand = this._bus.read(this._operand);\n            this._opCycles++;\n        }\n\n        this.executionState = CpuInterface.ExecutionState.execute;\n    }\n\n    private _checkForInterrupts(): void {\n        if (this._nmiPending) {\n            this.state.irq = false;\n            this.state.nmi = true;\n            this._nmiPending = false;\n        }\n\n        if (this._interruptPending && !this.state.nmi && !(this.state.flags & CpuInterface.Flags.i)) {\n            this.state.irq = true;\n        }\n    }\n\n    executionState: CpuInterface.ExecutionState = CpuInterface.ExecutionState.boot;\n    state: CpuInterface.State = new CpuInterface.State();\n\n    private _opCycles: number = 0;\n    private _instructionCallback: InstructionCallbackInterface = null;\n    private _invalidInstructionCallback: CpuInterface.InvalidInstructionCallbackInterface = null;\n\n    private _interruptPending: boolean = false;\n    private _nmiPending: boolean = false;\n    private _interuptCheck = InterruptCheck.endOfInstruction;\n\n    private _halted: boolean = false;\n\n    private _operand: number = 0;\n    private _lastInstructionPointer: number = 0;\n    private _currentAddressingMode: Instruction.AddressingMode = Instruction.AddressingMode.invalid;\n}\n\ninterface InstructionCallbackInterface {\n    (\n        state?: CpuInterface.State,\n        bus?: BusInterface,\n        operand?: number,\n        addressingMode?: Instruction.AddressingMode\n    ): void;\n}\n\nexport default Cpu;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\ninterface CpuInterface {\n    setInterrupt(irq: boolean): CpuInterface;\n\n    isInterrupt(): boolean;\n\n    nmi(): CpuInterface;\n\n    halt(): CpuInterface;\n\n    resume(): CpuInterface;\n\n    isHalt(): boolean;\n\n    setInvalidInstructionCallback(\n            callback: CpuInterface.InvalidInstructionCallbackInterface\n        ): CpuInterface;\n\n    getInvalidInstructionCallback(): CpuInterface.InvalidInstructionCallbackInterface;\n\n    getLastInstructionPointer(): number;\n\n    reset(): CpuInterface;\n\n    cycle(): CpuInterface;\n\n    executionState: CpuInterface.ExecutionState;\n    state: CpuInterface.State;\n}\n\nnamespace CpuInterface {\n    export const enum ExecutionState {\n        boot, fetch, execute\n    }\n\n    export class State {\n        a: number = 0;\n        x: number = 0;\n        y: number = 0;\n        s: number = 0;\n        p: number = 0;\n        flags: number = 0;\n\n        irq = false;\n        nmi = false;\n    }\n\n    export const enum Flags {\n        c = 0x01,   // carry\n        z = 0x02,   // zero\n        i = 0x04,   // interrupt\n        d = 0x08,   // decimal mode\n        b = 0x10,   // break\n        e = 0x20,   // reserved\n        v = 0x40,   // overflow\n        n = 0x80    // sign\n    }\n\n    export interface InvalidInstructionCallbackInterface {\n        (cpu?: CpuInterface): void;\n    }\n}\n\nexport default CpuInterface;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport Instruction from './Instruction';\nimport BusInterface from '../bus/BusInterface';\n\nimport * as hex from '../../tools/hex';\n\nclass Disassembler {\n    constructor(private _bus?: BusInterface)\n    {}\n\n    setBus(bus: BusInterface): Disassembler {\n        this._bus = bus;\n        return this;\n    }\n\n    getBus(): BusInterface {\n        return this._bus;\n    }\n\n    disassembleAt(address: number): string {\n        const instruction = Instruction.opcodes[this._peek(address)],\n            operation = Instruction.OperationMap[instruction.operation].toUpperCase();\n\n        const read8 =  (a: number = address + 1) =>\n            hex.encode(this._peek(a), 2);\n\n        const read16 = (a: number = address + 1) =>\n            hex.encode(\n                this._peek(a) + (this._peek(a + 1) << 8), 4);\n\n        const decodeSint8 = (value: number) => (value & 0x80) ? (-(~(value - 1) & 0xFF)) : value;\n\n        switch (instruction.addressingMode) {\n            case Instruction.AddressingMode.implied:\n                return operation;\n\n            case Instruction.AddressingMode.immediate:\n                return operation + ' #' + read8();\n\n            case Instruction.AddressingMode.zeroPage:\n                return operation + ' ' + read8();\n\n            case Instruction.AddressingMode.absolute:\n                return operation + ' ' + read16();\n\n            case Instruction.AddressingMode.indirect:\n                return operation + ' (' + read16() + ')';\n\n            case Instruction.AddressingMode.relative:\n                const distance = decodeSint8(this._peek(address + 1));\n\n                return operation + ' ' +\n                    hex.encode(distance, 2) + ' ; -> '\n                    + hex.encode((0x10002 + address + distance) % 0x10000, 4);\n\n            case Instruction.AddressingMode.zeroPageX:\n                return operation + ' ' + read8() + ',X';\n\n            case Instruction.AddressingMode.absoluteX:\n                return operation + ' ' + read16() + ',X';\n\n            case Instruction.AddressingMode.indexedIndirectX:\n                return operation + ' (' + read8() + ',X)';\n\n            case Instruction.AddressingMode.zeroPageY:\n                return operation + ' ' + read8() + ',Y';\n\n            case Instruction.AddressingMode.absoluteY:\n                return operation + ' ' + read16() + ',Y';\n\n            case Instruction.AddressingMode.indirectIndexedY:\n                return operation + ' (' + read8() + '),Y';\n\n            default:\n                return 'INVALID';\n        }\n    }\n\n    private _peek(address: number) {\n        return this._bus.peek(address % 0x10000);\n    }\n\n}\n\nexport default Disassembler;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nclass Instruction {\n    constructor(\n        public operation: Instruction.Operation,\n        public addressingMode: Instruction.AddressingMode\n    ) {}\n\n    getSize(): number {\n        switch (this.addressingMode) {\n            case Instruction.AddressingMode.immediate:\n            case Instruction.AddressingMode.zeroPage:\n            case Instruction.AddressingMode.zeroPageX:\n            case Instruction.AddressingMode.zeroPageY:\n            case Instruction.AddressingMode.indexedIndirectX:\n            case Instruction.AddressingMode.indirectIndexedY:\n            case Instruction.AddressingMode.relative:\n                return 2;\n\n            case Instruction.AddressingMode.absolute:\n            case Instruction.AddressingMode.absoluteX:\n            case Instruction.AddressingMode.absoluteY:\n            case Instruction.AddressingMode.indirect:\n                return 3;\n\n            default:\n                return 1;\n        }\n    }\n}\n\nnamespace Instruction {\n    export const enum Operation {\n        adc, and, asl, bcc, bcs, beq, bit, bmi, bne, bpl, brk, bvc, bvs, clc,\n        cld, cli, clv, cmp, cpx, cpy, dec, dex, dey, eor, inc, inx, iny, jmp,\n        jsr, lda, ldx, ldy, lsr, nop, ora, pha, php, pla, plp, rol, ror, rti,\n        rts, sbc, sec, sed, sei, sta, stx, sty, tax, tay, tsx, txa, txs, tya,\n        // undocumented operations\n        dop, top, alr, axs, dcp, lax, arr, slo, aax, lar, isc, aac,\n        invalid\n    }\n\n    export enum OperationMap {\n        adc, and, asl, bcc, bcs, beq, bit, bmi, bne, bpl, brk, bvc, bvs, clc,\n        cld, cli, clv, cmp, cpx, cpy, dec, dex, dey, eor, inc, inx, iny, jmp,\n        jsr, lda, ldx, ldy, lsr, nop, ora, pha, php, pla, plp, rol, ror, rti,\n        rts, sbc, sec, sed, sei, sta, stx, sty, tax, tay, tsx, txa, txs, tya,\n        // undocumented operations\n        dop, top, alr, axs, dcp, lax, arr, slo, aax, lar, isc, aac,\n        invalid\n    }\n\n    export const enum AddressingMode {\n        implied,\n        immediate, zeroPage, absolute, indirect, relative,\n        zeroPageX, absoluteX, indexedIndirectX,\n        zeroPageY, absoluteY, indirectIndexedY,\n        invalid\n    }\n\n    export const opcodes = new Array<Instruction>(256);\n}\n\nexport default Instruction;\n\n// Opcodes init\n\nnamespace Instruction {\n\n    export namespace __init {\n        for (let i = 0; i < 256; i++) {\n            opcodes[i] = new Instruction(Operation.invalid, AddressingMode.invalid);\n        }\n\n        let operation: Operation,\n            addressingMode: AddressingMode,\n            opcode: number;\n\n        for (let i = 0; i < 8; i++) {\n            switch (i) {\n                case 0: operation = Operation.ora; break;\n                case 1: operation = Operation.and; break;\n                case 2: operation = Operation.eor; break;\n                case 3: operation = Operation.adc; break;\n                case 4: operation = Operation.sta; break;\n                case 5: operation = Operation.lda; break;\n                case 6: operation = Operation.cmp; break;\n                case 7: operation = Operation.sbc; break;\n            }\n            for (let j = 0; j < 8; j++) {\n                switch (j) {\n                    case 0: addressingMode = AddressingMode.indexedIndirectX; break;\n                    case 1: addressingMode = AddressingMode.zeroPage; break;\n                    case 2: addressingMode = AddressingMode.immediate; break;\n                    case 3: addressingMode = AddressingMode.absolute; break;\n                    case 4: addressingMode = AddressingMode.indirectIndexedY; break;\n                    case 5: addressingMode = AddressingMode.zeroPageX; break;\n                    case 6: addressingMode = AddressingMode.absoluteY; break;\n                    case 7: addressingMode = AddressingMode.absoluteX; break;\n                }\n\n                if (operation === Operation.sta && addressingMode === AddressingMode.immediate) {\n                    addressingMode = AddressingMode.invalid;\n                }\n\n                if (operation !== Operation.invalid && addressingMode !== AddressingMode.invalid) {\n                    opcode = (i << 5) | (j << 2) | 1;\n                    opcodes[opcode].operation = operation;\n                    opcodes[opcode].addressingMode = addressingMode;\n                }\n            }\n        }\n\n        function set(_opcode: number, _operation: Operation, _addressingMode: AddressingMode): void {\n            if (opcodes[_opcode].operation !== Operation.invalid) {\n                throw new Error('entry for opcode ' + _opcode + ' already exists');\n            }\n\n            opcodes[_opcode].operation = _operation;\n            opcodes[_opcode].addressingMode = _addressingMode;\n        }\n\n        set(0x06, Operation.asl, AddressingMode.zeroPage);\n        set(0x0A, Operation.asl, AddressingMode.implied);\n        set(0x0E, Operation.asl, AddressingMode.absolute);\n        set(0x16, Operation.asl, AddressingMode.zeroPageX);\n        set(0x1E, Operation.asl, AddressingMode.absoluteX);\n\n        set(0x26, Operation.rol, AddressingMode.zeroPage);\n        set(0x2A, Operation.rol, AddressingMode.implied);\n        set(0x2E, Operation.rol, AddressingMode.absolute);\n        set(0x36, Operation.rol, AddressingMode.zeroPageX);\n        set(0x3E, Operation.rol, AddressingMode.absoluteX);\n\n        set(0x46, Operation.lsr, AddressingMode.zeroPage);\n        set(0x4A, Operation.lsr, AddressingMode.implied);\n        set(0x4E, Operation.lsr, AddressingMode.absolute);\n        set(0x56, Operation.lsr, AddressingMode.zeroPageX);\n        set(0x5E, Operation.lsr, AddressingMode.absoluteX);\n\n        set(0x66, Operation.ror, AddressingMode.zeroPage);\n        set(0x6A, Operation.ror, AddressingMode.implied);\n        set(0x6E, Operation.ror, AddressingMode.absolute);\n        set(0x76, Operation.ror, AddressingMode.zeroPageX);\n        set(0x7E, Operation.ror, AddressingMode.absoluteX);\n\n        set(0x86, Operation.stx, AddressingMode.zeroPage);\n        set(0x8E, Operation.stx, AddressingMode.absolute);\n        set(0x96, Operation.stx, AddressingMode.zeroPageY);\n\n        set(0xA2, Operation.ldx, AddressingMode.immediate);\n        set(0xA6, Operation.ldx, AddressingMode.zeroPage);\n        set(0xAE, Operation.ldx, AddressingMode.absolute);\n        set(0xB6, Operation.ldx, AddressingMode.zeroPageY);\n        set(0xBE, Operation.ldx, AddressingMode.absoluteY);\n\n        set(0xC6, Operation.dec, AddressingMode.zeroPage);\n        set(0xCE, Operation.dec, AddressingMode.absolute);\n        set(0xD6, Operation.dec, AddressingMode.zeroPageX);\n        set(0xDE, Operation.dec, AddressingMode.absoluteX);\n\n        set(0xE6, Operation.inc, AddressingMode.zeroPage);\n        set(0xEE, Operation.inc, AddressingMode.absolute);\n        set(0xF6, Operation.inc, AddressingMode.zeroPageX);\n        set(0xFE, Operation.inc, AddressingMode.absoluteX);\n\n        set(0x24, Operation.bit, AddressingMode.zeroPage);\n        set(0x2C, Operation.bit, AddressingMode.absolute);\n\n        set(0x4C, Operation.jmp, AddressingMode.absolute);\n        set(0x6C, Operation.jmp, AddressingMode.indirect);\n\n        set(0x84, Operation.sty, AddressingMode.zeroPage);\n        set(0x8C, Operation.sty, AddressingMode.absolute);\n        set(0x94, Operation.sty, AddressingMode.zeroPageX);\n\n        set(0xA0, Operation.ldy, AddressingMode.immediate);\n        set(0xA4, Operation.ldy, AddressingMode.zeroPage);\n        set(0xAC, Operation.ldy, AddressingMode.absolute);\n        set(0xB4, Operation.ldy, AddressingMode.zeroPageX);\n        set(0xBC, Operation.ldy, AddressingMode.absoluteX);\n\n        set(0xC0, Operation.cpy, AddressingMode.immediate);\n        set(0xC4, Operation.cpy, AddressingMode.zeroPage);\n        set(0xCC, Operation.cpy, AddressingMode.absolute);\n\n        set(0xE0, Operation.cpx, AddressingMode.immediate);\n        set(0xE4, Operation.cpx, AddressingMode.zeroPage);\n        set(0xEC, Operation.cpx, AddressingMode.absolute);\n\n        set(0x10, Operation.bpl, AddressingMode.relative);\n        set(0x30, Operation.bmi, AddressingMode.relative);\n        set(0x50, Operation.bvc, AddressingMode.relative);\n        set(0x70, Operation.bvs, AddressingMode.relative);\n        set(0x90, Operation.bcc, AddressingMode.relative);\n        set(0xB0, Operation.bcs, AddressingMode.relative);\n        set(0xD0, Operation.bne, AddressingMode.relative);\n        set(0xF0, Operation.beq, AddressingMode.relative);\n\n        set(0x00, Operation.brk, AddressingMode.implied);\n        set(0x20, Operation.jsr, AddressingMode.implied);\n        set(0x40, Operation.rti, AddressingMode.implied);\n        set(0x60, Operation.rts, AddressingMode.implied);\n        set(0x08, Operation.php, AddressingMode.implied);\n        set(0x28, Operation.plp, AddressingMode.implied);\n        set(0x48, Operation.pha, AddressingMode.implied);\n        set(0x68, Operation.pla, AddressingMode.implied);\n        set(0x88, Operation.dey, AddressingMode.implied);\n        set(0xA8, Operation.tay, AddressingMode.implied);\n        set(0xC8, Operation.iny, AddressingMode.implied);\n        set(0xE8, Operation.inx, AddressingMode.implied);\n        set(0x18, Operation.clc, AddressingMode.implied);\n        set(0x38, Operation.sec, AddressingMode.implied);\n        set(0x58, Operation.cli, AddressingMode.implied);\n        set(0x78, Operation.sei, AddressingMode.implied);\n        set(0x98, Operation.tya, AddressingMode.implied);\n        set(0xB8, Operation.clv, AddressingMode.implied);\n        set(0xD8, Operation.cld, AddressingMode.implied);\n        set(0xF8, Operation.sed, AddressingMode.implied);\n        set(0x8A, Operation.txa, AddressingMode.implied);\n        set(0x9A, Operation.txs, AddressingMode.implied);\n        set(0xAA, Operation.tax, AddressingMode.implied);\n        set(0xBA, Operation.tsx, AddressingMode.implied);\n        set(0xCA, Operation.dex, AddressingMode.implied);\n        set(0xEA, Operation.nop, AddressingMode.implied);\n\n        // instructions for undocumented opcodes\n        set(0x1A, Operation.nop, AddressingMode.implied);\n        set(0x3A, Operation.nop, AddressingMode.implied);\n        set(0x5A, Operation.nop, AddressingMode.implied);\n        set(0x7A, Operation.nop, AddressingMode.implied);\n        set(0xDA, Operation.nop, AddressingMode.implied);\n        set(0xFA, Operation.nop, AddressingMode.implied);\n\n        set(0x04, Operation.dop, AddressingMode.zeroPage);\n        set(0x14, Operation.dop, AddressingMode.zeroPageX);\n        set(0x34, Operation.dop, AddressingMode.zeroPageX);\n        set(0x44, Operation.dop, AddressingMode.zeroPage);\n        set(0x54, Operation.dop, AddressingMode.zeroPageX);\n        set(0x64, Operation.dop, AddressingMode.zeroPage);\n        set(0x74, Operation.dop, AddressingMode.zeroPageX);\n        set(0x80, Operation.dop, AddressingMode.immediate);\n        set(0x82, Operation.dop, AddressingMode.immediate);\n        set(0x89, Operation.dop, AddressingMode.immediate);\n        set(0xC2, Operation.dop, AddressingMode.immediate);\n        set(0xD4, Operation.dop, AddressingMode.zeroPageX);\n        set(0xE2, Operation.dop, AddressingMode.immediate);\n        set(0xF4, Operation.dop, AddressingMode.zeroPageX);\n\n        set(0x0C, Operation.top, AddressingMode.absolute);\n        set(0x1C, Operation.top, AddressingMode.absoluteX);\n        set(0x3C, Operation.top, AddressingMode.absoluteX);\n        set(0x5C, Operation.top, AddressingMode.absoluteX);\n        set(0x7C, Operation.top, AddressingMode.absoluteX);\n        set(0xDC, Operation.top, AddressingMode.absoluteX);\n        set(0xFC, Operation.top, AddressingMode.absoluteX);\n\n        set(0xEB, Operation.sbc, AddressingMode.immediate);\n\n        set(0x4B, Operation.alr, AddressingMode.immediate);\n\n        set(0xCB, Operation.axs, AddressingMode.immediate);\n\n        set(0xC7, Operation.dcp, AddressingMode.zeroPage);\n        set(0xD7, Operation.dcp, AddressingMode.zeroPageX);\n        set(0xCF, Operation.dcp, AddressingMode.absolute);\n        set(0xDF, Operation.dcp, AddressingMode.absoluteX);\n        set(0xDB, Operation.dcp, AddressingMode.absoluteY);\n        set(0xC3, Operation.dcp, AddressingMode.indexedIndirectX);\n        set(0xD3, Operation.dcp, AddressingMode.indirectIndexedY);\n\n        set(0xA7, Operation.lax, AddressingMode.zeroPage);\n        set(0xB7, Operation.lax, AddressingMode.zeroPageY);\n        set(0xAF, Operation.lax, AddressingMode.absolute);\n        set(0xBF, Operation.lax, AddressingMode.absoluteY);\n        set(0xA3, Operation.lax, AddressingMode.indexedIndirectX);\n        set(0xB3, Operation.lax, AddressingMode.indirectIndexedY);\n\n        set(0x6B, Operation.arr, AddressingMode.immediate);\n\n        set(0x07, Operation.slo, AddressingMode.zeroPage);\n        set(0x17, Operation.slo, AddressingMode.zeroPageX);\n        set(0x0F, Operation.slo, AddressingMode.absolute);\n        set(0x1F, Operation.slo, AddressingMode.absoluteX);\n        set(0x1B, Operation.slo, AddressingMode.absoluteY);\n        set(0x03, Operation.slo, AddressingMode.indexedIndirectX);\n        set(0x13, Operation.slo, AddressingMode.indirectIndexedY);\n\n        set(0x87, Operation.aax, AddressingMode.zeroPage);\n        set(0x97, Operation.aax, AddressingMode.zeroPageY);\n        set(0x83, Operation.aax, AddressingMode.indexedIndirectX);\n        set(0x8F, Operation.aax, AddressingMode.absolute);\n\n        set(0xBB, Operation.lar, AddressingMode.absoluteY);\n\n        set(0xE7, Operation.isc, AddressingMode.zeroPage);\n        set(0xF7, Operation.isc, AddressingMode.zeroPageX);\n        set(0xEF, Operation.isc, AddressingMode.absolute);\n        set(0xFF, Operation.isc, AddressingMode.absoluteX);\n        set(0xFB, Operation.isc, AddressingMode.absoluteY);\n        set(0xE3, Operation.isc, AddressingMode.indexedIndirectX);\n        set(0xF3, Operation.isc, AddressingMode.indirectIndexedY);\n\n        set(0x0B, Operation.aac, AddressingMode.immediate);\n        set(0x2B, Operation.aac, AddressingMode.immediate);\n    }\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport SimpleSerialIOInterface from '../io/SimpleSerialIOInterface';\nimport VanillaBoard from '../vanilla/Board';\nimport Memory from './Memory';\nimport CpuInterface from '../cpu/CpuInterface';\nimport BusInterface from '../bus/BusInterface';\n\nclass Board extends VanillaBoard {\n\n    constructor(cpuFactory?: (bus: BusInterface) => CpuInterface) {\n        super(cpuFactory);\n\n        this._bus.setCpu(this._cpu);\n    }\n\n    getSerialIO(): SimpleSerialIOInterface {\n        return this._bus;\n    }\n\n    protected _createBus() {\n        return new Memory();\n    }\n\n    protected _bus: Memory;\n}\n\nexport default Board;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport VanillaMemory from '../vanilla/Memory';\nimport SimpleSerialIOInterface from '../io/SimpleSerialIOInterface';\nimport CpuInterface from '../cpu/CpuInterface';\n\nclass Memory extends VanillaMemory implements SimpleSerialIOInterface {\n\n    reset(): void {\n        super.reset();\n\n        this._feedbackRegister = 0;\n    }\n\n    setCpu(cpu: CpuInterface): this {\n        this._cpu = cpu;\n\n        return this;\n    }\n\n    read(address: number): number {\n        switch (address) {\n            case 0xF002:\n                return this._feedbackRegister;\n\n            case 0xF004:\n                return this._inCallback(this);\n\n            default:\n                return this._data[address];\n        }\n    }\n\n    readWord(address: number): number {\n        if ((address & 0xFFF0) === 0xF000) {\n            return this.read(address) + (this.read((address + 1) & 0xFFFF) << 8);\n        }\n\n        return this._data[address] + (this._data[(address + 1) & 0xFFFF] << 8);\n    }\n\n    write(address: number, value: number) {\n        switch (address) {\n            case 0xF001:\n                this._outCallback(value, this);\n                break;\n\n            case 0xF002:\n                this._cpu.setInterrupt(!!(value & 0x01));\n                if ((value & 0x02) && (!(this._feedbackRegister & 0x02))) {\n                    this._cpu.nmi();\n                }\n\n                this._feedbackRegister = value;\n                break;\n\n            default:\n                if (address < 0xC000) {\n                    this._data[address] = value;\n                }\n                break;\n        }\n    }\n\n    setInCallback(callback: SimpleSerialIOInterface.InCallbackInterface): Memory {\n        this._inCallback = callback;\n        return this;\n    }\n\n    getInCallback(): SimpleSerialIOInterface.InCallbackInterface {\n        return this._inCallback;\n    }\n\n    setOutCallback(callback: SimpleSerialIOInterface.OutCallbackInterface): Memory {\n        this._outCallback = callback;\n        return this;\n    }\n\n    getOutCallback(): SimpleSerialIOInterface.OutCallbackInterface {\n        return this._outCallback;\n    }\n\n    private _inCallback: SimpleSerialIOInterface.InCallbackInterface =\n        (): number => 0x00\n    private _outCallback: SimpleSerialIOInterface.OutCallbackInterface =\n        (): void => undefined\n\n    private _cpu: CpuInterface;\n    private _feedbackRegister = 0;\n}\n\nexport default Memory;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport {Event} from 'microevent.ts';\n\nimport BoardInterface from '../board/BoardInterface';\nimport CpuInterface from '../cpu/CpuInterface';\nimport Cpu from '../cpu/Cpu';\nimport Memory from './Memory';\nimport BusInterface from '../bus/BusInterface';\nimport TimerInterface from '../board/TimerInterface';\nimport SchedulerInterface from '../../tools/scheduler/SchedulerInterface';\nimport TaskInterface from '../../tools/scheduler/TaskInterface';\n\nclass Board implements BoardInterface {\n\n    constructor(cpuFactory?: (bus: BusInterface) => CpuInterface) {\n        this.cpuClock = this.clock;\n\n        this._bus = this._createBus();\n\n        if (typeof(cpuFactory) === 'undefined') {\n            cpuFactory = bus => new Cpu(bus);\n        }\n\n        this._cpu = cpuFactory(this._bus);\n        this._cpu.setInvalidInstructionCallback(() => this._onInvalidInstruction());\n    }\n\n    getCpu(): CpuInterface {\n        return this._cpu;\n    }\n\n    getBus(): BusInterface {\n        return this._bus;\n    }\n\n    getTimer(): TimerInterface {\n        return this._timer;\n    }\n\n    reset(hard: boolean): Board {\n        this._cpu.reset();\n        this._bus.reset();\n\n        if (hard) {\n            this._bus.clear();\n        }\n\n        return this;\n    }\n\n    boot(): Board {\n        let clock = 0;\n\n        if (this._cpu.executionState !== CpuInterface.ExecutionState.boot) {\n            throw new Error('Already booted!');\n        }\n\n        while (this._cpu.executionState as CpuInterface.ExecutionState !== CpuInterface.ExecutionState.fetch) {\n            this._cpu.cycle();\n            clock++;\n        }\n\n        this.clock.dispatch(clock);\n        return this;\n    }\n\n    suspend(): void {}\n\n    resume(): void {}\n\n    triggerTrap(reason: BoardInterface.TrapReason, message?: string): Board {\n        this._stop();\n\n        this._trap = true;\n\n        if (this.trap.hasHandlers) {\n            this.trap.dispatch(new BoardInterface.TrapPayload(reason, this, message));\n        } else {\n            throw new Error(message);\n        }\n\n        return this;\n    }\n\n    getBoardStateDebug(): string {\n        return undefined;\n    }\n\n    setClockMode(clockMode: BoardInterface.ClockMode): Board {\n        this._clockMode = clockMode;\n\n        return this;\n    }\n\n    getClockMode(): BoardInterface.ClockMode {\n        return this._clockMode;\n    }\n\n    protected _createBus() {\n        return new Memory();\n    }\n\n    protected _tick(clocks: number): number {\n        let i = 0,\n            clock = 0;\n\n        this._trap = false;\n\n        while (i++ < clocks && !this._trap) {\n            this._cpu.cycle();\n            clock++;\n\n            if (this._clockMode === BoardInterface.ClockMode.instruction &&\n                this._cpu.executionState === CpuInterface.ExecutionState.fetch &&\n                this.clock.hasHandlers\n            ) {\n                this.clock.dispatch(clock);\n                clock = 0;\n            }\n        }\n\n        if (clock > 0 && this.clock.hasHandlers) {\n            this.clock.dispatch(clock);\n        }\n\n        return clock;\n    }\n\n    protected _start(scheduler: SchedulerInterface, sliceHint = 100000) {\n        if (this._runTask) {\n            return;\n        }\n\n        this._sliceHint = sliceHint;\n\n        this._runTask = scheduler.start(this._executeSlice, this);\n    }\n\n    protected _executeSlice(board: Board) {\n        board._tick(board._sliceHint);\n    }\n\n    protected _stop() {\n        if (!this._runTask) {\n            return;\n        }\n\n        this._runTask.stop();\n\n        this._runTask = undefined;\n    }\n\n    protected _onInvalidInstruction() {\n        this.triggerTrap(BoardInterface.TrapReason.cpu, 'invalid instruction');\n    }\n\n    clock = new Event<number>();\n\n    cpuClock: Event<number>;\n\n    trap = new Event<BoardInterface.TrapPayload>();\n\n    protected _cpu: CpuInterface;\n    protected _bus: Memory;\n    protected _trap = false;\n    protected _sliceHint: number;\n    protected _runTask: TaskInterface;\n    protected _clockMode = BoardInterface.ClockMode.lazy;\n\n    protected _timer = {\n        tick: (clocks: number): number => this._tick(clocks),\n        start: (scheduler: SchedulerInterface, sliceHint?: number): void => this._start(scheduler, sliceHint),\n        stop: (): void => this._stop(),\n        isRunning: (): boolean => !!this._runTask\n    };\n}\n\nexport default Board;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport BusInterface from '../bus/BusInterface';\n\nclass Memory implements BusInterface {\n\n    constructor() {\n        this.clear();\n    }\n\n    reset(): void {}\n\n    clear(): void {\n        for (let i = 0; i < 0x10000; i++) {\n            this._data[i] = 0;\n        }\n    }\n\n    read(address: number): number {\n        return this._data[address];\n    }\n\n    peek(address: number): number {\n        return this._data[address];\n    }\n\n    readWord(address: number): number {\n        return this._data[address] + (this._data[(address + 1) & 0xFFFF] << 8);\n    }\n\n    write(address: number, value: number) {\n        this._data[address] = value;\n    }\n\n    poke(address: number, value: number) {\n        this._data[address] = value;\n    }\n\n    protected _data = new Uint8Array(0x10000);\n}\n\nexport default Memory;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport {Event, EventInterface} from 'microevent.ts';\n\nimport SchedulerInterface from './scheduler/SchedulerInterface';\nimport TaskInterface from './scheduler/TaskInterface';\n\nclass ClockProbe {\n\n    constructor(private _scheduler: SchedulerInterface) {}\n\n    attach(clock: EventInterface<any>): ClockProbe {\n        if (this._clock) {\n            this.detach();\n        }\n\n        this._clock = clock;\n        clock.addHandler(this._clockHandler, this);\n\n        return this;\n    }\n\n    start(): ClockProbe {\n        if (this._measurementTask) {\n            return this;\n        }\n\n        this._timestamp = Date.now();\n        this._counter = 0;\n        this._measurementTask = this._scheduler.start(this._updateMeasurement, this);\n\n        return this;\n    }\n\n    detach(): ClockProbe {\n        if (!this._clock) {\n            return this;\n        }\n\n        this._clock.removeHandler(this._clockHandler, this);\n        this._clock = undefined;\n\n        return this;\n    }\n\n    stop(): ClockProbe {\n        if (!this._measurementTask) {\n            return this;\n        }\n\n        this._measurementTask.stop();\n        this._measurementTask = undefined;\n\n        return this;\n    }\n\n    getFrequency(): number {\n        return this._frequency;\n    }\n\n    private _updateMeasurement(probe: ClockProbe) {\n        const timestamp = Date.now();\n\n        probe._frequency = probe._counter / (timestamp - probe._timestamp) * 1000;\n\n        probe._counter = 0;\n        probe._timestamp = timestamp;\n\n        probe.frequencyUpdate.dispatch(probe._frequency);\n    }\n\n    private _clockHandler(clocks: number, ctx: ClockProbe) {\n        ctx._counter += clocks;\n    }\n\n    frequencyUpdate = new Event<number>();\n\n    private _counter = 0;\n    private _timestamp: number;\n    private _frequency = 0;\n\n    private _clock: EventInterface<any>;\n\n    private _measurementTask: TaskInterface;\n}\n\nexport default ClockProbe;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nexport function encode(value: number, width?: number): string {\n    let result = Math.abs(value).toString(2);\n\n    if (typeof(width) !== 'undefined') {\n        while (result.length < width) {\n            result = '0' + result;\n        }\n    }\n\n    return (value < 0 ? '-' : '') + '0b' + result;\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nfunction encodeWithPrefix(value: number, width?: number, signed = true, prefix = ''): string {\n    if (!signed && value < 0) {\n        return encodeWithPrefix(value >>> 16, (width && width > 8) ? width - 4 : 4, false, prefix) +\n            encodeWithPrefix(value & 0xFFFF, 4);\n    }\n\n    let result = Math.abs(value).toString(16).toUpperCase();\n\n    if (typeof(width) !== 'undefined') {\n        while (result.length < width) {\n            result = '0' + result;\n        }\n    }\n\n    return (value < 0 ? '-' : '') + prefix + result;\n}\n\nexport function encode(value: number, width?: number, signed = true): string {\n    return encodeWithPrefix(value, width, signed, '$');\n}\n\nexport function decode(value: string): number {\n    const sign = value.match(/^-/) ? -1 : 1;\n\n    let stripped = value.replace(/^-/, '').toUpperCase();\n\n    if (stripped.match(/^0X[0-9A-F]+$/)) {\n        stripped = stripped.replace(/^0x/, '');\n    } else if (stripped.match(/^\\$[0-9A-F]+$/)) {\n        stripped = stripped.replace(/^\\$/, '');\n    } else {\n        throw new TypeError('invalid hex number ' + value);\n    }\n\n    return sign * parseInt(stripped, 16);\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport {setImmediate} from './setImmediate';\n\nimport SchedulerInterface from './SchedulerInterface';\nimport TaskInterface from './TaskInterface';\n\nclass ImmediateScheduler implements SchedulerInterface {\n\n    start<T>(worker: SchedulerInterface.WorkerInterface<T>, context?: T): TaskInterface {\n        let terminate = false;\n\n        function handler() {\n            if (terminate)  {\n                return;\n            }\n\n            worker(context);\n            setImmediate(handler);\n        }\n\n        setImmediate(handler);\n\n        return {\n            stop: () => terminate = true\n        };\n    }\n}\n\nexport default ImmediateScheduler;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport SchedulerInterface from './SchedulerInterface';\nimport TaskInterface from './TaskInterface';\n\nclass PeriodicScheduler implements SchedulerInterface {\n\n    constructor(private _period: number) {}\n\n    setPeriod(period: number): PeriodicScheduler {\n        this._period = period;\n\n        return this;\n    }\n\n    getPeriod(): number {\n        return this._period;\n    }\n\n    start<T>(worker: SchedulerInterface.WorkerInterface<T>, context?: T): TaskInterface {\n        let terminate = false;\n\n        const handler = () => {\n            if (terminate) {\n                return;\n            }\n\n            worker(context);\n\n            setTimeout(handler, this._period);\n        };\n\n        setTimeout(handler, this._period);\n\n        return {\n            stop: () => terminate = true\n        };\n    }\n}\n\nexport default PeriodicScheduler;\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport * as polyfill from 'setimmediate2';\n\n// Make sure that setTimeout is called every now and then in order to work around\n// scheduling issues in chrome.\n\nconst enum CONST {\n    setTimeoutRecurrence = 10\n}\n\nlet index = 0;\n\nexport function setImmediate(callback: () => void) {\n    if (index === 0) {\n        setTimeout(callback, 0);\n    } else {\n        polyfill.setImmediate(callback);\n    }\n\n    index = (index + 1) % CONST.setTimeoutRecurrence;\n}\n",
    "/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript.\n *\n *   Copyright (C) 2014 - 2017 Christian Speckner & contributors\n *\n *   This program is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License along\n *   with this program; if not, write to the Free Software Foundation, Inc.,\n *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n */\n\nimport EhBasicCLI from '../cli/EhBasicCLI';\nimport JqtermCLIRunner from '../cli/JqtermCLIRunner';\nimport PrepackagedFilesystemProvider from '../fs/PrepackagedFilesystemProvider';\n\nexport function run(\n    fileBlob: PrepackagedFilesystemProvider.BlobInterface,\n    terminalElt: JQuery,\n    interruptButton: JQuery,\n    clearButton: JQuery\n) {\n    const fsProvider = new PrepackagedFilesystemProvider(fileBlob),\n        cli = new EhBasicCLI(fsProvider),\n        runner = new JqtermCLIRunner(cli, terminalElt, {\n            interruptButton,\n            clearButton\n        });\n\n    cli.allowQuit(false);\n    runner.startup();\n}\n"
  ]
}